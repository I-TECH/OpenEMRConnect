<channel>
  <id>f4a43a55-c918-4766-902c-cd8cd7ed14fd</id>
  <name>cpad-companion-poll-filesystem</name>
  <description></description>
  <enabled>true</enabled>
  <version>2.1.1.5490</version>
  <lastModified>
    <time>1333099180718</time>
    <timezone>America/Los_Angeles</timezone>
  </lastModified>
  <revision>558</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">File Reader</property>
      <property name="FTPAnonymous">1</property>
      <property name="autoDelete">0</property>
      <property name="binary">0</property>
      <property name="charsetEncoding">UTF-8</property>
      <property name="checkFileAge">1</property>
      <property name="fileAge">5000</property>
      <property name="fileFilter">*</property>
      <property name="host">/opt/mirthconnect/appdata/cpad-incoming</property>
      <property name="moveToDirectory">/opt/mirthconnect/appdata/cpad-processed</property>
      <property name="moveToErrorDirectory">/opt/mirthconnect/appdata/cpad-error</property>
      <property name="moveToPattern">${ORIGINALNAME}_${date.get(&apos;yyyyMdHms&apos;)}</property>
      <property name="passive">1</property>
      <property name="password">anonymous</property>
      <property name="pollingFrequency">1000</property>
      <property name="pollingType">interval</property>
      <property name="processBatchFiles">1</property>
      <property name="regex">0</property>
      <property name="scheme">file</property>
      <property name="secure">1</property>
      <property name="sortAttribute">date</property>
      <property name="timeout">10000</property>
      <property name="username">anonymous</property>
      <property name="validateConnections">1</property>
    </properties>
    <transformer>
      <steps/>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundProtocol>DELIMITED</inboundProtocol>
      <outboundProtocol>DELIMITED</outboundProtocol>
      <inboundProperties>
        <property name="batchGroupingColumn"></property>
        <property name="batchMessageDelimiter"></property>
        <property name="batchMessageDelimiterIncluded">false</property>
        <property name="batchScript"></property>
        <property name="batchSkipRecords">0</property>
        <property name="batchSplitByRecord">true</property>
        <property name="columnDelimiter">\t</property>
        <property name="columnNames"></property>
        <property name="columnWidths"></property>
        <property name="escapeWithDoubleQuote">false</property>
        <property name="ignoreCR">true</property>
        <property name="numberedRows">false</property>
        <property name="quoteChar"></property>
        <property name="quoteEscapeChar">\</property>
        <property name="recordDelimiter">\n</property>
      </inboundProperties>
      <outboundProperties>
        <property name="batchGroupingColumn"></property>
        <property name="batchMessageDelimiter"></property>
        <property name="batchMessageDelimiterIncluded">false</property>
        <property name="batchScript"></property>
        <property name="batchSkipRecords">0</property>
        <property name="batchSplitByRecord">true</property>
        <property name="columnDelimiter">\t</property>
        <property name="columnNames"></property>
        <property name="columnWidths"></property>
        <property name="escapeWithDoubleQuote">false</property>
        <property name="ignoreCR">true</property>
        <property name="numberedRows">false</property>
        <property name="quoteChar"></property>
        <property name="quoteEscapeChar">\</property>
        <property name="recordDelimiter">\n</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.1.1.5490</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Save CDA to filesystem</name>
      <properties>
        <property name="DataType">File Writer</property>
        <property name="FTPAnonymous">1</property>
        <property name="binary">0</property>
        <property name="charsetEncoding">UTF-8</property>
        <property name="host">/opt/mirthconnect/appdata/cpad-outgoing</property>
        <property name="outputAppend">0</property>
        <property name="outputPattern">${pid}_${date.get(&apos;yyyyMdHms&apos;)}.xml</property>
        <property name="passive">1</property>
        <property name="password">anonymous</property>
        <property name="scheme">file</property>
        <property name="secure">1</property>
        <property name="template">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
${XmlUtil.prettyPrint(${message.transformedData})}</property>
        <property name="timeout">10000</property>
        <property name="username">anonymous</property>
        <property name="validateConnections">1</property>
      </properties>
      <transformer>
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>Setup</name>
            <script>// The root OID to use for id elements (ideally, this should be unique to each instance of C-PAD).
// Use the tblOrganization.SiteCode value for the final value (after &apos;11.4.1&apos;), if it exists.
// Otherwise, just use &apos;1&apos;. Code for this is in the &apos;Process header&apos; step.
var idRootOid = &quot;1.3.6.1.4.1.150.2474.11.4.1.&quot;;
var medCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.5&quot;;
var medCodeSystemName = &quot;OEC Kenya Medication Codes&quot;;
var labCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.6&quot;;
var labCodeSystemName = &quot;OEC Kenya Laboratory Test Codes&quot;;

// Setup namespaces for outbound CDA
var xsd = new Namespace(&quot;xsd&quot;, &quot;http://www.w3.org/2001/XMLSchema&quot;);
var xsi = new Namespace(&quot;xsi&quot;, &quot;http://www.w3.org/2001/XMLSchema-instance&quot;);
var v3 = new Namespace(&quot;v3&quot;, &quot;urn:hl7-org:v3&quot;);
default xml namespace = v3;

// This function is useful to help switch namespaces whenever reading a data element from
// the CSV file since the namespace on that file differs from that of the outbound CDA.
function msgRead(col) {
  default xml namespace = &quot;&quot;;
  var data = msg[&apos;row&apos;][&apos;column&apos; + col].toString();
  default xml namespace = v3;
  return (data);
}

// Trim leading and trailing whitespace from a text string
function trim(str) {
  return str.replace(/^\s\s*/, &apos;&apos;).replace(/\s\s*$/, &apos;&apos;);
}

// This function will attempt to lookup a given medication name and return an object containing:
// 1) the RxNorm code (if a match is found, else the original input)
// 2) the RxNorm code system name (if match is found, else &apos;medCodeSystemName&apos; variable)
// 3) the RxNorm code system oid (if match is found, else &apos;medCodeSystemOid&apos; variable)
// 4) the RxNorm display name (if match is found, else the original input)
function lookupMed(med) {
  var lookupTable = {
    &apos;3tc&apos;:{
      &apos;code&apos;:&apos;68244&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine&apos;
    },
    &apos;3tc(150)&apos;:{
      &apos;code&apos;:&apos;199147&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine 150 MG Oral Tablet&apos;
    },
    &apos;abc&apos;:{
      &apos;code&apos;:&apos;190521&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir&apos;
    },
    &apos;abc(300)&apos;:{
      &apos;code&apos;:&apos;242679&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir 300 MG Oral Tablet&apos;
    },
    &apos;alluvia&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;atv/r&apos;:{
      &apos;code&apos;:&apos;343047&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Atazanavir&apos;
    },
    &apos;azt&apos;:{
      &apos;code&apos;:&apos;11413&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine&apos;
    },
    &apos;azt(300)&apos;:{
      &apos;code&apos;:&apos;199663&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine 300 MG Oral Tablet&apos;
    },
    &apos;combivir&apos;:{
      &apos;code&apos;:&apos;192254&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Combivir&apos;
    },
    &apos;d4t&apos;:{
      &apos;code&apos;:&apos;59763&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine&apos;
    },
    &apos;d4t(30)&apos;:{
      &apos;code&apos;:&apos;313109&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 30 MG Oral Capsule&apos;
    },
    &apos;d4t(40)&apos;:{
      &apos;code&apos;:&apos;313110&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 40 MG Oral Capsule&apos;
    },
    &apos;ddi&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddi(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddi(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddl(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;efv&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;idv/r&apos;:{
      &apos;code&apos;:&apos;114289&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Indinavir&apos;
    },
    &apos;kal&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;kaletra&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;lop/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpr&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpr/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpv&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpv/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;nfv&apos;:{
      &apos;code&apos;:&apos;134527&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir&apos;
    },
    &apos;nfv(250)&apos;:{
      &apos;code&apos;:&apos;311924&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir 250 MG Oral Tablet&apos;
    },
    &apos;nvp&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(0-&lt;10kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(10-&lt;20kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp syr&apos;:{
      &apos;code&apos;:&apos;311943&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine 10 MG/ML Oral Suspension&apos;
    },
    &apos;tdf&apos;:{
      &apos;code&apos;:&apos;117466&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Tenofovir&apos;
    },
    &apos;viramine&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    }
  };

  if (lookupTable[med.toLowerCase()]) {
    var retObj = lookupTable[med.toLowerCase()];
  } else {
    var retObj = {
      &apos;code&apos;:med,
      &apos;codeSystemName&apos;:medCodeSystemName,
      &apos;codeSystemOid&apos;:medCodeSystemOid,
      &apos;displayName&apos;:med
    };
  }

  return (retObj);
}

// This function will attempt to determine if a given medication string is really multiple medications.
// If so, it will split the string into its component medications and return them as an array.
// If not, it will return the original medication as an array (with one element).
function processMedName(med, flag) {
  // if flag not passed, ignore
  // otherwise use a different set of delimiters
  if (typeof flag !== &apos;undefined&apos;)
    var regimenDelimiters = /[\+,\.]/;
  else
    var regimenDelimiters = /[\+,\/\.]/;

  med = med.replace(/\s+\(/, &quot;(&quot;);
  med = med.replace(/ /g, &quot;_&quot;);
  med = med.replace(/\/100/g, &quot;|100&quot;);
  if (med.toLowerCase().search(regimenDelimiters) &gt;= 0) {
    if (med.toLowerCase().search(&apos;/r&apos;) &gt;= 0) {
      med = med.replace(/\/r/g, &quot;^r&quot;);
      med = med.replace(/\/R/g, &quot;^R&quot;);
    }

    var retArr = med.split(regimenDelimiters);
    for (var i = 0; i &lt; retArr.length; i++) {
      if (retArr[i] == &quot;&quot; || retArr[i] == null || retArr[i].length &lt; 1) continue;
      retArr[i] = lookupMed(retArr[i].replace(/^[0-9]+-/, &apos;&apos;)
                                     .replace(/^.*=/, &apos;&apos;)
                                     .replace(/_/g, &quot; &quot;)
                                     .replace(/\|/g, &quot;/&quot;)
                                     .replace(/\^r/g, &quot;/r&quot;)
                                     .replace(/\^R/g, &quot;/R&quot;)
                                     .replace(/^\s\s*/, &apos;&apos;)
                                     .replace(/\s\s*$/, &apos;&apos;));
    }
    return (retArr);
  } else {
    var retArr = [lookupMed(med)];
    return (retArr);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>// The root OID to use for id elements (ideally, this should be unique to each instance of C-PAD).
// Use the tblOrganization.SiteCode value for the final value (after &apos;11.4.1&apos;), if it exists.
// Otherwise, just use &apos;1&apos;. Code for this is in the &apos;Process header&apos; step.
var idRootOid = &quot;1.3.6.1.4.1.150.2474.11.4.1.&quot;;
var medCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.5&quot;;
var medCodeSystemName = &quot;OEC Kenya Medication Codes&quot;;
var labCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.6&quot;;
var labCodeSystemName = &quot;OEC Kenya Laboratory Test Codes&quot;;

// Setup namespaces for outbound CDA
var xsd = new Namespace(&quot;xsd&quot;, &quot;http://www.w3.org/2001/XMLSchema&quot;);
var xsi = new Namespace(&quot;xsi&quot;, &quot;http://www.w3.org/2001/XMLSchema-instance&quot;);
var v3 = new Namespace(&quot;v3&quot;, &quot;urn:hl7-org:v3&quot;);
default xml namespace = v3;

// This function is useful to help switch namespaces whenever reading a data element from
// the CSV file since the namespace on that file differs from that of the outbound CDA.
function msgRead(col) {
  default xml namespace = &quot;&quot;;
  var data = msg[&apos;row&apos;][&apos;column&apos; + col].toString();
  default xml namespace = v3;
  return (data);
}

// Trim leading and trailing whitespace from a text string
function trim(str) {
  return str.replace(/^\s\s*/, &apos;&apos;).replace(/\s\s*$/, &apos;&apos;);
}

// This function will attempt to lookup a given medication name and return an object containing:
// 1) the RxNorm code (if a match is found, else the original input)
// 2) the RxNorm code system name (if match is found, else &apos;medCodeSystemName&apos; variable)
// 3) the RxNorm code system oid (if match is found, else &apos;medCodeSystemOid&apos; variable)
// 4) the RxNorm display name (if match is found, else the original input)
function lookupMed(med) {
  var lookupTable = {
    &apos;3tc&apos;:{
      &apos;code&apos;:&apos;68244&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine&apos;
    },
    &apos;3tc(150)&apos;:{
      &apos;code&apos;:&apos;199147&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine 150 MG Oral Tablet&apos;
    },
    &apos;abc&apos;:{
      &apos;code&apos;:&apos;190521&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir&apos;
    },
    &apos;abc(300)&apos;:{
      &apos;code&apos;:&apos;242679&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir 300 MG Oral Tablet&apos;
    },
    &apos;alluvia&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;atv/r&apos;:{
      &apos;code&apos;:&apos;343047&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Atazanavir&apos;
    },
    &apos;azt&apos;:{
      &apos;code&apos;:&apos;11413&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine&apos;
    },
    &apos;azt(300)&apos;:{
      &apos;code&apos;:&apos;199663&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine 300 MG Oral Tablet&apos;
    },
    &apos;combivir&apos;:{
      &apos;code&apos;:&apos;192254&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Combivir&apos;
    },
    &apos;d4t&apos;:{
      &apos;code&apos;:&apos;59763&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine&apos;
    },
    &apos;d4t(30)&apos;:{
      &apos;code&apos;:&apos;313109&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 30 MG Oral Capsule&apos;
    },
    &apos;d4t(40)&apos;:{
      &apos;code&apos;:&apos;313110&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 40 MG Oral Capsule&apos;
    },
    &apos;ddi&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddi(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddi(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddl(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;efv&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;idv/r&apos;:{
      &apos;code&apos;:&apos;114289&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Indinavir&apos;
    },
    &apos;kal&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;kaletra&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;lop/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpr&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpr/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpv&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpv/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;nfv&apos;:{
      &apos;code&apos;:&apos;134527&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir&apos;
    },
    &apos;nfv(250)&apos;:{
      &apos;code&apos;:&apos;311924&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir 250 MG Oral Tablet&apos;
    },
    &apos;nvp&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(0-&lt;10kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(10-&lt;20kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp syr&apos;:{
      &apos;code&apos;:&apos;311943&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine 10 MG/ML Oral Suspension&apos;
    },
    &apos;tdf&apos;:{
      &apos;code&apos;:&apos;117466&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Tenofovir&apos;
    },
    &apos;viramine&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    }
  };

  if (lookupTable[med.toLowerCase()]) {
    var retObj = lookupTable[med.toLowerCase()];
  } else {
    var retObj = {
      &apos;code&apos;:med,
      &apos;codeSystemName&apos;:medCodeSystemName,
      &apos;codeSystemOid&apos;:medCodeSystemOid,
      &apos;displayName&apos;:med
    };
  }

  return (retObj);
}

// This function will attempt to determine if a given medication string is really multiple medications.
// If so, it will split the string into its component medications and return them as an array.
// If not, it will return the original medication as an array (with one element).
function processMedName(med, flag) {
  // if flag not passed, ignore
  // otherwise use a different set of delimiters
  if (typeof flag !== &apos;undefined&apos;)
    var regimenDelimiters = /[\+,\.]/;
  else
    var regimenDelimiters = /[\+,\/\.]/;

  med = med.replace(/\s+\(/, &quot;(&quot;);
  med = med.replace(/ /g, &quot;_&quot;);
  med = med.replace(/\/100/g, &quot;|100&quot;);
  if (med.toLowerCase().search(regimenDelimiters) &gt;= 0) {
    if (med.toLowerCase().search(&apos;/r&apos;) &gt;= 0) {
      med = med.replace(/\/r/g, &quot;^r&quot;);
      med = med.replace(/\/R/g, &quot;^R&quot;);
    }

    var retArr = med.split(regimenDelimiters);
    for (var i = 0; i &lt; retArr.length; i++) {
      if (retArr[i] == &quot;&quot; || retArr[i] == null || retArr[i].length &lt; 1) continue;
      retArr[i] = lookupMed(retArr[i].replace(/^[0-9]+-/, &apos;&apos;)
                                     .replace(/^.*=/, &apos;&apos;)
                                     .replace(/_/g, &quot; &quot;)
                                     .replace(/\|/g, &quot;/&quot;)
                                     .replace(/\^r/g, &quot;/r&quot;)
                                     .replace(/\^R/g, &quot;/R&quot;)
                                     .replace(/^\s\s*/, &apos;&apos;)
                                     .replace(/\s\s*$/, &apos;&apos;));
    }
    return (retArr);
  } else {
    var retArr = [lookupMed(med)];
    return (retArr);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>Process header</name>
            <script>var maxParticipants = 3;
var idxHeaderBase = 1;
var idxHeaderOffsets = {
  &apos;facName&apos;:0, &apos;facCode&apos;:1, &apos;facCounty&apos;:2, &apos;facState&apos;:3, &apos;sourceSystem&apos;:4, &apos;pid&apos;:5, &apos;lname1&apos;:6,
  &apos;lname2&apos;:7, &apos;fname1&apos;:8, &apos;fname2&apos;:9, &apos;fname3&apos;:10, &apos;dob&apos;:11, &apos;sex&apos;:12, &apos;addr1&apos;:13,
  &apos;addr2&apos;:14, &apos;city&apos;:15, &apos;county&apos;:16, &apos;state&apos;:17, &apos;landmark&apos;:18, &apos;phone1&apos;:19,
  &apos;phone2&apos;: 20, &apos;phone3&apos;:21, &apos;marStatus&apos;:22, &apos;healthCtr&apos;:23, &apos;lname1Sup1&apos;:24,
  &apos;lname2Sup1&apos;:25, &apos;fname1Sup1&apos;:26, &apos;fname2Sup1&apos;:27, &apos;fname3Sup1&apos;:28, &apos;relSup1&apos;:29,
  &apos;addr1Sup1&apos;:30, &apos;addr2Sup1&apos;:31, &apos;citySup1&apos;:32, &apos;countySup1&apos;:33, &apos;stateSup1&apos;:34,
  &apos;phoneSup1&apos;:35, &apos;lname1Sup2&apos;:36, &apos;lname2Sup2&apos;:37, &apos;fname1Sup2&apos;:37, &apos;fname2Sup2&apos;:39,
  &apos;fname3Sup2&apos;:40, &apos;relSup2&apos;:41, &apos;addr1Sup2&apos;:42, &apos;addr2Sup2&apos;:43, &apos;citySup2&apos;:44,
  &apos;countySup2&apos;:45, &apos;stateSup2&apos;:46, &apos;phoneSup2&apos;:47, &apos;lname1Sup3&apos;:48, &apos;lname2Sup3&apos;:49,
  &apos;fname1Sup3&apos;:50, &apos;fname2Sup3&apos;:51, &apos;fname3Sup3&apos;:52, &apos;relSup3&apos;:53, &apos;addr1Sup3&apos;:54,
  &apos;addr2Sup3&apos;:55, &apos;citySup3&apos;:56, &apos;countySup3&apos;:57, &apos;stateSup3&apos;:58, &apos;phoneSup3&apos;:59
};

// Set some channel variables for use in later mappings
channelMap.put(&apos;facName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facName&apos;])));
channelMap.put(&apos;pid&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;pid&apos;])));
channelMap.put(&apos;softwareName&apos;, channelMap.get(&apos;facName&apos;) + &quot; CPAD-Companion v.1.0&quot;);
channelMap.put(&apos;currDTZ&apos;, DateUtil.getCurrentDate(&quot;yyyyMMddHHmmssZ&quot;));
channelMap.put(&apos;currDT&apos;, DateUtil.getCurrentDate(&quot;yyyy-MM-dd HH:mm:ss&quot;));

// Update root OID value with facility information
var facCode = msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCode&apos;]);
if (trim(facCode) != &quot;&quot; &amp;&amp; facCode != null) {
  idRootOid += trim(facCode);
  channelMap.put(&apos;facCode&apos;, trim(facCode));
} else {
  idRootOid += &apos;1&apos;;
  channelMap.put(&apos;facCode&apos;, &apos;1&apos;);
}

// Pull out some other values to be used as index fields in the CDS
channelMap.put(&apos;firstName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;])));
channelMap.put(&apos;lastName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;])));
channelMap.put(&apos;birthDate&apos;, msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]));
channelMap.put(&apos;gender&apos;, &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
                         &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;N&quot;);
channelMap.put(&apos;sourceSystem&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sourceSystem&apos;])));

// Start populating header elements
tmp[&apos;id&apos;][&apos;@extension&apos;] += &quot;_&quot; + channelMap.get(&apos;facName&apos;) + &quot;_&quot; + facCode + &quot;_&quot; + channelMap.get(&apos;pid&apos;) +
  &quot;_&quot; + channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;title&apos;] += &quot; - &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]) +
  &quot; &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]) + &quot; - &quot; +
  channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;effectiveTime&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;pid&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;city&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;city&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;county&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;state&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phone1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;family&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;given&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] =
  &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
  &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;&quot;;
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@displayName&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCounty&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facState&apos;]);
tmp[&apos;author&apos;][&apos;time&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;assignedAuthoringDevice&apos;][&apos;softwareName&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);

// Handle multiple participant blocks
var repl = &lt;replacement/&gt;;
var participantTmpl = tmp[&apos;participant&apos;].copy();
for (var i = 0; i &lt; maxParticipants; i++) {
  if ((msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == null)) {
    continue;
  }

  var tmpParticipant = participantTmpl.copy();
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;family&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;given&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]);

  // Replace any remaining required values with nullFlavor=&quot;UNK&quot;
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated participant node to the replacement node
  repl.appendChild(tmpParticipant);
}

// Replace the original empty participant node with the populated replacement node
tmp.replace(&apos;participant&apos;, repl[&apos;participant&apos;]);

// If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

// &lt;administrativeGenderCode code=&quot;&quot; .../&gt; =&gt; &lt;administrativeGenderCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;];
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@codeSystem&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;birthTime value=&quot;&quot;/&gt; =&gt; &lt;birthTime nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;maritalStatusCode code=&quot;&quot;/&gt; =&gt; &lt;maritalStatusCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;telecom value=&quot;tel:&quot;/&gt; =&gt; &lt;telecom nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxParticipants = 3;
var idxHeaderBase = 1;
var idxHeaderOffsets = {
  &apos;facName&apos;:0, &apos;facCode&apos;:1, &apos;facCounty&apos;:2, &apos;facState&apos;:3, &apos;sourceSystem&apos;:4, &apos;pid&apos;:5, &apos;lname1&apos;:6,
  &apos;lname2&apos;:7, &apos;fname1&apos;:8, &apos;fname2&apos;:9, &apos;fname3&apos;:10, &apos;dob&apos;:11, &apos;sex&apos;:12, &apos;addr1&apos;:13,
  &apos;addr2&apos;:14, &apos;city&apos;:15, &apos;county&apos;:16, &apos;state&apos;:17, &apos;landmark&apos;:18, &apos;phone1&apos;:19,
  &apos;phone2&apos;: 20, &apos;phone3&apos;:21, &apos;marStatus&apos;:22, &apos;healthCtr&apos;:23, &apos;lname1Sup1&apos;:24,
  &apos;lname2Sup1&apos;:25, &apos;fname1Sup1&apos;:26, &apos;fname2Sup1&apos;:27, &apos;fname3Sup1&apos;:28, &apos;relSup1&apos;:29,
  &apos;addr1Sup1&apos;:30, &apos;addr2Sup1&apos;:31, &apos;citySup1&apos;:32, &apos;countySup1&apos;:33, &apos;stateSup1&apos;:34,
  &apos;phoneSup1&apos;:35, &apos;lname1Sup2&apos;:36, &apos;lname2Sup2&apos;:37, &apos;fname1Sup2&apos;:37, &apos;fname2Sup2&apos;:39,
  &apos;fname3Sup2&apos;:40, &apos;relSup2&apos;:41, &apos;addr1Sup2&apos;:42, &apos;addr2Sup2&apos;:43, &apos;citySup2&apos;:44,
  &apos;countySup2&apos;:45, &apos;stateSup2&apos;:46, &apos;phoneSup2&apos;:47, &apos;lname1Sup3&apos;:48, &apos;lname2Sup3&apos;:49,
  &apos;fname1Sup3&apos;:50, &apos;fname2Sup3&apos;:51, &apos;fname3Sup3&apos;:52, &apos;relSup3&apos;:53, &apos;addr1Sup3&apos;:54,
  &apos;addr2Sup3&apos;:55, &apos;citySup3&apos;:56, &apos;countySup3&apos;:57, &apos;stateSup3&apos;:58, &apos;phoneSup3&apos;:59
};

// Set some channel variables for use in later mappings
channelMap.put(&apos;facName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facName&apos;])));
channelMap.put(&apos;pid&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;pid&apos;])));
channelMap.put(&apos;softwareName&apos;, channelMap.get(&apos;facName&apos;) + &quot; CPAD-Companion v.1.0&quot;);
channelMap.put(&apos;currDTZ&apos;, DateUtil.getCurrentDate(&quot;yyyyMMddHHmmssZ&quot;));
channelMap.put(&apos;currDT&apos;, DateUtil.getCurrentDate(&quot;yyyy-MM-dd HH:mm:ss&quot;));

// Update root OID value with facility information
var facCode = msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCode&apos;]);
if (trim(facCode) != &quot;&quot; &amp;&amp; facCode != null) {
  idRootOid += trim(facCode);
  channelMap.put(&apos;facCode&apos;, trim(facCode));
} else {
  idRootOid += &apos;1&apos;;
  channelMap.put(&apos;facCode&apos;, &apos;1&apos;);
}

// Pull out some other values to be used as index fields in the CDS
channelMap.put(&apos;firstName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;])));
channelMap.put(&apos;lastName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;])));
channelMap.put(&apos;birthDate&apos;, msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]));
channelMap.put(&apos;gender&apos;, &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
                         &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;N&quot;);
channelMap.put(&apos;sourceSystem&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sourceSystem&apos;])));

// Start populating header elements
tmp[&apos;id&apos;][&apos;@extension&apos;] += &quot;_&quot; + channelMap.get(&apos;facName&apos;) + &quot;_&quot; + facCode + &quot;_&quot; + channelMap.get(&apos;pid&apos;) +
  &quot;_&quot; + channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;title&apos;] += &quot; - &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]) +
  &quot; &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]) + &quot; - &quot; +
  channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;effectiveTime&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;pid&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;city&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;city&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;county&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;state&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phone1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;family&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;given&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] =
  &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
  &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;&quot;;
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@displayName&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCounty&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facState&apos;]);
tmp[&apos;author&apos;][&apos;time&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;assignedAuthoringDevice&apos;][&apos;softwareName&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);

// Handle multiple participant blocks
var repl = &lt;replacement/&gt;;
var participantTmpl = tmp[&apos;participant&apos;].copy();
for (var i = 0; i &lt; maxParticipants; i++) {
  if ((msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == null)) {
    continue;
  }

  var tmpParticipant = participantTmpl.copy();
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;family&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;given&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]);

  // Replace any remaining required values with nullFlavor=&quot;UNK&quot;
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated participant node to the replacement node
  repl.appendChild(tmpParticipant);
}

// Replace the original empty participant node with the populated replacement node
tmp.replace(&apos;participant&apos;, repl[&apos;participant&apos;]);

// If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

// &lt;administrativeGenderCode code=&quot;&quot; .../&gt; =&gt; &lt;administrativeGenderCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;];
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@codeSystem&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;birthTime value=&quot;&quot;/&gt; =&gt; &lt;birthTime nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;maritalStatusCode code=&quot;&quot;/&gt; =&gt; &lt;maritalStatusCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;telecom value=&quot;tel:&quot;/&gt; =&gt; &lt;telecom nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>Process encounters section</name>
            <script>var maxEnc = 12;
var idxEncBases = {
  &apos;eid&apos;:257, &apos;date&apos;:258, &apos;type&apos;:259, &apos;clinInit&apos;:347
};
var idxEncOffset = 91;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  // if no id, we&apos;re done processing encounters, so break
  if (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == null ||
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == &quot;&quot;) {
    break;
  }

  var tmpText = textTmpl.copy();
  var tmpEntry = entryTmpl.copy();

  // save encounter id to use as reference in other body sections&#xd;//  channelMap.put(&apos;enc&apos; + i + &apos;Id&apos;, msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)));

  // Populate text elements
  var encId = &apos;EncType&apos; + i;
  var encType = msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
  var encContent = &lt;content ID={encId}&gt;{encType}&lt;/content&gt;;
  tmpText[&apos;td&apos;][0].appendChild(encContent);
  tmpText[&apos;td&apos;][1] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpText[&apos;td&apos;][2] =
    channelMap.get(&apos;facName&apos;);
  tmpText[&apos;td&apos;][3] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
  // Done populating encounter text elements

  // Append populated encounter text node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

  // Populate entry elements
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;assignedPerson&apos;][&apos;name&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    channelMap.get(&apos;facName&apos;);
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] =
    channelMap.get(&apos;facName&apos;);

  // Dispose of any unpopulated nodes
  if (msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == &quot;&quot; ||
      msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;performer&apos;];
  }

  if (channelMap.get(&apos;facName&apos;) == &quot;&quot; ||
      channelMap.get(&apos;facName&apos;) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;participant&apos;];
  }

  // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

  // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated encounter entry node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;].appendChild(tmpEntry);
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxEnc = 12;
var idxEncBases = {
  &apos;eid&apos;:257, &apos;date&apos;:258, &apos;type&apos;:259, &apos;clinInit&apos;:347
};
var idxEncOffset = 91;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  // if no id, we&apos;re done processing encounters, so break
  if (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == null ||
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == &quot;&quot;) {
    break;
  }

  var tmpText = textTmpl.copy();
  var tmpEntry = entryTmpl.copy();

  // save encounter id to use as reference in other body sections&#xd;//  channelMap.put(&apos;enc&apos; + i + &apos;Id&apos;, msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)));

  // Populate text elements
  var encId = &apos;EncType&apos; + i;
  var encType = msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
  var encContent = &lt;content ID={encId}&gt;{encType}&lt;/content&gt;;
  tmpText[&apos;td&apos;][0].appendChild(encContent);
  tmpText[&apos;td&apos;][1] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpText[&apos;td&apos;][2] =
    channelMap.get(&apos;facName&apos;);
  tmpText[&apos;td&apos;][3] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
  // Done populating encounter text elements

  // Append populated encounter text node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

  // Populate entry elements
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;assignedPerson&apos;][&apos;name&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    channelMap.get(&apos;facName&apos;);
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] =
    channelMap.get(&apos;facName&apos;);

  // Dispose of any unpopulated nodes
  if (msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == &quot;&quot; ||
      msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;performer&apos;];
  }

  if (channelMap.get(&apos;facName&apos;) == &quot;&quot; ||
      channelMap.get(&apos;facName&apos;) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;participant&apos;];
  }

  // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

  // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated encounter entry node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;].appendChild(tmpEntry);
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>Process allergies/reactions section</name>
            <script>var maxPoorAdh = 5;
var idxPoorAdhBases = {
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:324
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  for (var j = idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset);
           j &lt; idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset) + maxPoorAdh;
           j++) {
    // if the reason for poor adherence is not &apos;Toxicity/side effects&apos; or the medication name is empty,
    // then skip it (doesn&apos;t belong in this section)
    if (msgRead(j) != &quot;1-Toxicity/side effects&quot; ||
        trim(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset))) == &quot;&quot; ||
        msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)) == null) {
      continue;
    } else {
      // found med(s) to be added to this section, break loop when done (only need to add once per encounter)

      // Process the medication (or multiple medications if it&apos;s a regimen)
      var meds = processMedName(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
      for (var k = 0; k &lt; meds.length; k++) {

        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0] = &apos;Drug Intolerance&apos;;
        tmpText[&apos;td&apos;][1].appendChild(medContent);
        tmpText[&apos;td&apos;][2] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
        // Done populating allergies/reactions text elements

        // Append populated allergies/reactions text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId + &apos;-Intol&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;59037007&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Drug Intolerance&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Append populated allergies/reactions entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;].appendChild(tmpEntry);
      }

      break;
    }
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxPoorAdh = 5;
var idxPoorAdhBases = {
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:324
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  for (var j = idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset);
           j &lt; idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset) + maxPoorAdh;
           j++) {
    // if the reason for poor adherence is not &apos;Toxicity/side effects&apos; or the medication name is empty,
    // then skip it (doesn&apos;t belong in this section)
    if (msgRead(j) != &quot;1-Toxicity/side effects&quot; ||
        trim(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset))) == &quot;&quot; ||
        msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)) == null) {
      continue;
    } else {
      // found med(s) to be added to this section, break loop when done (only need to add once per encounter)

      // Process the medication (or multiple medications if it&apos;s a regimen)
      var meds = processMedName(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
      for (var k = 0; k &lt; meds.length; k++) {

        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0] = &apos;Drug Intolerance&apos;;
        tmpText[&apos;td&apos;][1].appendChild(medContent);
        tmpText[&apos;td&apos;][2] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
        // Done populating allergies/reactions text elements

        // Append populated allergies/reactions text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId + &apos;-Intol&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;59037007&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Drug Intolerance&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Append populated allergies/reactions entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;].appendChild(tmpEntry);
      }

      break;
    }
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>Process problems section</name>
            <script>var maxSideEff = 5;
var maxOtherProb = 5;
var idxProblemBases = {
  &apos;pregStat&apos;:267, &apos;edd&apos;:268, &apos;tbStat&apos;:275, &apos;tbTxStMo&apos;:276, &apos;tbTxStYr&apos;:277, &apos;tbTxNo&apos;:278, &apos;sideEff&apos;:279, &apos;othProb&apos;:284
};

// Lookup table to get codes for the known picklist values
var conditionLookup = {
  &apos;1-Peripheral neuropathy&apos;:{
    &apos;code&apos;:&apos;11060002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Disease related peripheral neuropathy&apos;
  },
  &apos;2-Rash&apos;:{
    &apos;code&apos;:&apos;2666970015&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;C/O: a rash&apos;
  },
  &apos;3-Anaemia&apos;:{
    &apos;code&apos;:&apos;271737000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Anemia&apos;
  },
  &apos;4-Pancreatitis&apos;:{
    &apos;code&apos;:&apos;75694006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pancreatitis&apos;
  },
  &apos;5-Jaundice&apos;:{
    &apos;code&apos;:&apos;18165001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Jaundice&apos;
  },
  &apos;6-Fat redistribution&apos;:{
    &apos;code&apos;:&apos;71325002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Lipodystrophy&apos;
  },
  &apos;7-Hypersensitivity&apos;:{
    &apos;code&apos;:&apos;257550005&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Hypersensitivity&apos;
  },
  &apos;8-Hepatotoxicity&apos;:{
    &apos;code&apos;:&apos;197354009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Toxic liver disease&apos;
  },
  &apos;9-CNS: dizzy, anxiety, nightmare, depression&apos;:{
    &apos;code&apos;:&apos;246557006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;CNS symptom&apos;
  },
  &apos;1-Zoster&apos;:{
    &apos;code&apos;:&apos;4740000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Herpes zoster&apos;
  },
  &apos;2-Pneumonia&apos;:{
    &apos;code&apos;:&apos;233604007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pneumonia&apos;
  },
  &apos;3-DEmentia/Enceph&apos;:{
    &apos;code&apos;:&apos;52448006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Dementia&apos;
  },
  &apos;4-Thrush (oral/vaginal)&apos;:{
    &apos;code&apos;:&apos;78048006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Candidiasis&apos;
  },
  &apos;5-Ulcers (mouth or other)&apos;:{
    &apos;code&apos;:&apos;125318001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Multiple ulcers&apos;
  },
  &apos;6-Fever&apos;:{
    &apos;code&apos;:&apos;386661006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Fever&apos;
  },
  &apos;7-Cough&apos;:{
    &apos;code&apos;:&apos;49727002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Cough&apos;
  },
  &apos;8-DB difficult breathing&apos;:{
    &apos;code&apos;:&apos;230145002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Difficulty breathing&apos;
  },
  &apos;9-IRIS Immune reconstitution Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;426202004&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Immune reconstitution syndrome&apos;
  },
  &apos;10-Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;238149007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Systemic inflammatory response syndrome&apos;
  },
  &apos;11-Weight loss&apos;:{
    &apos;code&apos;:&apos;422868009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Unexplained weight loss&apos;
  },
  &apos;12-UD urethral discharge&apos;:{
    &apos;code&apos;:&apos;9957009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Urethral discharge&apos;
  },
  &apos;13-PID pelvic inflammatory disease&apos;:{
    &apos;code&apos;:&apos;237037006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Acute pelvic inflammatory disease&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add pregnancy status, if available
  var pregStat = msgRead(idxProblemBases[&apos;pregStat&apos;] + (i * idxEncOffset));
  if (trim(pregStat) != &quot;&quot; &amp;&amp; pregStat != null &amp;&amp; (pregStat == &apos;Yes&apos; || pregStat == &apos;No&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var pregStatId = &apos;PregStat-&apos; + i;
    var pregStatCode = &apos;&apos;;
    var pregStatDisp = &apos;&apos;;
    if (pregStat == &apos;Yes&apos;) {
      pregStatCode = &apos;77386006&apos;;
      pregStatDisp = &apos;Patient currently pregnant&apos;;
    } else {
      pregStatCode = &apos;60001007&apos;;
      pregStatDisp = &apos;Not pregnant&apos;;
    }

    // populate template for EDD observation, if data exists
    var edd = msgRead(idxProblemBases[&apos;edd&apos;] + (i * idxEncOffset));
    var eddObs = &apos;&apos;;
    if (trim(edd) != &quot;&quot; &amp;&amp; edd != null) {
      var author = channelMap.get(&apos;softwareName&apos;);
      var eddId = &apos;EDD-&apos; + i;
      eddObs =
        &lt;entryRelationship typeCode=&quot;SUBJ&quot;&gt;
         &lt;observation classCode=&quot;OBS&quot; moodCode=&quot;EVN&quot;&gt;
          &lt;templateId root=&quot;2.16.840.1.113883.10.20.1.28&quot; assigningAuthorityName=&quot;CCD&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.4.13&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.1.11.2.3.1&quot;/&gt;
          &lt;statusCode code=&quot;completed&quot;/&gt;
          &lt;effectiveTime value={visitDate}/&gt;
          &lt;author typeCode=&quot;AUT&quot;&gt;
           &lt;time value={visitDate}/&gt;
           &lt;assignedAuthor&gt;
            &lt;id root=&quot;1.3.6.1.4.1.150.2474.11.2.1.1.2&quot; extension={author}/&gt;
           &lt;/assignedAuthor&gt;
          &lt;/author&gt;
          &lt;id root={idRootOid} extension={eddId}/&gt;
          &lt;code code=&quot;161714006&quot; displayName=&quot;Estimated date of delivery&quot; codeSystem=&quot;2.16.840.1.113883.6.96&quot; codeSystemName=&quot;SNOMED-CT&quot;/&gt;
          &lt;value value={edd}/&gt;
         &lt;/observation&gt;
        &lt;/entryRelationship&gt;;
      eddObs.addNamespace(xsi);
      eddObs.observation.value.@xsi::type = &quot;TS&quot;;
    }

    // Populate text elements
    var pregStatContent = &lt;content ID={pregStatId}&gt;Pregnancy Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(pregStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = pregStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + pregStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = pregStatCode;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = pregStatDisp;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    if (eddObs != &apos;&apos;)&#xd;      tmpEntry[&apos;act&apos;].appendChild(eddObs);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add TB status, if available
  var tbStat = msgRead(idxProblemBases[&apos;tbStat&apos;] + (i * idxEncOffset));
  if (trim(tbStat) != &quot;&quot; &amp;&amp; tbStat != null &amp;&amp; (tbStat == &apos;1. NO signs&apos; || tbStat == &apos;2. TB suspected&apos; || tbStat == &apos;3. TB RX&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var tbStatId = &apos;TbStat-&apos; + i;
    var tbStatDisp = &apos;&apos;;
    if (tbStat == &apos;1. NO signs&apos;) {
      tbStatDisp = &apos;No signs or symptoms suggesting TB&apos;;
    } else if (tbStat == &apos;2. TB suspected&apos;) {
      tbStatDisp = &apos;TB referral or sputum sent&apos;;
    } else {
      tbStatDisp = &apos;Currently on TB treatment&apos;;
      var tbStMo = msgRead(idxProblemBases[&apos;tbTxStMo&apos;] + (i * idxEncOffset));
      var tbStYr = msgRead(idxProblemBases[&apos;tbTxStYr&apos;] + (i * idxEncOffset));
      var tbNo = msgRead(idxProblemBases[&apos;tbTxNo&apos;] + (i * idxEncOffset));
      if (trim(tbStMo) != &quot;&quot; &amp;&amp; tbStMo != null &amp;&amp; trim(tbStYr) != &quot;&quot; &amp;&amp; tbStYr != null)
        tbStatDisp += &apos;. Treatment started on &apos; + tbStMo + &apos;/&apos; + tbStYr + &apos; (MM/YY)&apos;;
      if (trim(tbNo) != &quot;&quot; &amp;&amp; tbNo != null)
        tbStatDisp += &apos;. Treatment number &apos; + tbNo;
    }
    var tbStatValue = &lt;value&gt;{tbStatDisp}&lt;/value&gt;;
    tbStatValue.addNamespace(xsi);
    tbStatValue.@xsi::type = &quot;ST&quot;;

    // Populate text elements
    var tbStatContent = &lt;content ID={tbStatId}&gt;TB Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(tbStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = tbStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + tbStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(tbStatValue);
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over potential side effects and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset) + maxSideEff;
           j++) {
    var sideEff = msgRead(j);
    if (trim(sideEff) == &quot;&quot; || sideEff == null || trim(sideEff) == &apos;None&apos; || trim(sideEff) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(sideEff)]) {
        var sideEffDisp = conditionLookup[trim(sideEff)][&apos;displayName&apos;];
      } else {
        var sideEffDisp = trim(sideEff);
      }

      // Populate text elements
      var condId = &apos;SideEffect-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{sideEffDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(sideEff)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(sideEff)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = sideEffDisp;
      } else {
        var value = &lt;value&gt;{sideEffDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // Loop over New OIs/Other Problems and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset) + maxOtherProb;
           j++) {
    var othProb = msgRead(j);
    if (trim(othProb) == &quot;&quot; || othProb == null || trim(othProb) == &apos;None&apos; || trim(othProb) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(othProb)]) {
        var othProbDisp = conditionLookup[trim(othProb)][&apos;displayName&apos;];
      } else {
        var othProbDisp = trim(othProb).replace(/^[0-9]+-/, &apos;&apos;);
      }

      // Populate text elements
      var condId = &apos;OtherCondition-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{othProbDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(othProb)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(othProb)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = othProbDisp;
      } else {
        var value = &lt;value&gt;{othProbDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxSideEff = 5;
var maxOtherProb = 5;
var idxProblemBases = {
  &apos;pregStat&apos;:267, &apos;edd&apos;:268, &apos;tbStat&apos;:275, &apos;tbTxStMo&apos;:276, &apos;tbTxStYr&apos;:277, &apos;tbTxNo&apos;:278, &apos;sideEff&apos;:279, &apos;othProb&apos;:284
};

// Lookup table to get codes for the known picklist values
var conditionLookup = {
  &apos;1-Peripheral neuropathy&apos;:{
    &apos;code&apos;:&apos;11060002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Disease related peripheral neuropathy&apos;
  },
  &apos;2-Rash&apos;:{
    &apos;code&apos;:&apos;2666970015&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;C/O: a rash&apos;
  },
  &apos;3-Anaemia&apos;:{
    &apos;code&apos;:&apos;271737000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Anemia&apos;
  },
  &apos;4-Pancreatitis&apos;:{
    &apos;code&apos;:&apos;75694006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pancreatitis&apos;
  },
  &apos;5-Jaundice&apos;:{
    &apos;code&apos;:&apos;18165001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Jaundice&apos;
  },
  &apos;6-Fat redistribution&apos;:{
    &apos;code&apos;:&apos;71325002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Lipodystrophy&apos;
  },
  &apos;7-Hypersensitivity&apos;:{
    &apos;code&apos;:&apos;257550005&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Hypersensitivity&apos;
  },
  &apos;8-Hepatotoxicity&apos;:{
    &apos;code&apos;:&apos;197354009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Toxic liver disease&apos;
  },
  &apos;9-CNS: dizzy, anxiety, nightmare, depression&apos;:{
    &apos;code&apos;:&apos;246557006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;CNS symptom&apos;
  },
  &apos;1-Zoster&apos;:{
    &apos;code&apos;:&apos;4740000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Herpes zoster&apos;
  },
  &apos;2-Pneumonia&apos;:{
    &apos;code&apos;:&apos;233604007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pneumonia&apos;
  },
  &apos;3-DEmentia/Enceph&apos;:{
    &apos;code&apos;:&apos;52448006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Dementia&apos;
  },
  &apos;4-Thrush (oral/vaginal)&apos;:{
    &apos;code&apos;:&apos;78048006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Candidiasis&apos;
  },
  &apos;5-Ulcers (mouth or other)&apos;:{
    &apos;code&apos;:&apos;125318001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Multiple ulcers&apos;
  },
  &apos;6-Fever&apos;:{
    &apos;code&apos;:&apos;386661006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Fever&apos;
  },
  &apos;7-Cough&apos;:{
    &apos;code&apos;:&apos;49727002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Cough&apos;
  },
  &apos;8-DB difficult breathing&apos;:{
    &apos;code&apos;:&apos;230145002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Difficulty breathing&apos;
  },
  &apos;9-IRIS Immune reconstitution Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;426202004&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Immune reconstitution syndrome&apos;
  },
  &apos;10-Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;238149007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Systemic inflammatory response syndrome&apos;
  },
  &apos;11-Weight loss&apos;:{
    &apos;code&apos;:&apos;422868009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Unexplained weight loss&apos;
  },
  &apos;12-UD urethral discharge&apos;:{
    &apos;code&apos;:&apos;9957009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Urethral discharge&apos;
  },
  &apos;13-PID pelvic inflammatory disease&apos;:{
    &apos;code&apos;:&apos;237037006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Acute pelvic inflammatory disease&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add pregnancy status, if available
  var pregStat = msgRead(idxProblemBases[&apos;pregStat&apos;] + (i * idxEncOffset));
  if (trim(pregStat) != &quot;&quot; &amp;&amp; pregStat != null &amp;&amp; (pregStat == &apos;Yes&apos; || pregStat == &apos;No&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var pregStatId = &apos;PregStat-&apos; + i;
    var pregStatCode = &apos;&apos;;
    var pregStatDisp = &apos;&apos;;
    if (pregStat == &apos;Yes&apos;) {
      pregStatCode = &apos;77386006&apos;;
      pregStatDisp = &apos;Patient currently pregnant&apos;;
    } else {
      pregStatCode = &apos;60001007&apos;;
      pregStatDisp = &apos;Not pregnant&apos;;
    }

    // populate template for EDD observation, if data exists
    var edd = msgRead(idxProblemBases[&apos;edd&apos;] + (i * idxEncOffset));
    var eddObs = &apos;&apos;;
    if (trim(edd) != &quot;&quot; &amp;&amp; edd != null) {
      var author = channelMap.get(&apos;softwareName&apos;);
      var eddId = &apos;EDD-&apos; + i;
      eddObs =
        &lt;entryRelationship typeCode=&quot;SUBJ&quot;&gt;
         &lt;observation classCode=&quot;OBS&quot; moodCode=&quot;EVN&quot;&gt;
          &lt;templateId root=&quot;2.16.840.1.113883.10.20.1.28&quot; assigningAuthorityName=&quot;CCD&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.4.13&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.1.11.2.3.1&quot;/&gt;
          &lt;statusCode code=&quot;completed&quot;/&gt;
          &lt;effectiveTime value={visitDate}/&gt;
          &lt;author typeCode=&quot;AUT&quot;&gt;
           &lt;time value={visitDate}/&gt;
           &lt;assignedAuthor&gt;
            &lt;id root=&quot;1.3.6.1.4.1.150.2474.11.2.1.1.2&quot; extension={author}/&gt;
           &lt;/assignedAuthor&gt;
          &lt;/author&gt;
          &lt;id root={idRootOid} extension={eddId}/&gt;
          &lt;code code=&quot;161714006&quot; displayName=&quot;Estimated date of delivery&quot; codeSystem=&quot;2.16.840.1.113883.6.96&quot; codeSystemName=&quot;SNOMED-CT&quot;/&gt;
          &lt;value value={edd}/&gt;
         &lt;/observation&gt;
        &lt;/entryRelationship&gt;;
      eddObs.addNamespace(xsi);
      eddObs.observation.value.@xsi::type = &quot;TS&quot;;
    }

    // Populate text elements
    var pregStatContent = &lt;content ID={pregStatId}&gt;Pregnancy Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(pregStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = pregStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + pregStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = pregStatCode;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = pregStatDisp;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    if (eddObs != &apos;&apos;)&#xd;      tmpEntry[&apos;act&apos;].appendChild(eddObs);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add TB status, if available
  var tbStat = msgRead(idxProblemBases[&apos;tbStat&apos;] + (i * idxEncOffset));
  if (trim(tbStat) != &quot;&quot; &amp;&amp; tbStat != null &amp;&amp; (tbStat == &apos;1. NO signs&apos; || tbStat == &apos;2. TB suspected&apos; || tbStat == &apos;3. TB RX&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var tbStatId = &apos;TbStat-&apos; + i;
    var tbStatDisp = &apos;&apos;;
    if (tbStat == &apos;1. NO signs&apos;) {
      tbStatDisp = &apos;No signs or symptoms suggesting TB&apos;;
    } else if (tbStat == &apos;2. TB suspected&apos;) {
      tbStatDisp = &apos;TB referral or sputum sent&apos;;
    } else {
      tbStatDisp = &apos;Currently on TB treatment&apos;;
      var tbStMo = msgRead(idxProblemBases[&apos;tbTxStMo&apos;] + (i * idxEncOffset));
      var tbStYr = msgRead(idxProblemBases[&apos;tbTxStYr&apos;] + (i * idxEncOffset));
      var tbNo = msgRead(idxProblemBases[&apos;tbTxNo&apos;] + (i * idxEncOffset));
      if (trim(tbStMo) != &quot;&quot; &amp;&amp; tbStMo != null &amp;&amp; trim(tbStYr) != &quot;&quot; &amp;&amp; tbStYr != null)
        tbStatDisp += &apos;. Treatment started on &apos; + tbStMo + &apos;/&apos; + tbStYr + &apos; (MM/YY)&apos;;
      if (trim(tbNo) != &quot;&quot; &amp;&amp; tbNo != null)
        tbStatDisp += &apos;. Treatment number &apos; + tbNo;
    }
    var tbStatValue = &lt;value&gt;{tbStatDisp}&lt;/value&gt;;
    tbStatValue.addNamespace(xsi);
    tbStatValue.@xsi::type = &quot;ST&quot;;

    // Populate text elements
    var tbStatContent = &lt;content ID={tbStatId}&gt;TB Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(tbStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = tbStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + tbStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(tbStatValue);
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over potential side effects and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset) + maxSideEff;
           j++) {
    var sideEff = msgRead(j);
    if (trim(sideEff) == &quot;&quot; || sideEff == null || trim(sideEff) == &apos;None&apos; || trim(sideEff) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(sideEff)]) {
        var sideEffDisp = conditionLookup[trim(sideEff)][&apos;displayName&apos;];
      } else {
        var sideEffDisp = trim(sideEff);
      }

      // Populate text elements
      var condId = &apos;SideEffect-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{sideEffDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(sideEff)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(sideEff)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = sideEffDisp;
      } else {
        var value = &lt;value&gt;{sideEffDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // Loop over New OIs/Other Problems and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset) + maxOtherProb;
           j++) {
    var othProb = msgRead(j);
    if (trim(othProb) == &quot;&quot; || othProb == null || trim(othProb) == &apos;None&apos; || trim(othProb) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(othProb)]) {
        var othProbDisp = conditionLookup[trim(othProb)][&apos;displayName&apos;];
      } else {
        var othProbDisp = trim(othProb).replace(/^[0-9]+-/, &apos;&apos;);
      }

      // Populate text elements
      var condId = &apos;OtherCondition-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{othProbDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(othProb)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(othProb)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = othProbDisp;
      } else {
        var value = &lt;value&gt;{othProbDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>Process medications section</name>
            <script>var maxPriorPoorAdh = 5;
var maxCtxPoorAdh = 5;
var maxOtherMed = 8;
var idxRxBases = {
  &apos;ctxDisp&apos;:290, &apos;ctxAdh&apos;:291, &apos;ctxPoorAdh&apos;:292, &apos;inhDisp&apos;:297, &apos;othMedName&apos;:298, &apos;othMedDose&apos;:299, &apos;othMedFreq&apos;:300,
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:323, &apos;priorAdhReason&apos;:324, &apos;arvName&apos;:329, &apos;arvDose&apos;:330, &apos;arvDays&apos;:331
};
var idxOthMedOffset = 3;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add cotrimoxazole, if dispensed
  var ctxDisp = msgRead(idxRxBases[&apos;ctxDisp&apos;] + (i * idxEncOffset));
  if (trim(ctxDisp) != &quot;&quot; &amp;&amp; ctxDisp != null &amp;&amp; ctxDisp == &apos;Yes&apos;) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var ctxAdhDisp = &quot;&quot;; 
    var ctxAdh = msgRead(idxRxBases[&apos;ctxAdh&apos;] + (i * idxEncOffset));
    if (trim(ctxAdh) != &quot;&quot; &amp;&amp; ctxAdh != null &amp;&amp; ctxAdh != &apos;Missing&apos;) {
      ctxAdhDisp += &quot;Adherence: &quot; + ctxAdh;
    }
    var ctxPoorAdhDisp = &quot;&quot;;
    for (var j = idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset);
             j &lt; idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset) + maxCtxPoorAdh;
             j++) {
    var ctxPoorAdh = msgRead(j);
      if (trim(ctxPoorAdh) != &quot;&quot; &amp;&amp; ctxPoorAdh != null &amp;&amp; ctxPoorAdh != &apos;Missing&apos;) {
        ctxPoorAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? ctxPoorAdh : &quot;, &quot; + ctxPoorAdh;
      }      
    }
    ctxAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + ctxPoorAdhDisp;

    // Populate text elements
    var medId = &apos;CTX-&apos; + i;
    var ctxAdhId = &apos;CTXAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Cotrimoxazole&lt;/content&gt;;
    var ctxAdhContent = &lt;content ID={ctxAdhId}&gt;{ctxAdhDisp}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(ctxAdhContent);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;374234&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Sulfamethoxazole / Trimethoprim Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (ctxAdhDisp != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add isoniazid, if dispensed
  var inhDisp = msgRead(idxRxBases[&apos;inhDisp&apos;] + (i * idxEncOffset));
  if (trim(inhDisp) != &quot;&quot; &amp;&amp; inhDisp != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var medId = &apos;INH-&apos; + i;
    var inhAdhId = &apos;INHAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Isoniazid&lt;/content&gt;;
    var inhAdhId = &lt;content ID={inhAdhId}&gt;{trim(inhDisp)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(inhAdhId);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;370716&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Isoniazid Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (trim(inhDisp) != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over other medications
  for (var j = 0; j &lt; maxOtherMed * idxOthMedOffset; j = j + idxOthMedOffset) {
    var meds = processMedName(msgRead(idxRxBases[&apos;othMedName&apos;] + (i * idxEncOffset) + j), 1);
    for (var k = 0; k &lt; meds.length; k++) {
      if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0].appendChild(medContent);
        tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
        tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
        // Done populating text elements

        // Append populated text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Remove the comment template, if not used
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

        // Append populated entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
      }
    }
  }

  // prior ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      var adhDisp = &quot;&quot;; 
      var adh = msgRead(idxRxBases[&apos;priorAdh&apos;] + (i * idxEncOffset));
      if (trim(adh) != &quot;&quot; &amp;&amp; adh != null &amp;&amp; adh != &apos;Missing&apos;) {
        adhDisp += &quot;Adherence: &quot; + ctxAdh;
      }
      var poorAdhDisp = &quot;&quot;;
      for (var j = idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset);
               j &lt; idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset) + maxPriorPoorAdh;
               j++) {
      var poorAdh = msgRead(j);
        if (trim(poorAdh) != &quot;&quot; &amp;&amp; poorAdh != null &amp;&amp; poorAdh != &apos;Missing&apos;) {
          poorAdhDisp += poorAdhDisp.length &lt; 1 ? poorAdh : &quot;, &quot; + poorAdh;
        }      
      }
      adhDisp += poorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + poorAdhDisp;

      // Populate text elements
      var medId = &apos;PriorMed-&apos; + i + &apos;-&apos; + k;
      var adhId = &apos;PriorMedAdh-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      var adhContent = &lt;content ID={adhId}&gt;{adhDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4].appendChild(adhContent);
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      if (adhDisp != &apos;&apos;) {
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
      }
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // current ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;arvName&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Populate text elements
      var medId = &apos;ArvMed-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxPriorPoorAdh = 5;
var maxCtxPoorAdh = 5;
var maxOtherMed = 8;
var idxRxBases = {
  &apos;ctxDisp&apos;:290, &apos;ctxAdh&apos;:291, &apos;ctxPoorAdh&apos;:292, &apos;inhDisp&apos;:297, &apos;othMedName&apos;:298, &apos;othMedDose&apos;:299, &apos;othMedFreq&apos;:300,
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:323, &apos;priorAdhReason&apos;:324, &apos;arvName&apos;:329, &apos;arvDose&apos;:330, &apos;arvDays&apos;:331
};
var idxOthMedOffset = 3;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add cotrimoxazole, if dispensed
  var ctxDisp = msgRead(idxRxBases[&apos;ctxDisp&apos;] + (i * idxEncOffset));
  if (trim(ctxDisp) != &quot;&quot; &amp;&amp; ctxDisp != null &amp;&amp; ctxDisp == &apos;Yes&apos;) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var ctxAdhDisp = &quot;&quot;; 
    var ctxAdh = msgRead(idxRxBases[&apos;ctxAdh&apos;] + (i * idxEncOffset));
    if (trim(ctxAdh) != &quot;&quot; &amp;&amp; ctxAdh != null &amp;&amp; ctxAdh != &apos;Missing&apos;) {
      ctxAdhDisp += &quot;Adherence: &quot; + ctxAdh;
    }
    var ctxPoorAdhDisp = &quot;&quot;;
    for (var j = idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset);
             j &lt; idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset) + maxCtxPoorAdh;
             j++) {
    var ctxPoorAdh = msgRead(j);
      if (trim(ctxPoorAdh) != &quot;&quot; &amp;&amp; ctxPoorAdh != null &amp;&amp; ctxPoorAdh != &apos;Missing&apos;) {
        ctxPoorAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? ctxPoorAdh : &quot;, &quot; + ctxPoorAdh;
      }      
    }
    ctxAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + ctxPoorAdhDisp;

    // Populate text elements
    var medId = &apos;CTX-&apos; + i;
    var ctxAdhId = &apos;CTXAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Cotrimoxazole&lt;/content&gt;;
    var ctxAdhContent = &lt;content ID={ctxAdhId}&gt;{ctxAdhDisp}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(ctxAdhContent);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;374234&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Sulfamethoxazole / Trimethoprim Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (ctxAdhDisp != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add isoniazid, if dispensed
  var inhDisp = msgRead(idxRxBases[&apos;inhDisp&apos;] + (i * idxEncOffset));
  if (trim(inhDisp) != &quot;&quot; &amp;&amp; inhDisp != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var medId = &apos;INH-&apos; + i;
    var inhAdhId = &apos;INHAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Isoniazid&lt;/content&gt;;
    var inhAdhId = &lt;content ID={inhAdhId}&gt;{trim(inhDisp)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(inhAdhId);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;370716&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Isoniazid Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (trim(inhDisp) != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over other medications
  for (var j = 0; j &lt; maxOtherMed * idxOthMedOffset; j = j + idxOthMedOffset) {
    var meds = processMedName(msgRead(idxRxBases[&apos;othMedName&apos;] + (i * idxEncOffset) + j), 1);
    for (var k = 0; k &lt; meds.length; k++) {
      if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0].appendChild(medContent);
        tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
        tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
        // Done populating text elements

        // Append populated text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Remove the comment template, if not used
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

        // Append populated entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
      }
    }
  }

  // prior ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      var adhDisp = &quot;&quot;; 
      var adh = msgRead(idxRxBases[&apos;priorAdh&apos;] + (i * idxEncOffset));
      if (trim(adh) != &quot;&quot; &amp;&amp; adh != null &amp;&amp; adh != &apos;Missing&apos;) {
        adhDisp += &quot;Adherence: &quot; + ctxAdh;
      }
      var poorAdhDisp = &quot;&quot;;
      for (var j = idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset);
               j &lt; idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset) + maxPriorPoorAdh;
               j++) {
      var poorAdh = msgRead(j);
        if (trim(poorAdh) != &quot;&quot; &amp;&amp; poorAdh != null &amp;&amp; poorAdh != &apos;Missing&apos;) {
          poorAdhDisp += poorAdhDisp.length &lt; 1 ? poorAdh : &quot;, &quot; + poorAdh;
        }      
      }
      adhDisp += poorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + poorAdhDisp;

      // Populate text elements
      var medId = &apos;PriorMed-&apos; + i + &apos;-&apos; + k;
      var adhId = &apos;PriorMedAdh-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      var adhContent = &lt;content ID={adhId}&gt;{adhDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4].appendChild(adhContent);
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      if (adhDisp != &apos;&apos;) {
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
      }
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // current ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;arvName&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Populate text elements
      var medId = &apos;ArvMed-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>Process vital signs section</name>
            <script>var idxVitalBases = {
  &apos;weight&apos;:263, &apos;bp&apos;:264, &apos;height&apos;:265, &apos;bmi&apos;:266
};

var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var vitalId = &apos;Vital-&apos; + i;
  var haveHt = false;
  var haveWt = false;
  var haveBmi = false;
  var tmpEntry = entryTmpl.copy();

  // add height, if provided
  var val = msgRead(idxVitalBases[&apos;height&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalHt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(vitalContent);

    haveHt = true;
  }

  // add weight, if provided
  var val = msgRead(idxVitalBases[&apos;weight&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalWt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(vitalContent);

    haveWt = true;
  }

  // add BMI, if provided
  var val = msgRead(idxVitalBases[&apos;bmi&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalBMI-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(vitalContent);

    haveBmi = true;
  }

  // add the rest, if there were any vitals for this encounter
  if (haveHt || haveWt || haveBmi) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + vitalId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveBmi) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveWt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveHt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var idxVitalBases = {
  &apos;weight&apos;:263, &apos;bp&apos;:264, &apos;height&apos;:265, &apos;bmi&apos;:266
};

var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var vitalId = &apos;Vital-&apos; + i;
  var haveHt = false;
  var haveWt = false;
  var haveBmi = false;
  var tmpEntry = entryTmpl.copy();

  // add height, if provided
  var val = msgRead(idxVitalBases[&apos;height&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalHt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(vitalContent);

    haveHt = true;
  }

  // add weight, if provided
  var val = msgRead(idxVitalBases[&apos;weight&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalWt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(vitalContent);

    haveWt = true;
  }

  // add BMI, if provided
  var val = msgRead(idxVitalBases[&apos;bmi&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalBMI-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(vitalContent);

    haveBmi = true;
  }

  // add the rest, if there were any vitals for this encounter
  if (haveHt || haveWt || haveBmi) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + vitalId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveBmi) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveWt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveHt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>Process diagnostic results section</name>
            <script>var maxOtherLab = 2;
var idxLabBases = {
  &apos;cd4Cnt&apos;:332, &apos;cd4Perc&apos;:333, &apos;hgb&apos;:334, &apos;rpr&apos;:335, &apos;tb&apos;:336, &apos;othLabName&apos;:337, &apos;othLabRes&apos;:338
};
var idxLabOffset = 2;

var othTextTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
var compTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5];
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var labId = &apos;Lab-&apos; + i;
  var haveCd4Cnt = false;
  var haveCd4Perc = false;
  var haveHgb = false;
  var haveRpr = false;
  var haveTb = false;
  var haveOther = false;
  var tmpEntry = entryTmpl.copy();

  // add CD4, if provided
  var cd4Disp = &quot;&quot;;
  var txtId = &apos;LabCd4-&apos; + i;
  var val = msgRead(idxLabBases[&apos;cd4Cnt&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp = trim(val);

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Cnt = true;
  }

  // Check for percentage value
  val = msgRead(idxLabBases[&apos;cd4Perc&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp += (cd4Disp.length &lt; 1 ? &apos;&apos; : &apos; &apos;) + &apos;(&apos; + trim(val) + &apos;%)&apos;;

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Perc = true;
  }

  if (haveCd4Cnt || haveCd4Perc) {
    // Populate text elements
    var labContent = &lt;td&gt;{cd4Disp}&lt;/td&gt;;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(labContent);
  }

  // add Hgb, if provided
  var val = msgRead(idxLabBases[&apos;hgb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabHgb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(labContent);

    haveHgb = true;
  }

  // add Rpr, if provided
  var val = msgRead(idxLabBases[&apos;rpr&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabRpr-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(labContent);

    haveRpr = true;
  }

  // add Tb, if provided
  var val = msgRead(idxLabBases[&apos;tb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabTb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3].appendChild(labContent);

    haveTb = true;
  }

  // Loop over other lab tests, if any
  var initOthRow = 4;
  for (var j = 0; j &lt; maxOtherLab * idxLabOffset; j = j + idxLabOffset) {
    var name = msgRead(idxLabBases[&apos;othLabName&apos;] + (i * idxEncOffset) + j);
    var result = msgRead(idxLabBases[&apos;othLabRes&apos;] + (i * idxEncOffset) + j);
    if (trim(result) != &quot;&quot; &amp;&amp; result != null) {
      var tmpText = othTextTmpl.copy();
      var tmpComp = compTmpl.copy();

      // need to see if we&apos;ve already got a text row with the same lab name, also count number of columns if row already exists
      var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
      var othRow = rowCnt;
      if (trim(name) == &quot;&quot; || name == null) {
        name = &apos;N/A (&apos; + (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset))) + &apos;-&apos; + (j == 0 ? &apos;1&apos; : (j == idxLabOffset ? &apos;2&apos; : &apos;&apos;)) + &apos;)&apos;;
      } else {
        for (var k = initOthRow; k &lt; rowCnt; k++) {
          if (tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][k][&apos;th&apos;].toString().toLowerCase() == &apos;other: &apos; + trim(name).toLowerCase()) {
            othRow = k;
            break;
          }
        }
      }

      // need to backfill any previous columns with empty cells, if we&apos;re adding a new row
      if (othRow == rowCnt) {
        var emptyCol = &lt;td/&gt;;
        for (var q = 0; q &lt; i; q++) {
          tmpText.appendChild(emptyCol);
        }
      }

      // Populate text elements
      var txtId = &apos;&apos;;
      var resultCol = &lt;td&gt;{trim(result)}&lt;/td&gt;;
      tmpText.appendChild(resultCol);
      if (othRow == rowCnt) {
        txtId = &apos;LabOth-&apos; + i + &apos;-&apos; + j;
        var labContent = &lt;content ID={txtId}&gt;{&apos;Other: &apos; + trim(name)}&lt;/content&gt;;
        tmpText[&apos;th&apos;].appendChild(labContent);
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);
      } else {
        txtId = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow][&apos;th&apos;][&apos;content&apos;][&apos;@ID&apos;].toString();
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow].appendChild(resultCol);
      }
      // Done populating text elements

      // Populate entry elements
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = labCodeSystemOid;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = labCodeSystemName;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
      tmpComp[&apos;observation&apos;][&apos;value&apos;] = trim(result);

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
        tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated component node
      tmpEntry[&apos;organizer&apos;].appendChild(tmpComp);

      haveOther = true;
    }
  }

  // add the rest, if there were any labs for this encounter
  if (haveCd4Cnt || haveCd4Perc || haveHgb || haveRpr || haveTb || haveOther) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + labId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveTb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4];
    }
    if (!haveRpr) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3];
    }
    if (!haveHgb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveCd4Perc) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveCd4Cnt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxOtherLab = 2;
var idxLabBases = {
  &apos;cd4Cnt&apos;:332, &apos;cd4Perc&apos;:333, &apos;hgb&apos;:334, &apos;rpr&apos;:335, &apos;tb&apos;:336, &apos;othLabName&apos;:337, &apos;othLabRes&apos;:338
};
var idxLabOffset = 2;

var othTextTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
var compTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5];
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var labId = &apos;Lab-&apos; + i;
  var haveCd4Cnt = false;
  var haveCd4Perc = false;
  var haveHgb = false;
  var haveRpr = false;
  var haveTb = false;
  var haveOther = false;
  var tmpEntry = entryTmpl.copy();

  // add CD4, if provided
  var cd4Disp = &quot;&quot;;
  var txtId = &apos;LabCd4-&apos; + i;
  var val = msgRead(idxLabBases[&apos;cd4Cnt&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp = trim(val);

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Cnt = true;
  }

  // Check for percentage value
  val = msgRead(idxLabBases[&apos;cd4Perc&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp += (cd4Disp.length &lt; 1 ? &apos;&apos; : &apos; &apos;) + &apos;(&apos; + trim(val) + &apos;%)&apos;;

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Perc = true;
  }

  if (haveCd4Cnt || haveCd4Perc) {
    // Populate text elements
    var labContent = &lt;td&gt;{cd4Disp}&lt;/td&gt;;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(labContent);
  }

  // add Hgb, if provided
  var val = msgRead(idxLabBases[&apos;hgb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabHgb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(labContent);

    haveHgb = true;
  }

  // add Rpr, if provided
  var val = msgRead(idxLabBases[&apos;rpr&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabRpr-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(labContent);

    haveRpr = true;
  }

  // add Tb, if provided
  var val = msgRead(idxLabBases[&apos;tb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabTb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3].appendChild(labContent);

    haveTb = true;
  }

  // Loop over other lab tests, if any
  var initOthRow = 4;
  for (var j = 0; j &lt; maxOtherLab * idxLabOffset; j = j + idxLabOffset) {
    var name = msgRead(idxLabBases[&apos;othLabName&apos;] + (i * idxEncOffset) + j);
    var result = msgRead(idxLabBases[&apos;othLabRes&apos;] + (i * idxEncOffset) + j);
    if (trim(result) != &quot;&quot; &amp;&amp; result != null) {
      var tmpText = othTextTmpl.copy();
      var tmpComp = compTmpl.copy();

      // need to see if we&apos;ve already got a text row with the same lab name, also count number of columns if row already exists
      var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
      var othRow = rowCnt;
      if (trim(name) == &quot;&quot; || name == null) {
        name = &apos;N/A (&apos; + (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset))) + &apos;-&apos; + (j == 0 ? &apos;1&apos; : (j == idxLabOffset ? &apos;2&apos; : &apos;&apos;)) + &apos;)&apos;;
      } else {
        for (var k = initOthRow; k &lt; rowCnt; k++) {
          if (tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][k][&apos;th&apos;].toString().toLowerCase() == &apos;other: &apos; + trim(name).toLowerCase()) {
            othRow = k;
            break;
          }
        }
      }

      // need to backfill any previous columns with empty cells, if we&apos;re adding a new row
      if (othRow == rowCnt) {
        var emptyCol = &lt;td/&gt;;
        for (var q = 0; q &lt; i; q++) {
          tmpText.appendChild(emptyCol);
        }
      }

      // Populate text elements
      var txtId = &apos;&apos;;
      var resultCol = &lt;td&gt;{trim(result)}&lt;/td&gt;;
      tmpText.appendChild(resultCol);
      if (othRow == rowCnt) {
        txtId = &apos;LabOth-&apos; + i + &apos;-&apos; + j;
        var labContent = &lt;content ID={txtId}&gt;{&apos;Other: &apos; + trim(name)}&lt;/content&gt;;
        tmpText[&apos;th&apos;].appendChild(labContent);
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);
      } else {
        txtId = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow][&apos;th&apos;][&apos;content&apos;][&apos;@ID&apos;].toString();
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow].appendChild(resultCol);
      }
      // Done populating text elements

      // Populate entry elements
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = labCodeSystemOid;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = labCodeSystemName;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
      tmpComp[&apos;observation&apos;][&apos;value&apos;] = trim(result);

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
        tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated component node
      tmpEntry[&apos;organizer&apos;].appendChild(tmpComp);

      haveOther = true;
    }
  }

  // add the rest, if there were any labs for this encounter
  if (haveCd4Cnt || haveCd4Perc || haveHgb || haveRpr || haveTb || haveOther) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + labId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveTb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4];
    }
    if (!haveRpr) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3];
    }
    if (!haveHgb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveCd4Perc) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveCd4Cnt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>Process family history section</name>
            <script>var maxFamMembers = 8;
var idxFamilyBases = {
  &apos;rel&apos;:110, &apos;age&apos;:111, &apos;hivStat&apos;:112, &apos;inCare&apos;:113, &apos;treatNo&apos;:114
};
var idxFamOffset = 10;

var relationLookup = {
  &apos;Father&apos;:{
    &apos;code&apos;:&apos;FTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Father&apos;
  },
  &apos;Mother&apos;:{
    &apos;code&apos;:&apos;MTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Mother&apos;
  },
  &apos;Wife&apos;:{
    &apos;code&apos;:&apos;WIFE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Wife&apos;
  },
  &apos;Husband&apos;:{
    &apos;code&apos;:&apos;HUSB&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Husband&apos;
  },
  &apos;Daughter&apos;:{
    &apos;code&apos;:&apos;DAU&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Daughter&apos;
  },
  &apos;Son&apos;:{
    &apos;code&apos;:&apos;SON&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Son&apos;
  },
  &apos;Sister&apos;:{
    &apos;code&apos;:&apos;SIS&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Sister&apos;
  },
  &apos;Brother&apos;:{
    &apos;code&apos;:&apos;BRO&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Brother&apos;
  },
  &apos;Cousin&apos;:{
    &apos;code&apos;:&apos;COUSN&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Cousin&apos;
  },
  &apos;Nephew&apos;:{
    &apos;code&apos;:&apos;NEPHEW&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Nephew&apos;
  },
  &apos;Niece&apos;:{
    &apos;code&apos;:&apos;NIECE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Niece&apos;
  },
  &apos;Aunt&apos;:{
    &apos;code&apos;:&apos;AUNT&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Aunt&apos;
  },
  &apos;Uncle&apos;:{
    &apos;code&apos;:&apos;UNCLE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Uncle&apos;
  },
  &apos;Workmate&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Employer&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Other&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;paragraph&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxFamMembers; i++) {
  var status = msgRead(idxFamilyBases[&apos;hivStat&apos;] + (i * idxFamOffset));
  if (trim(status) != &quot;&quot; &amp;&amp; status != null &amp;&amp; (status == &apos;Positive&apos; || status == &apos;Negative&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var statId = &apos;HIVStatus-&apos; + i;
    var rel = msgRead(idxFamilyBases[&apos;rel&apos;] + (i * idxFamOffset));
    var age = msgRead(idxFamilyBases[&apos;age&apos;] + (i * idxFamOffset));
    var inCare = msgRead(idxFamilyBases[&apos;inCare&apos;] + (i * idxFamOffset));
    var treatNo = msgRead(idxFamilyBases[&apos;treatNo&apos;] + (i * idxFamOffset));
    var textContent = &lt;content ID={statId}&gt;HIV Status&lt;/content&gt;;
    var careId = &apos;HIVCare-&apos; + i;
    var careTreatDisp = &apos;&apos;;
    if (trim(inCare) != &apos;&apos; &amp;&amp; inCare != null) {
      careTreatDisp += inCare == &apos;Yes&apos; || inCare == &apos;No&apos; ? trim(inCare) : &apos;&apos;;
    }
    if (trim(treatNo) != &apos;&apos; &amp;&amp; treatNo != null) {
      careTreatDisp += &apos; (Treatment #&apos; + trim(treatNo) + &apos;)&apos;;
    }
    var careContent = &lt;content ID={careId}&gt;{careTreatDisp}&lt;/content&gt;;
    tmpText[&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][0].appendChild(textContent);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][0] = trim(status);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][1] = trim(age) != &quot;&quot; &amp;&amp; age != null ? trim(age) : &apos;N/A&apos;;
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][2].appendChild(careContent);
    tmpText[&apos;paragraph&apos;] = trim(rel) != &quot;&quot; &amp;&amp; rel != null ? trim(rel) : &apos;N/A&apos;;
    // Done populating text elements

    // Append populated text elements
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;paragraph&apos;]);
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;table&apos;]);&#xd;
    // Populate entry elements
    var relLookup = &apos;&apos;;
    if (trim(rel) != &quot;&quot; &amp;&amp; rel != null) {
      relLookup = relationLookup[trim(rel)];
    } else {
      relLookup = relationLookup[&apos;Other (specify)&apos;];
    }
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] = relLookup[&apos;code&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;] = relLookup[&apos;displayName&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    if (status == &quot;Positive&quot;) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165816005&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV positive&apos;;
    } else {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165815009&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV negative&apos;;
    }
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    if (trim(age) != &quot;&quot; &amp;&amp; age != null) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(age);
    }

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;translation code=&quot;&quot; .../&gt; =&gt; &lt;translation nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove age template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1];

    // Remove the comment template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxFamMembers = 8;
var idxFamilyBases = {
  &apos;rel&apos;:110, &apos;age&apos;:111, &apos;hivStat&apos;:112, &apos;inCare&apos;:113, &apos;treatNo&apos;:114
};
var idxFamOffset = 10;

var relationLookup = {
  &apos;Father&apos;:{
    &apos;code&apos;:&apos;FTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Father&apos;
  },
  &apos;Mother&apos;:{
    &apos;code&apos;:&apos;MTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Mother&apos;
  },
  &apos;Wife&apos;:{
    &apos;code&apos;:&apos;WIFE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Wife&apos;
  },
  &apos;Husband&apos;:{
    &apos;code&apos;:&apos;HUSB&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Husband&apos;
  },
  &apos;Daughter&apos;:{
    &apos;code&apos;:&apos;DAU&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Daughter&apos;
  },
  &apos;Son&apos;:{
    &apos;code&apos;:&apos;SON&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Son&apos;
  },
  &apos;Sister&apos;:{
    &apos;code&apos;:&apos;SIS&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Sister&apos;
  },
  &apos;Brother&apos;:{
    &apos;code&apos;:&apos;BRO&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Brother&apos;
  },
  &apos;Cousin&apos;:{
    &apos;code&apos;:&apos;COUSN&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Cousin&apos;
  },
  &apos;Nephew&apos;:{
    &apos;code&apos;:&apos;NEPHEW&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Nephew&apos;
  },
  &apos;Niece&apos;:{
    &apos;code&apos;:&apos;NIECE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Niece&apos;
  },
  &apos;Aunt&apos;:{
    &apos;code&apos;:&apos;AUNT&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Aunt&apos;
  },
  &apos;Uncle&apos;:{
    &apos;code&apos;:&apos;UNCLE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Uncle&apos;
  },
  &apos;Workmate&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Employer&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Other&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;paragraph&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxFamMembers; i++) {
  var status = msgRead(idxFamilyBases[&apos;hivStat&apos;] + (i * idxFamOffset));
  if (trim(status) != &quot;&quot; &amp;&amp; status != null &amp;&amp; (status == &apos;Positive&apos; || status == &apos;Negative&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var statId = &apos;HIVStatus-&apos; + i;
    var rel = msgRead(idxFamilyBases[&apos;rel&apos;] + (i * idxFamOffset));
    var age = msgRead(idxFamilyBases[&apos;age&apos;] + (i * idxFamOffset));
    var inCare = msgRead(idxFamilyBases[&apos;inCare&apos;] + (i * idxFamOffset));
    var treatNo = msgRead(idxFamilyBases[&apos;treatNo&apos;] + (i * idxFamOffset));
    var textContent = &lt;content ID={statId}&gt;HIV Status&lt;/content&gt;;
    var careId = &apos;HIVCare-&apos; + i;
    var careTreatDisp = &apos;&apos;;
    if (trim(inCare) != &apos;&apos; &amp;&amp; inCare != null) {
      careTreatDisp += inCare == &apos;Yes&apos; || inCare == &apos;No&apos; ? trim(inCare) : &apos;&apos;;
    }
    if (trim(treatNo) != &apos;&apos; &amp;&amp; treatNo != null) {
      careTreatDisp += &apos; (Treatment #&apos; + trim(treatNo) + &apos;)&apos;;
    }
    var careContent = &lt;content ID={careId}&gt;{careTreatDisp}&lt;/content&gt;;
    tmpText[&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][0].appendChild(textContent);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][0] = trim(status);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][1] = trim(age) != &quot;&quot; &amp;&amp; age != null ? trim(age) : &apos;N/A&apos;;
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][2].appendChild(careContent);
    tmpText[&apos;paragraph&apos;] = trim(rel) != &quot;&quot; &amp;&amp; rel != null ? trim(rel) : &apos;N/A&apos;;
    // Done populating text elements

    // Append populated text elements
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;paragraph&apos;]);
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;table&apos;]);&#xd;
    // Populate entry elements
    var relLookup = &apos;&apos;;
    if (trim(rel) != &quot;&quot; &amp;&amp; rel != null) {
      relLookup = relationLookup[trim(rel)];
    } else {
      relLookup = relationLookup[&apos;Other (specify)&apos;];
    }
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] = relLookup[&apos;code&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;] = relLookup[&apos;displayName&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    if (status == &quot;Positive&quot;) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165816005&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV positive&apos;;
    } else {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165815009&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV negative&apos;;
    }
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    if (trim(age) != &quot;&quot; &amp;&amp; age != null) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(age);
    }

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;translation code=&quot;&quot; .../&gt; =&gt; &lt;translation nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove age template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1];

    // Remove the comment template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>Process plan of care section</name>
            <script>var idxPlanBases = {
  &apos;referredTo&apos;:341, &apos;nextAppt&apos;:347
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add next appointment date, if given
  var nextAppt = msgRead(idxPlanBases[&apos;nextAppt&apos;] + (i * idxEncOffset));
  if (trim(nextAppt) != &quot;&quot; &amp;&amp; nextAppt != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;NextAppt-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Next Appointment&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = nextAppt.substring(4, 6) + &quot;/&quot; + nextAppt.substring(6, 8) + &quot;/&quot; + nextAppt.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = nextAppt;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;390840006&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Next appointment&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add referral, if given
  var refer = msgRead(idxPlanBases[&apos;referredTo&apos;] + (i * idxEncOffset));
  if (trim(refer) != &quot;&quot; &amp;&amp; refer != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;Referral-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Referral to: {trim(refer)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;183677001&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Referred - other care&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var idxPlanBases = {
  &apos;referredTo&apos;:341, &apos;nextAppt&apos;:347
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add next appointment date, if given
  var nextAppt = msgRead(idxPlanBases[&apos;nextAppt&apos;] + (i * idxEncOffset));
  if (trim(nextAppt) != &quot;&quot; &amp;&amp; nextAppt != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;NextAppt-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Next Appointment&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = nextAppt.substring(4, 6) + &quot;/&quot; + nextAppt.substring(6, 8) + &quot;/&quot; + nextAppt.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = nextAppt;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;390840006&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Next appointment&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add referral, if given
  var refer = msgRead(idxPlanBases[&apos;referredTo&apos;] + (i * idxEncOffset));
  if (trim(refer) != &quot;&quot; &amp;&amp; refer != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;Referral-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Referral to: {trim(refer)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;183677001&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Referred - other care&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>Process social history section (nothing to put in this section yet)</name>
            <script></script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string></string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>Post process</name>
            <script>// If no data was available for a particular section (other than encounters), nuke the whole section
for (var i = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;].length(); i &gt; 0; i--) {
  var z = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1][&apos;section&apos;].elements(&apos;entry&apos;).length();
  if (z &lt; 1) {
    delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1];
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>// If no data was available for a particular section (other than encounters), nuke the whole section
for (var i = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;].length(); i &gt; 0; i--) {
  var z = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1][&apos;section&apos;].elements(&apos;entry&apos;).length();
  if (z &lt; 1) {
    delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1];
  }
}</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">RmFjaWxpdHkgTmFtZQlGYWNpbGl0eSBDb2RlCUZhY2lsaXR5IENvdW50eS9EaXN0cmljdAlGYWNp
bGl0eSBTdGF0ZS9Qcm92aW5jZQlTb3VyY2UgU3lzdGVtIFVuaXF1ZSBDb2RlCUZhY2lsaXR5IFVu
aXF1ZSBQYXRpZW50IE51bWJlcglQYXRpZW50IEZhbWlseSBOYW1lMQlQYXRpZW50IEZhbWlseSBO
YW1lMglQYXRpZW50IEdpdmVuIE5hbWUxCVBhdGllbnQgR2l2ZW4gTmFtZTIJUGF0aWVudCBHaXZl
biBOYW1lMwlQYXRpZW50IERhdGUgb2YgQmlydGgJUGF0aWVudCBHZW5kZXIJUGF0aWVudCBTdHJl
ZXQgQWRkcmVzczEJUGF0aWVudCBTdHJlZXQgQWRkcmVzczIJUGF0aWVudCBDaXR5L1N1Yi1sb2Nh
dGlvbi9Db21tdW5lCVBhdGllbnQgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50CVBhdGll
bnQgU3RhdGUvUHJvdmluY2UvRGlzdHJpY3QvRGVwYXJ0ZW1lbnQJUGF0aWVudCBBZGRyZXNzIExh
bmRtYXJrL0RpcmVjdGlvbnMJUGF0aWVudCBUZWxlcGhvbmUxCVBhdGllbnQgVGVsZXBob25lMglQ
YXRpZW50IFRlbGVwaG9uZTMJUGF0aWVudCBNYXJpdGFsIFN0YXR1cwlQYXRpZW50IE5lYXJlc3Qg
SGVhbHRoIENlbnRlcglUcmVhdG1lbnQgU3VwcG9ydGVyMSBGYW1pbHkgTmFtZTEJVHJlYXRtZW50
IFN1cHBvcnRlcjEgRmFtaWx5IE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIxIEdpdmVuIE5hbWUx
CVRyZWF0bWVudCBTdXBwb3J0ZXIxIEdpdmVuIE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIxIEdp
dmVuIE5hbWUzCVRyZWF0bWVudCBTdXBwb3J0ZXIxIFJlbGF0aW9uc2hpcAlUcmVhdG1lbnQgU3Vw
cG9ydGVyMSBTdHJlZXQgQWRkcmVzczEJVHJlYXRtZW50IFN1cHBvcnRlcjEgU3RyZWV0IEFkZHJl
c3MyCVRyZWF0bWVudCBTdXBwb3J0ZXIxIENpdHkvU3ViLWxvY2F0aW9uL0NvbW11bmUJVHJlYXRt
ZW50IFN1cHBvcnRlcjEgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50CVRyZWF0bWVudCBT
dXBwb3J0ZXIxIFN0YXRlL1Byb3ZpbmNlL0Rpc3RyaWN0L0RlcGFydGVtZW50CVRyZWF0bWVudCBT
dXBwb3J0ZXIxIFRlbGVwaG9uZQlUcmVhdG1lbnQgU3VwcG9ydGVyMiBGYW1pbHkgTmFtZTEJVHJl
YXRtZW50IFN1cHBvcnRlcjIgRmFtaWx5IE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIyIEdpdmVu
IE5hbWUxCVRyZWF0bWVudCBTdXBwb3J0ZXIyIEdpdmVuIE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0
ZXIyIEdpdmVuIE5hbWUzCVRyZWF0bWVudCBTdXBwb3J0ZXIyIFJlbGF0aW9uc2hpcAlUcmVhdG1l
bnQgU3VwcG9ydGVyMiBTdHJlZXQgQWRkcmVzczEJVHJlYXRtZW50IFN1cHBvcnRlcjIgU3RyZWV0
IEFkZHJlc3MyCVRyZWF0bWVudCBTdXBwb3J0ZXIyIENpdHkvU3ViLWxvY2F0aW9uL0NvbW11bmUJ
VHJlYXRtZW50IFN1cHBvcnRlcjIgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50CVRyZWF0
bWVudCBTdXBwb3J0ZXIyIFN0YXRlL1Byb3ZpbmNlL0Rpc3RyaWN0L0RlcGFydGVtZW50CVRyZWF0
bWVudCBTdXBwb3J0ZXIyIFRlbGVwaG9uZQlUcmVhdG1lbnQgU3VwcG9ydGVyMyBGYW1pbHkgTmFt
ZTEJVHJlYXRtZW50IFN1cHBvcnRlcjMgRmFtaWx5IE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIz
IEdpdmVuIE5hbWUxCVRyZWF0bWVudCBTdXBwb3J0ZXIzIEdpdmVuIE5hbWUyCVRyZWF0bWVudCBT
dXBwb3J0ZXIzIEdpdmVuIE5hbWUzCVRyZWF0bWVudCBTdXBwb3J0ZXIzIFJlbGF0aW9uc2hpcAlU
cmVhdG1lbnQgU3VwcG9ydGVyMyBTdHJlZXQgQWRkcmVzczEJVHJlYXRtZW50IFN1cHBvcnRlcjMg
U3RyZWV0IEFkZHJlc3MyCVRyZWF0bWVudCBTdXBwb3J0ZXIzIENpdHkvU3ViLWxvY2F0aW9uL0Nv
bW11bmUJVHJlYXRtZW50IFN1cHBvcnRlcjMgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50
CVRyZWF0bWVudCBTdXBwb3J0ZXIzIFN0YXRlL1Byb3ZpbmNlL0Rpc3RyaWN0L0RlcGFydGVtZW50
CVRyZWF0bWVudCBTdXBwb3J0ZXIzIFRlbGVwaG9uZQlQYXRpZW50IFNvdXJjZSBFbnRyeSBQb2lu
dAlQYXRpZW50IFNvdXJjZSBUcmFuc2ZlciBJbiBEYXRlCVBhdGllbnQgU291cmNlIFRyYW5zZmVy
IEluIEZhY2lsaXR5CVBhdGllbnQgU291cmNlIFRyYW5zZmVyIEluIEZyb20gU3RhdGUvUHJvdmlu
Y2UvRGlzdHJpY3QvRGVwYXJ0ZW1lbnQJUGF0aWVudCBTb3VyY2UgVHJhbnNmZXIgSW4gQVJUIFN0
YXJ0IERhdGUJQ29uZmlybWVkIEhJViBQb3NpdGl2ZSBEYXRlCUNvbmZpcm1lZCBISVYgUG9zaXRp
dmUgRmFjaWxpdHkJRW5yb2xsbWVudCBJbiBISVYgQ2FyZSBEYXRlCVdITyBTdGFnZSBhdCBFbnJv
bGxtZW50IEluIEhJViBDYXJlCUFSVCBIaXN0b3J5IEtub3duIEFsbGVyZ3kxCUFSVCBIaXN0b3J5
IEtub3duIEFsbGVyZ3kyCUFSVCBIaXN0b3J5IEtub3duIEFsbGVyZ3kzCUFSVCBIaXN0b3J5IEtu
b3duIEFsbGVyZ3k0CUFSVCBIaXN0b3J5IEtub3duIEFsbGVyZ3k1CUFSVCBIaXN0b3J5IE1lZGlj
YXRpb24vUmVnaW1lbjEJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuMSBEYXRlIExhc3Qg
VXNlZAlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW4xIFB1cnBvc2UJQVJUIEhpc3Rvcnkg
TWVkaWNhdGlvbi9SZWdpbWVuMglBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW4yIERhdGUg
TGFzdCBVc2VkCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjIgUHVycG9zZQlBUlQgSGlz
dG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW4zCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjMg
RGF0ZSBMYXN0IFVzZWQJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuMyBQdXJwb3NlCUFS
VCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjQJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdp
bWVuNCBEYXRlIExhc3QgVXNlZAlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW40IFB1cnBv
c2UJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuNQlBUlQgSGlzdG9yeSBNZWRpY2F0aW9u
L1JlZ2ltZW41IERhdGUgTGFzdCBVc2VkCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjUg
UHVycG9zZQlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW42CUFSVCBIaXN0b3J5IE1lZGlj
YXRpb24vUmVnaW1lbjYgRGF0ZSBMYXN0IFVzZWQJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdp
bWVuNiBQdXJwb3NlCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjcJQVJUIEhpc3Rvcnkg
TWVkaWNhdGlvbi9SZWdpbWVuNyBEYXRlIExhc3QgVXNlZAlBUlQgSGlzdG9yeSBNZWRpY2F0aW9u
L1JlZ2ltZW43IFB1cnBvc2UJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuOAlBUlQgSGlz
dG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW44IERhdGUgTGFzdCBVc2VkCUFSVCBIaXN0b3J5IE1lZGlj
YXRpb24vUmVnaW1lbjggUHVycG9zZQlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW45CUFS
VCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjkgRGF0ZSBMYXN0IFVzZWQJQVJUIEhpc3Rvcnkg
TWVkaWNhdGlvbi9SZWdpbWVuOSBQdXJwb3NlCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1l
bjEwCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjEwIERhdGUgTGFzdCBVc2VkCUFSVCBI
aXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjEwIFB1cnBvc2UJRmFtaWx5IE1lbWJlcjEgRmFtaWx5
IE5hbWUxCUZhbWlseSBNZW1iZXIxIEZhbWlseSBOYW1lMglGYW1pbHkgTWVtYmVyMSBHaXZlbiBO
YW1lMQlGYW1pbHkgTWVtYmVyMSBHaXZlbiBOYW1lMglGYW1pbHkgTWVtYmVyMSBHaXZlbiBOYW1l
MwlGYW1pbHkgTWVtYmVyMSBSZWxhdGlvbnNoaXAJRmFtaWx5IE1lbWJlcjEgQWdlCUZhbWlseSBN
ZW1iZXIxIEhJViBTdGF0dXMJRmFtaWx5IE1lbWJlcjEgSW4gSElWIENhcmUJRmFtaWx5IE1lbWJl
cjEgVW5pcXVlIFBhdGllbnQgTnVtYmVyCUZhbWlseSBNZW1iZXIyIEZhbWlseSBOYW1lMQlGYW1p
bHkgTWVtYmVyMiBGYW1pbHkgTmFtZTIJRmFtaWx5IE1lbWJlcjIgR2l2ZW4gTmFtZTEJRmFtaWx5
IE1lbWJlcjIgR2l2ZW4gTmFtZTIJRmFtaWx5IE1lbWJlcjIgR2l2ZW4gTmFtZTMJRmFtaWx5IE1l
bWJlcjIgUmVsYXRpb25zaGlwCUZhbWlseSBNZW1iZXIyIEFnZQlGYW1pbHkgTWVtYmVyMiBISVYg
U3RhdHVzCUZhbWlseSBNZW1iZXIyIEluIEhJViBDYXJlCUZhbWlseSBNZW1iZXIyIFVuaXF1ZSBQ
YXRpZW50IE51bWJlcglGYW1pbHkgTWVtYmVyMyBGYW1pbHkgTmFtZTEJRmFtaWx5IE1lbWJlcjMg
RmFtaWx5IE5hbWUyCUZhbWlseSBNZW1iZXIzIEdpdmVuIE5hbWUxCUZhbWlseSBNZW1iZXIzIEdp
dmVuIE5hbWUyCUZhbWlseSBNZW1iZXIzIEdpdmVuIE5hbWUzCUZhbWlseSBNZW1iZXIzIFJlbGF0
aW9uc2hpcAlGYW1pbHkgTWVtYmVyMyBBZ2UJRmFtaWx5IE1lbWJlcjMgSElWIFN0YXR1cwlGYW1p
bHkgTWVtYmVyMyBJbiBISVYgQ2FyZQlGYW1pbHkgTWVtYmVyMyBVbmlxdWUgUGF0aWVudCBOdW1i
ZXIJRmFtaWx5IE1lbWJlcjQgRmFtaWx5IE5hbWUxCUZhbWlseSBNZW1iZXI0IEZhbWlseSBOYW1l
MglGYW1pbHkgTWVtYmVyNCBHaXZlbiBOYW1lMQlGYW1pbHkgTWVtYmVyNCBHaXZlbiBOYW1lMglG
YW1pbHkgTWVtYmVyNCBHaXZlbiBOYW1lMwlGYW1pbHkgTWVtYmVyNCBSZWxhdGlvbnNoaXAJRmFt
aWx5IE1lbWJlcjQgQWdlCUZhbWlseSBNZW1iZXI0IEhJViBTdGF0dXMJRmFtaWx5IE1lbWJlcjQg
SW4gSElWIENhcmUJRmFtaWx5IE1lbWJlcjQgVW5pcXVlIFBhdGllbnQgTnVtYmVyCUZhbWlseSBN
ZW1iZXI1IEZhbWlseSBOYW1lMQlGYW1pbHkgTWVtYmVyNSBGYW1pbHkgTmFtZTIJRmFtaWx5IE1l
bWJlcjUgR2l2ZW4gTmFtZTEJRmFtaWx5IE1lbWJlcjUgR2l2ZW4gTmFtZTIJRmFtaWx5IE1lbWJl
cjUgR2l2ZW4gTmFtZTMJRmFtaWx5IE1lbWJlcjUgUmVsYXRpb25zaGlwCUZhbWlseSBNZW1iZXI1
IEFnZQlGYW1pbHkgTWVtYmVyNSBISVYgU3RhdHVzCUZhbWlseSBNZW1iZXI1IEluIEhJViBDYXJl
CUZhbWlseSBNZW1iZXI1IFVuaXF1ZSBQYXRpZW50IE51bWJlcglGYW1pbHkgTWVtYmVyNiBGYW1p
bHkgTmFtZTEJRmFtaWx5IE1lbWJlcjYgRmFtaWx5IE5hbWUyCUZhbWlseSBNZW1iZXI2IEdpdmVu
IE5hbWUxCUZhbWlseSBNZW1iZXI2IEdpdmVuIE5hbWUyCUZhbWlseSBNZW1iZXI2IEdpdmVuIE5h
bWUzCUZhbWlseSBNZW1iZXI2IFJlbGF0aW9uc2hpcAlGYW1pbHkgTWVtYmVyNiBBZ2UJRmFtaWx5
IE1lbWJlcjYgSElWIFN0YXR1cwlGYW1pbHkgTWVtYmVyNiBJbiBISVYgQ2FyZQlGYW1pbHkgTWVt
YmVyNiBVbmlxdWUgUGF0aWVudCBOdW1iZXIJRmFtaWx5IE1lbWJlcjcgRmFtaWx5IE5hbWUxCUZh
bWlseSBNZW1iZXI3IEZhbWlseSBOYW1lMglGYW1pbHkgTWVtYmVyNyBHaXZlbiBOYW1lMQlGYW1p
bHkgTWVtYmVyNyBHaXZlbiBOYW1lMglGYW1pbHkgTWVtYmVyNyBHaXZlbiBOYW1lMwlGYW1pbHkg
TWVtYmVyNyBSZWxhdGlvbnNoaXAJRmFtaWx5IE1lbWJlcjcgQWdlCUZhbWlseSBNZW1iZXI3IEhJ
ViBTdGF0dXMJRmFtaWx5IE1lbWJlcjcgSW4gSElWIENhcmUJRmFtaWx5IE1lbWJlcjcgVW5pcXVl
IFBhdGllbnQgTnVtYmVyCUZhbWlseSBNZW1iZXI4IEZhbWlseSBOYW1lMQlGYW1pbHkgTWVtYmVy
OCBGYW1pbHkgTmFtZTIJRmFtaWx5IE1lbWJlcjggR2l2ZW4gTmFtZTEJRmFtaWx5IE1lbWJlcjgg
R2l2ZW4gTmFtZTIJRmFtaWx5IE1lbWJlcjggR2l2ZW4gTmFtZTMJRmFtaWx5IE1lbWJlcjggUmVs
YXRpb25zaGlwCUZhbWlseSBNZW1iZXI4IEFnZQlGYW1pbHkgTWVtYmVyOCBISVYgU3RhdHVzCUZh
bWlseSBNZW1iZXI4IEluIEhJViBDYXJlCUZhbWlseSBNZW1iZXI4IFVuaXF1ZSBQYXRpZW50IE51
bWJlcglNZWRpY2FsIEVsaWdpYmlsaXR5IGZvciBBUlYgVGhlcmFweSBEYXRlCU1lZGljYWwgRWxp
Z2liaWxpdHkgZm9yIEFSViBUaGVyYXB5IER1ZSBUbyBDbGluaWNhbCBXSE8gU3RhZ2UJTWVkaWNh
bCBFbGlnaWJpbGl0eSBmb3IgQVJWIFRoZXJhcHkgRHVlIFRvIFRMQwlNZWRpY2FsIEVsaWdpYmls
aXR5IGZvciBBUlYgVGhlcmFweSBEdWUgVG8gQ0Q0IENvdW50CU1lZGljYWwgRWxpZ2liaWxpdHkg
Zm9yIEFSViBUaGVyYXB5IER1ZSBUbyBDRDQgUGVyY2VudGFnZQlDdXJyZW50IEFSViBUaGVyYXB5
IFN0YXJ0IERhdGUJQ3VycmVudCBBUlYgVGhlcmFweSBTdGFydCBDb2hvcnQJQ3VycmVudCBBUlYg
VGhlcmFweSBTdGFydCBSZWdpbWVuCUN1cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQgV2VpZ2h0CUN1
cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQgSGVpZ2h0CUN1cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQg
Qk1JIChBZHVsdHMpCUN1cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQgV0hPIFN0YWdlCUZpcnN0IExp
bmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24xIERhdGUJRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1
YnN0aXR1dGlvbjEgUmVnaW1lbglGaXJzdCBMaW5lIEFSViBTd2l0Y2gvU3Vic3RpdHV0aW9uMSBS
ZWFzb24xCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24xIFJlYXNvbjIJRmlyc3Qg
TGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgUmVhc29uMwlGaXJzdCBMaW5lIEFSViBTd2l0
Y2gvU3Vic3RpdHV0aW9uMiBEYXRlCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24y
IFJlZ2ltZW4JRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVhc29uMQlGaXJz
dCBMaW5lIEFSViBTd2l0Y2gvU3Vic3RpdHV0aW9uMiBSZWFzb24yCUZpcnN0IExpbmUgQVJWIFN3
aXRjaC9TdWJzdGl0dXRpb24yIFJlYXNvbjMJRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1
dGlvbjMgRGF0ZQlGaXJzdCBMaW5lIEFSViBTd2l0Y2gvU3Vic3RpdHV0aW9uMyBSZWdpbWVuCUZp
cnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24zIFJlYXNvbjEJRmlyc3QgTGluZSBBUlYg
U3dpdGNoL1N1YnN0aXR1dGlvbjMgUmVhc29uMglGaXJzdCBMaW5lIEFSViBTd2l0Y2gvU3Vic3Rp
dHV0aW9uMyBSZWFzb24zCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb240IERhdGUJ
Rmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVnaW1lbglGaXJzdCBMaW5lIEFS
ViBTd2l0Y2gvU3Vic3RpdHV0aW9uNCBSZWFzb24xCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJz
dGl0dXRpb240IFJlYXNvbjIJRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVh
c29uMwlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgRGF0ZQlTZWNvbmQgTGlu
ZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNo
L1N1YnN0aXR1dGlvbjEgUmVhc29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlv
bjEgUmVhc29uMglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgUmVhc29uMwlT
ZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgRGF0ZQlTZWNvbmQgTGluZSBBUlYg
U3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0
aXR1dGlvbjIgUmVhc29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVh
c29uMglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVhc29uMwlTZWNvbmQg
TGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjMgRGF0ZQlTZWNvbmQgTGluZSBBUlYgU3dpdGNo
L1N1YnN0aXR1dGlvbjMgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlv
bjMgUmVhc29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjMgUmVhc29uMglT
ZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjMgUmVhc29uMwlTZWNvbmQgTGluZSBB
UlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgRGF0ZQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0
aXR1dGlvbjQgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVh
c29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVhc29uMglTZWNvbmQg
TGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVhc29uMwlQYXRpZW50IFRyYW5zZmVyIERh
dGUJUGF0aWVudCBUcmFuc2ZlciBGYWNpbGl0eQlQYXRpZW50IERlYXRoIERhdGUJQVJUIFRyZWF0
bWVudCBJbnRlcnJ1cHRpb24xIERhdGUJQVJUIFRyZWF0bWVudCBJbnRlcnJ1cHRpb24xIFJlYXNv
bglBUlQgVHJlYXRtZW50IEludGVycnVwdGlvbjEgUmVzdGFydCBEYXRlCUFSVCBUcmVhdG1lbnQg
SW50ZXJydXB0aW9uMiBEYXRlCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0aW9uMiBSZWFzb24JQVJU
IFRyZWF0bWVudCBJbnRlcnJ1cHRpb24yIFJlc3RhcnQgRGF0ZQlBUlQgVHJlYXRtZW50IEludGVy
cnVwdGlvbjMgRGF0ZQlBUlQgVHJlYXRtZW50IEludGVycnVwdGlvbjMgUmVhc29uCUFSVCBUcmVh
dG1lbnQgSW50ZXJydXB0aW9uMyBSZXN0YXJ0IERhdGUJQVJUIFRyZWF0bWVudCBJbnRlcnJ1cHRp
b240IERhdGUJQVJUIFRyZWF0bWVudCBJbnRlcnJ1cHRpb240IFJlYXNvbglBUlQgVHJlYXRtZW50
IEludGVycnVwdGlvbjQgUmVzdGFydCBEYXRlCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0aW9uNSBE
YXRlCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0aW9uNSBSZWFzb24JQVJUIFRyZWF0bWVudCBJbnRl
cnJ1cHRpb241IFJlc3RhcnQgRGF0ZQlBUlQgVHJlYXRtZW50IEludGVycnVwdGlvbjYgRGF0ZQlB
UlQgVHJlYXRtZW50IEludGVycnVwdGlvbjYgUmVhc29uCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0
aW9uNiBSZXN0YXJ0IERhdGUJRW5jb3VudGVyMSBVbmlxdWUgSWQJRW5jb3VudGVyMSBEYXRlCUVu
Y291bnRlcjEgVHlwZQlFbmNvdW50ZXIxIE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVy
MSBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjEgV2VpZ2h0CUVuY291bnRl
cjEgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyMSBIZWlnaHQJRW5jb3VudGVyMSBCTUkJRW5jb3Vu
dGVyMSBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjEgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUg
RGF0ZQlFbmNvdW50ZXIxIEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMSBGYW1pbHkg
UGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXIxIEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291
bnRlcjEgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyMSBGYW1pbHkgUGxhbm5pbmcg
TWV0aG9kNAlFbmNvdW50ZXIxIEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjEgVHVi
ZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXIxIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQg
TW9udGgJRW5jb3VudGVyMSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3Vu
dGVyMSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIxIFBvdGVudGlhbCBT
aWRlIEVmZmVjdDEJRW5jb3VudGVyMSBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjEg
UG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXIxIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJ
RW5jb3VudGVyMSBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjEgTmV3IE9wcG9ydHVu
aXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0
aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjEgV0hPIFN0YWdlCUVuY291bnRlcjEgQ290cmlt
b3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyMSBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNv
dW50ZXIxIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVy
MSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjEgQ290
cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIxIENvdHJpbW94
YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMSBDb3RyaW1veGF6b2xl
IFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjEgSU5IIERpc3BlbnNlZAlFbmNv
dW50ZXIxIE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9u
IERvc2FnZTEJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVy
MSBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBEb3Nh
Z2UyCUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjEgT3Ro
ZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlF
bmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXIxIE90aGVyIE1l
ZGljYXRpb24gTmFtZTQJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3Vu
dGVyMSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0
aW9uIE5hbWU1CUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjEg
T3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBO
YW1lNglFbmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIxIE90aGVy
IE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gTmFtZTcJ
RW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMSBPdGhlciBNZWRp
Y2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291
bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlv
biBGcmVxdWVuY3k4CUVuY291bnRlcjEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1l
CUVuY291bnRlcjEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3Vu
dGVyMSBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVu
Y2UxCUVuY291bnRlcjEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBv
b3IgQWRoZXJlbmNlMglFbmNvdW50ZXIxIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVh
c29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyMSBQcmlvciBBUlYgTWVkaWNhdGlvbi9S
ZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjEgUHJpb3IgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXIxIEFS
ViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIxIEFSViBNZWRpY2F0aW9uL1JlZ2lt
ZW4gRG9zYWdlCUVuY291bnRlcjEgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5
cwlFbmNvdW50ZXIxIENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjEgQ0Q0IExhYiBSZXN1
bHQgUGVyY2VudGFnZQlFbmNvdW50ZXIxIEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNv
dW50ZXIxIFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIxIFR1
YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjEgT3RoZXIgTGFiMSBOYW1lCUVu
Y291bnRlcjEgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyMSBPdGhlciBMYWIyIE5hbWUJRW5j
b3VudGVyMSBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXIxIFBhdGllbnQgUmVmZXJyZWQgVG8J
RW5jb3VudGVyMSBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIxIERpc2Nsb3N1cmUg
Q29kZQlFbmNvdW50ZXIxIFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMSBDb25kb21zIERp
c3BlbnNlZAlFbmNvdW50ZXIxIFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5p
bmcJRW5jb3VudGVyMSBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMSBDbGluaWNpYW4g
SW5pdGlhbHMJRW5jb3VudGVyMiBVbmlxdWUgSWQJRW5jb3VudGVyMiBEYXRlCUVuY291bnRlcjIg
VHlwZQlFbmNvdW50ZXIyIE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyMiBNb250aHMg
U2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjIgV2VpZ2h0CUVuY291bnRlcjIgQmxvb2Qg
UHJlc3N1cmUJRW5jb3VudGVyMiBIZWlnaHQJRW5jb3VudGVyMiBCTUkJRW5jb3VudGVyMiBQcmVn
bmFuY3kgU3RhdHVzCUVuY291bnRlcjIgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNv
dW50ZXIyIEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMiBGYW1pbHkgUGxhbm5pbmcg
TWV0aG9kMQlFbmNvdW50ZXIyIEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjIgRmFt
aWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlF
bmNvdW50ZXIyIEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjIgVHViZXJjdWxvc2lz
IFN0YXR1cwlFbmNvdW50ZXIyIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5j
b3VudGVyMiBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyMiBUdWJl
cmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIyIFBvdGVudGlhbCBTaWRlIEVmZmVj
dDEJRW5jb3VudGVyMiBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjIgUG90ZW50aWFs
IFNpZGUgRWZmZWN0MwlFbmNvdW50ZXIyIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVy
MiBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9u
L090aGVyIFByb2JsZW0zCUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW00CUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVy
IFByb2JsZW01CUVuY291bnRlcjIgV0hPIFN0YWdlCUVuY291bnRlcjIgQ290cmltb3hhem9sZSBE
aXNwZW5zZWQJRW5jb3VudGVyMiBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXIyIENv
dHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMiBDb3RyaW1v
eGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjIgQ290cmltb3hhem9s
ZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIyIENvdHJpbW94YXpvbGUgUmVh
c29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMiBDb3RyaW1veGF6b2xlIFJlYXNvbiBG
b3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjIgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXIyIE90
aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJ
RW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyMiBPdGhlciBN
ZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291
bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjIgT3RoZXIgTWVkaWNh
dGlvbiBOYW1lMwlFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXIy
IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRpb24g
TmFtZTQJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyMiBPdGhl
ciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU1
CUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjIgT3RoZXIgTWVk
aWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNv
dW50ZXIyIE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRp
b24gRnJlcXVlbmN5NglFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVy
MiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIEZy
ZXF1ZW5jeTcJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjIgT3Ro
ZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVu
Y3k4CUVuY291bnRlcjIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRl
cjIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyMiBQcmlv
ciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291
bnRlcjIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJl
bmNlMglFbmNvdW50ZXIyIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTMJRW5jb3VudGVyMiBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJl
YXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjIgUHJpb3IgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXIyIEFSViBNZWRpY2F0
aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIyIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdl
CUVuY291bnRlcjIgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50
ZXIyIENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjIgQ0Q0IExhYiBSZXN1bHQgUGVyY2Vu
dGFnZQlFbmNvdW50ZXIyIEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXIyIFJh
cGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIyIFR1YmVyY3Vsc2lz
IFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjIgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjIg
T3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyMiBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyMiBP
dGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXIyIFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVy
MiBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIyIERpc2Nsb3N1cmUgQ29kZQlFbmNv
dW50ZXIyIFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMiBDb25kb21zIERpc3BlbnNlZAlF
bmNvdW50ZXIyIFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3Vu
dGVyMiBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMiBDbGluaWNpYW4gSW5pdGlhbHMJ
RW5jb3VudGVyMyBVbmlxdWUgSWQJRW5jb3VudGVyMyBEYXRlCUVuY291bnRlcjMgVHlwZQlFbmNv
dW50ZXIzIE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyMyBNb250aHMgU2luY2UgQ3Vy
cmVudCBSZWdpbWVuCUVuY291bnRlcjMgV2VpZ2h0CUVuY291bnRlcjMgQmxvb2QgUHJlc3N1cmUJ
RW5jb3VudGVyMyBIZWlnaHQJRW5jb3VudGVyMyBCTUkJRW5jb3VudGVyMyBQcmVnbmFuY3kgU3Rh
dHVzCUVuY291bnRlcjMgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXIzIEZh
bWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMyBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlF
bmNvdW50ZXIzIEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjMgRmFtaWx5IFBsYW5u
aW5nIE1ldGhvZDMJRW5jb3VudGVyMyBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXIz
IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjMgVHViZXJjdWxvc2lzIFN0YXR1cwlF
bmNvdW50ZXIzIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyMyBU
dWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyMyBUdWJlcmN1bG9zaXMg
VHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIzIFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3Vu
dGVyMyBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjMgUG90ZW50aWFsIFNpZGUgRWZm
ZWN0MwlFbmNvdW50ZXIzIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyMyBQb3RlbnRp
YWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW0xCUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVy
IFByb2JsZW0yCUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFBy
b2JsZW0zCUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2Js
ZW00CUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01
CUVuY291bnRlcjMgV0hPIFN0YWdlCUVuY291bnRlcjMgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJ
RW5jb3VudGVyMyBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXIzIENvdHJpbW94YXpv
bGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMyBDb3RyaW1veGF6b2xlIFJl
YXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjMgQ290cmltb3hhem9sZSBSZWFzb24g
Rm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIzIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMyBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBB
ZGhlcmVuY2U1CUVuY291bnRlcjMgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXIzIE90aGVyIE1lZGlj
YXRpb24gTmFtZTEJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVy
MyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9u
IE5hbWUyCUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjMgT3Ro
ZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBOYW1l
MwlFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXIzIE90aGVyIE1l
ZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5j
b3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0
aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRl
cjMgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBG
cmVxdWVuY3k1CUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXIzIE90
aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gRnJlcXVl
bmN5NglFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyMyBPdGhlciBN
ZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJ
RW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjMgT3RoZXIgTWVkaWNh
dGlvbiBEb3NhZ2U4CUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291
bnRlcjMgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjMgUHJpb3Ig
QVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyMyBQcmlvciBBUlYgTWVk
aWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjMgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNv
dW50ZXIzIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVy
ZW5jZTMJRW5jb3VudGVyMyBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjMgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBS
ZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXIzIEFSViBNZWRpY2F0aW9uL1JlZ2lt
ZW4gTmFtZQlFbmNvdW50ZXIzIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRl
cjMgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXIzIENENCBM
YWIgUmVzdWx0IENvdW50CUVuY291bnRlcjMgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNv
dW50ZXIzIEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXIzIFJhcGlkIFBsYXNt
YSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIzIFR1YmVyY3Vsc2lzIFNwdXR1bSBM
YWIgUmVzdWx0CUVuY291bnRlcjMgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjMgT3RoZXIgTGFi
MSBSZXN1bHQJRW5jb3VudGVyMyBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyMyBPdGhlciBMYWIy
IFJlc3VsdAlFbmNvdW50ZXIzIFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyMyBBdCBSaXNr
IFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIzIERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXIzIFBh
cnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMyBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXIz
IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyMyBOZXh0
IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMyBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVy
NCBVbmlxdWUgSWQJRW5jb3VudGVyNCBEYXRlCUVuY291bnRlcjQgVHlwZQlFbmNvdW50ZXI0IE1v
bnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyNCBNb250aHMgU2luY2UgQ3VycmVudCBSZWdp
bWVuCUVuY291bnRlcjQgV2VpZ2h0CUVuY291bnRlcjQgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVy
NCBIZWlnaHQJRW5jb3VudGVyNCBCTUkJRW5jb3VudGVyNCBQcmVnbmFuY3kgU3RhdHVzCUVuY291
bnRlcjQgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI0IEZhbWlseSBQbGFu
bmluZyBTdGF0dXMJRW5jb3VudGVyNCBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI0
IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjQgRmFtaWx5IFBsYW5uaW5nIE1ldGhv
ZDMJRW5jb3VudGVyNCBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXI0IEZhbWlseSBQ
bGFubmluZyBNZXRob2Q1CUVuY291bnRlcjQgVHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI0
IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyNCBUdWJlcmN1bG9z
aXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyNCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50
IE51bWJlcglFbmNvdW50ZXI0IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNCBQb3Rl
bnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjQgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNv
dW50ZXI0IFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyNCBQb3RlbnRpYWwgU2lkZSBF
ZmZlY3Q1CUVuY291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2Js
ZW0xCUVuY291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0y
CUVuY291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVu
Y291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291
bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRl
cjQgV0hPIFN0YWdlCUVuY291bnRlcjQgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVy
NCBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI0IENvdHJpbW94YXpvbGUgUmVhc29u
IEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyNCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjQgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3Ig
QWRoZXJlbmNlMwlFbmNvdW50ZXI0IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVy
ZW5jZTQJRW5jb3VudGVyNCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1
CUVuY291bnRlcjQgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24gTmFt
ZTEJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyNCBPdGhlciBN
ZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVu
Y291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjQgT3RoZXIgTWVkaWNh
dGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50
ZXI0IE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24g
RnJlcXVlbmN5MwlFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNCBP
dGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1
ZW5jeTQJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRlcjQgT3RoZXIg
TWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1
CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI0IE90aGVyIE1lZGlj
YXRpb24gRG9zYWdlNglFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNv
dW50ZXI0IE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9u
IERvc2FnZTcJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVy
NCBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBEb3Nh
Z2U4CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjQgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjQgUHJpb3IgQVJWIE1lZGlj
YXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyNCBQcmlvciBBUlYgTWVkaWNhdGlvbi9S
ZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjQgUHJpb3IgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI0IFBy
aW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5j
b3VudGVyNCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhl
cmVuY2U0CUVuY291bnRlcjQgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9y
IFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI0IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlF
bmNvdW50ZXI0IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRlcjQgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI0IENENCBMYWIgUmVzdWx0
IENvdW50CUVuY291bnRlcjQgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI0IEhl
bW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI0IFJhcGlkIFBsYXNtYSBSZWFnaW4g
KFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI0IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0
CUVuY291bnRlcjQgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjQgT3RoZXIgTGFiMSBSZXN1bHQJ
RW5jb3VudGVyNCBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyNCBPdGhlciBMYWIyIFJlc3VsdAlF
bmNvdW50ZXI0IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyNCBBdCBSaXNrIFBvcHVsYXRp
b24gQ29kZQlFbmNvdW50ZXI0IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI0IFBhcnRuZXIgVGVz
dGVkIENvZGUJRW5jb3VudGVyNCBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXI0IFNleHVhbGx5
IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyNCBOZXh0IEFwcG9pbnRt
ZW50IERhdGUJRW5jb3VudGVyNCBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVyNSBVbmlxdWUg
SWQJRW5jb3VudGVyNSBEYXRlCUVuY291bnRlcjUgVHlwZQlFbmNvdW50ZXI1IE1vbnRocyBTaW5j
ZSBBUlQgU3RhcnQJRW5jb3VudGVyNSBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291
bnRlcjUgV2VpZ2h0CUVuY291bnRlcjUgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyNSBIZWlnaHQJ
RW5jb3VudGVyNSBCTUkJRW5jb3VudGVyNSBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjUgUHJl
Z25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI1IEZhbWlseSBQbGFubmluZyBTdGF0
dXMJRW5jb3VudGVyNSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI1IEZhbWlseSBQ
bGFubmluZyBNZXRob2QyCUVuY291bnRlcjUgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3Vu
dGVyNSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXI1IEZhbWlseSBQbGFubmluZyBN
ZXRob2Q1CUVuY291bnRlcjUgVHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI1IFR1YmVyY3Vs
b3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyNSBUdWJlcmN1bG9zaXMgVHJlYXRt
ZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyNSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglF
bmNvdW50ZXI1IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNSBQb3RlbnRpYWwgU2lk
ZSBFZmZlY3QyCUVuY291bnRlcjUgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI1IFBv
dGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyNSBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVu
Y291bnRlcjUgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291
bnRlcjUgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRl
cjUgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjUg
TmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjUgTmV3
IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjUgV0hPIFN0
YWdlCUVuY291bnRlcjUgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyNSBDb3RyaW1v
eGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI1IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29y
IEFkaGVyZW5jZTEJRW5jb3VudGVyNSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhl
cmVuY2UyCUVuY291bnRlcjUgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNl
MwlFbmNvdW50ZXI1IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5j
b3VudGVyNSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRl
cjUgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3Vu
dGVyNSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9u
IEZyZXF1ZW5jeTEJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjUg
T3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBGcmVx
dWVuY3kyCUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI1IE90aGVy
IE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5
MwlFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNSBPdGhlciBNZWRp
Y2F0aW9uIERvc2FnZTQJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5j
b3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlv
biBEb3NhZ2U1CUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRl
cjUgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gRG9z
YWdlNglFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI1IE90
aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJ
RW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyNSBPdGhlciBN
ZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291
bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjUgUHJpb3IgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjUgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyNSBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJl
YXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjUgUHJpb3IgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI1IFByaW9yIEFSViBN
ZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyNSBQ
cmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVu
Y291bnRlcjUgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRo
ZXJlbmNlNQlFbmNvdW50ZXI1IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI1
IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRlcjUgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI1IENENCBMYWIgUmVzdWx0IENvdW50CUVu
Y291bnRlcjUgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI1IEhlbW9nbG9iaW4g
KEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI1IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFi
IFJlc3VsdAlFbmNvdW50ZXI1IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRl
cjUgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjUgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVy
NSBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyNSBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI1
IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyNSBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlF
bmNvdW50ZXI1IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI1IFBhcnRuZXIgVGVzdGVkIENvZGUJ
RW5jb3VudGVyNSBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXI1IFNleHVhbGx5IFRyYW5zbWl0
dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyNSBOZXh0IEFwcG9pbnRtZW50IERhdGUJ
RW5jb3VudGVyNSBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVyNiBVbmlxdWUgSWQJRW5jb3Vu
dGVyNiBEYXRlCUVuY291bnRlcjYgVHlwZQlFbmNvdW50ZXI2IE1vbnRocyBTaW5jZSBBUlQgU3Rh
cnQJRW5jb3VudGVyNiBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjYgV2Vp
Z2h0CUVuY291bnRlcjYgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyNiBIZWlnaHQJRW5jb3VudGVy
NiBCTUkJRW5jb3VudGVyNiBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjYgUHJlZ25hbmN5IEVz
dGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI2IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3Vu
dGVyNiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI2IEZhbWlseSBQbGFubmluZyBN
ZXRob2QyCUVuY291bnRlcjYgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyNiBGYW1p
bHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXI2IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVu
Y291bnRlcjYgVHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI2IFR1YmVyY3Vsb3NpcyBUcmVh
dG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyNiBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0
IFllYXIJRW5jb3VudGVyNiBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI2
IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNiBQb3RlbnRpYWwgU2lkZSBFZmZlY3Qy
CUVuY291bnRlcjYgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI2IFBvdGVudGlhbCBT
aWRlIEVmZmVjdDQJRW5jb3VudGVyNiBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjYg
TmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjYgTmV3
IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjYgTmV3IE9w
cG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjYgTmV3IE9wcG9y
dHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjYgTmV3IE9wcG9ydHVu
aXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjYgV0hPIFN0YWdlCUVuY291
bnRlcjYgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyNiBDb3RyaW1veGF6b2xlIEFk
aGVyZW5jZQlFbmNvdW50ZXI2IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5j
ZTEJRW5jb3VudGVyNiBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVu
Y291bnRlcjYgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50
ZXI2IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyNiBD
b3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjYgSU5IIERp
c3BlbnNlZAlFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyNiBPdGhl
ciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5j
eTEJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjYgT3RoZXIgTWVk
aWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVu
Y291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRp
b24gRG9zYWdlMwlFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50
ZXI2IE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIERv
c2FnZTQJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyNiBP
dGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1
CUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjYgT3RoZXIg
TWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNv
dW50ZXI2IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI2IE90aGVyIE1lZGlj
YXRpb24gTmFtZTcJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVy
NiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9u
IE5hbWU4CUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjYgT3Ro
ZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjYgUHJpb3IgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBOYW1lCUVuY291bnRlcjYgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhl
cmVuY2UJRW5jb3VudGVyNiBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjYgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBS
ZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI2IFByaW9yIEFSViBNZWRpY2F0aW9u
L1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyNiBQcmlvciBBUlYg
TWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjYg
UHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlF
bmNvdW50ZXI2IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI2IEFSViBNZWRp
Y2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRlcjYgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBO
dW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI2IENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjYg
Q0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI2IEhlbW9nbG9iaW4gKEhnYikgTGFi
IFJlc3VsdAlFbmNvdW50ZXI2IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlF
bmNvdW50ZXI2IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjYgT3RoZXIg
TGFiMSBOYW1lCUVuY291bnRlcjYgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyNiBPdGhlciBM
YWIyIE5hbWUJRW5jb3VudGVyNiBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI2IFBhdGllbnQg
UmVmZXJyZWQgVG8JRW5jb3VudGVyNiBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI2
IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI2IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVy
NiBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXI2IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVj
dGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyNiBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVy
NiBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVyNyBVbmlxdWUgSWQJRW5jb3VudGVyNyBEYXRl
CUVuY291bnRlcjcgVHlwZQlFbmNvdW50ZXI3IE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3Vu
dGVyNyBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjcgV2VpZ2h0CUVuY291
bnRlcjcgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyNyBIZWlnaHQJRW5jb3VudGVyNyBCTUkJRW5j
b3VudGVyNyBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjcgUHJlZ25hbmN5IEVzdGltYXRlZCBE
dWUgRGF0ZQlFbmNvdW50ZXI3IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyNyBGYW1p
bHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI3IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVu
Y291bnRlcjcgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyNyBGYW1pbHkgUGxhbm5p
bmcgTWV0aG9kNAlFbmNvdW50ZXI3IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjcg
VHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI3IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3Rh
cnQgTW9udGgJRW5jb3VudGVyNyBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5j
b3VudGVyNyBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI3IFBvdGVudGlh
bCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNyBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRl
cjcgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI3IFBvdGVudGlhbCBTaWRlIEVmZmVj
dDQJRW5jb3VudGVyNyBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjcgTmV3IE9wcG9y
dHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjcgTmV3IE9wcG9ydHVu
aXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjcgTmV3IE9wcG9ydHVuaXN0
aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjcgTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjcgTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjcgV0hPIFN0YWdlCUVuY291bnRlcjcgQ290
cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyNyBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlF
bmNvdW50ZXI3IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3Vu
dGVyNyBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjcg
Q290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXI3IENvdHJp
bW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyNyBDb3RyaW1veGF6
b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjcgSU5IIERpc3BlbnNlZAlF
bmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0
aW9uIERvc2FnZTEJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3Vu
dGVyNyBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBE
b3NhZ2UyCUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjcg
T3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gRG9zYWdl
MwlFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXI3IE90aGVy
IE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5j
b3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyNyBPdGhlciBNZWRp
Y2F0aW9uIE5hbWU1CUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRl
cjcgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlv
biBOYW1lNglFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXI3IE90
aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gTmFt
ZTcJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyNyBPdGhlciBN
ZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVu
Y291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjcgT3RoZXIgTWVkaWNh
dGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjcgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBO
YW1lCUVuY291bnRlcjcgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5j
b3VudGVyNyBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhl
cmVuY2UxCUVuY291bnRlcjcgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9y
IFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI3IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4g
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyNyBQcmlvciBBUlYgTWVkaWNhdGlv
bi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjcgUHJpb3IgQVJW
IE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI3
IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI3IEFSViBNZWRpY2F0aW9uL1Jl
Z2ltZW4gRG9zYWdlCUVuY291bnRlcjcgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2Yg
RGF5cwlFbmNvdW50ZXI3IENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjcgQ0Q0IExhYiBS
ZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI3IEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlF
bmNvdW50ZXI3IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI3
IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjcgT3RoZXIgTGFiMSBOYW1l
CUVuY291bnRlcjcgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyNyBPdGhlciBMYWIyIE5hbWUJ
RW5jb3VudGVyNyBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI3IFBhdGllbnQgUmVmZXJyZWQg
VG8JRW5jb3VudGVyNyBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI3IERpc2Nsb3N1
cmUgQ29kZQlFbmNvdW50ZXI3IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyNyBDb25kb21z
IERpc3BlbnNlZAlFbmNvdW50ZXI3IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3Jl
ZW5pbmcJRW5jb3VudGVyNyBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyNyBDbGluaWNp
YW4gSW5pdGlhbHMJRW5jb3VudGVyOCBVbmlxdWUgSWQJRW5jb3VudGVyOCBEYXRlCUVuY291bnRl
cjggVHlwZQlFbmNvdW50ZXI4IE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyOCBNb250
aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjggV2VpZ2h0CUVuY291bnRlcjggQmxv
b2QgUHJlc3N1cmUJRW5jb3VudGVyOCBIZWlnaHQJRW5jb3VudGVyOCBCTUkJRW5jb3VudGVyOCBQ
cmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjggUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlF
bmNvdW50ZXI4IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyOCBGYW1pbHkgUGxhbm5p
bmcgTWV0aG9kMQlFbmNvdW50ZXI4IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjgg
RmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyOCBGYW1pbHkgUGxhbm5pbmcgTWV0aG9k
NAlFbmNvdW50ZXI4IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjggVHViZXJjdWxv
c2lzIFN0YXR1cwlFbmNvdW50ZXI4IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJ
RW5jb3VudGVyOCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyOCBU
dWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI4IFBvdGVudGlhbCBTaWRlIEVm
ZmVjdDEJRW5jb3VudGVyOCBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjggUG90ZW50
aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI4IFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3Vu
dGVyOCBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9u
L090aGVyIFByb2JsZW00CUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW01CUVuY291bnRlcjggV0hPIFN0YWdlCUVuY291bnRlcjggQ290cmltb3hhem9s
ZSBEaXNwZW5zZWQJRW5jb3VudGVyOCBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI4
IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyOCBDb3Ry
aW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjggQ290cmltb3hh
em9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXI4IENvdHJpbW94YXpvbGUg
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyOCBDb3RyaW1veGF6b2xlIFJlYXNv
biBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjggSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI4
IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIERvc2Fn
ZTEJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyOCBPdGhl
ciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVu
Y291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjggT3RoZXIgTWVk
aWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI4IE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50
ZXI4IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXI4IE90aGVyIE1lZGljYXRp
b24gTmFtZTQJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyOCBP
dGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIE5h
bWU1CUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjggT3RoZXIg
TWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglF
bmNvdW50ZXI4IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXI4IE90aGVyIE1lZGlj
YXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI4IE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3Vu
dGVyOCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9u
IEZyZXF1ZW5jeTcJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjgg
T3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBGcmVx
dWVuY3k4CUVuY291bnRlcjggUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291
bnRlcjggUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyOCBQ
cmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVu
Y291bnRlcjggUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRo
ZXJlbmNlMglFbmNvdW50ZXI4IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZv
ciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyOCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVu
IFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjggUHJpb3IgQVJWIE1lZGljYXRp
b24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI4IEFSViBNZWRp
Y2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI4IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9z
YWdlCUVuY291bnRlcjggQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNv
dW50ZXI4IENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjggQ0Q0IExhYiBSZXN1bHQgUGVy
Y2VudGFnZQlFbmNvdW50ZXI4IEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI4
IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI4IFR1YmVyY3Vs
c2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjggT3RoZXIgTGFiMSBOYW1lCUVuY291bnRl
cjggT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyOCBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVy
OCBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI4IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3Vu
dGVyOCBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI4IERpc2Nsb3N1cmUgQ29kZQlF
bmNvdW50ZXI4IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyOCBDb25kb21zIERpc3BlbnNl
ZAlFbmNvdW50ZXI4IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5j
b3VudGVyOCBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyOCBDbGluaWNpYW4gSW5pdGlh
bHMJRW5jb3VudGVyOSBVbmlxdWUgSWQJRW5jb3VudGVyOSBEYXRlCUVuY291bnRlcjkgVHlwZQlF
bmNvdW50ZXI5IE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyOSBNb250aHMgU2luY2Ug
Q3VycmVudCBSZWdpbWVuCUVuY291bnRlcjkgV2VpZ2h0CUVuY291bnRlcjkgQmxvb2QgUHJlc3N1
cmUJRW5jb3VudGVyOSBIZWlnaHQJRW5jb3VudGVyOSBCTUkJRW5jb3VudGVyOSBQcmVnbmFuY3kg
U3RhdHVzCUVuY291bnRlcjkgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI5
IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyOSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9k
MQlFbmNvdW50ZXI5IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjkgRmFtaWx5IFBs
YW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyOSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50
ZXI5IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjkgVHViZXJjdWxvc2lzIFN0YXR1
cwlFbmNvdW50ZXI5IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVy
OSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyOSBUdWJlcmN1bG9z
aXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI5IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5j
b3VudGVyOSBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjkgUG90ZW50aWFsIFNpZGUg
RWZmZWN0MwlFbmNvdW50ZXI5IFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyOSBQb3Rl
bnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9u
L090aGVyIFByb2JsZW0xCUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW0yCUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVy
IFByb2JsZW0zCUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFBy
b2JsZW00CUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2Js
ZW01CUVuY291bnRlcjkgV0hPIFN0YWdlCUVuY291bnRlcjkgQ290cmltb3hhem9sZSBEaXNwZW5z
ZWQJRW5jb3VudGVyOSBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI5IENvdHJpbW94
YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyOSBDb3RyaW1veGF6b2xl
IFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjkgQ290cmltb3hhem9sZSBSZWFz
b24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXI5IENvdHJpbW94YXpvbGUgUmVhc29uIEZv
ciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyOSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9v
ciBBZGhlcmVuY2U1CUVuY291bnRlcjkgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI5IE90aGVyIE1l
ZGljYXRpb24gTmFtZTEJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3Vu
dGVyOSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0
aW9uIE5hbWUyCUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjkg
T3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBO
YW1lMwlFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXI5IE90aGVy
IE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gTmFtZTQJ
RW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyOSBPdGhlciBNZWRp
Y2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291
bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlv
biBGcmVxdWVuY3k1CUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI5
IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gRnJl
cXVlbmN5NglFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyOSBPdGhl
ciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5j
eTcJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjkgT3RoZXIgTWVk
aWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVu
Y291bnRlcjkgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjkgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyOSBQcmlvciBBUlYg
TWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjkg
UHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglF
bmNvdW50ZXI5IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFk
aGVyZW5jZTMJRW5jb3VudGVyOSBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBG
b3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjkgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1l
biBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI5IEFSViBNZWRpY2F0aW9uL1Jl
Z2ltZW4gTmFtZQlFbmNvdW50ZXI5IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291
bnRlcjkgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI5IENE
NCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjkgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlF
bmNvdW50ZXI5IEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI5IFJhcGlkIFBs
YXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI5IFR1YmVyY3Vsc2lzIFNwdXR1
bSBMYWIgUmVzdWx0CUVuY291bnRlcjkgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjkgT3RoZXIg
TGFiMSBSZXN1bHQJRW5jb3VudGVyOSBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyOSBPdGhlciBM
YWIyIFJlc3VsdAlFbmNvdW50ZXI5IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyOSBBdCBS
aXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI5IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI5
IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyOSBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50
ZXI5IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyOSBO
ZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyOSBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3Vu
dGVyMTAgVW5pcXVlIElkCUVuY291bnRlcjEwIERhdGUJRW5jb3VudGVyMTAgVHlwZQlFbmNvdW50
ZXIxMCBNb250aHMgU2luY2UgQVJUIFN0YXJ0CUVuY291bnRlcjEwIE1vbnRocyBTaW5jZSBDdXJy
ZW50IFJlZ2ltZW4JRW5jb3VudGVyMTAgV2VpZ2h0CUVuY291bnRlcjEwIEJsb29kIFByZXNzdXJl
CUVuY291bnRlcjEwIEhlaWdodAlFbmNvdW50ZXIxMCBCTUkJRW5jb3VudGVyMTAgUHJlZ25hbmN5
IFN0YXR1cwlFbmNvdW50ZXIxMCBQcmVnbmFuY3kgRXN0aW1hdGVkIER1ZSBEYXRlCUVuY291bnRl
cjEwIEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1l
dGhvZDEJRW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDIJRW5jb3VudGVyMTAgRmFt
aWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDQJ
RW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDUJRW5jb3VudGVyMTAgVHViZXJjdWxv
c2lzIFN0YXR1cwlFbmNvdW50ZXIxMCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IE1vbnRo
CUVuY291bnRlcjEwIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgWWVhcglFbmNvdW50ZXIx
MCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIxMCBQb3RlbnRpYWwgU2lk
ZSBFZmZlY3QxCUVuY291bnRlcjEwIFBvdGVudGlhbCBTaWRlIEVmZmVjdDIJRW5jb3VudGVyMTAg
UG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXIxMCBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q0
CUVuY291bnRlcjEwIFBvdGVudGlhbCBTaWRlIEVmZmVjdDUJRW5jb3VudGVyMTAgTmV3IE9wcG9y
dHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjEwIE5ldyBPcHBvcnR1
bmlzdGljIEluZmVjdGlvbi9PdGhlciBQcm9ibGVtMglFbmNvdW50ZXIxMCBOZXcgT3Bwb3J0dW5p
c3RpYyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTMJRW5jb3VudGVyMTAgTmV3IE9wcG9ydHVuaXN0
aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjEwIE5ldyBPcHBvcnR1bmlzdGlj
IEluZmVjdGlvbi9PdGhlciBQcm9ibGVtNQlFbmNvdW50ZXIxMCBXSE8gU3RhZ2UJRW5jb3VudGVy
MTAgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyMTAgQ290cmltb3hhem9sZSBBZGhl
cmVuY2UJRW5jb3VudGVyMTAgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNl
MQlFbmNvdW50ZXIxMCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVu
Y291bnRlcjEwIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3Vu
dGVyMTAgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNAlFbmNvdW50ZXIx
MCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjEwIElO
SCBEaXNwZW5zZWQJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMQlFbmNvdW50ZXIx
MCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBG
cmVxdWVuY3kxCUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gTmFtZTIJRW5jb3VudGVyMTAg
T3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gRnJl
cXVlbmN5MglFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIE5hbWUzCUVuY291bnRlcjEwIE90
aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1
ZW5jeTMJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNAlFbmNvdW50ZXIxMCBPdGhl
ciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVu
Y3k0CUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gTmFtZTUJRW5jb3VudGVyMTAgT3RoZXIg
TWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5
NQlFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIE5hbWU2CUVuY291bnRlcjEwIE90aGVyIE1l
ZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTYJ
RW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNwlFbmNvdW50ZXIxMCBPdGhlciBNZWRp
Y2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k3CUVu
Y291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gTmFtZTgJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNh
dGlvbiBEb3NhZ2U4CUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5OAlFbmNv
dW50ZXIxMCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIE5hbWUJRW5jb3VudGVyMTAgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyMTAgUHJpb3IgQVJW
IE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMQlFbmNvdW50ZXIx
MCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2Uy
CUVuY291bnRlcjEwIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29y
IEFkaGVyZW5jZTMJRW5jb3VudGVyMTAgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFz
b24gRm9yIFBvb3IgQWRoZXJlbmNlNAlFbmNvdW50ZXIxMCBQcmlvciBBUlYgTWVkaWNhdGlvbi9S
ZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjEwIEFSViBNZWRpY2F0
aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIxMCBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIERvc2Fn
ZQlFbmNvdW50ZXIxMCBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIE51bWJlciBvZiBEYXlzCUVuY291
bnRlcjEwIENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjEwIENENCBMYWIgUmVzdWx0IFBl
cmNlbnRhZ2UJRW5jb3VudGVyMTAgSGVtb2dsb2JpbiAoSGdiKSBMYWIgUmVzdWx0CUVuY291bnRl
cjEwIFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIxMCBUdWJl
cmN1bHNpcyBTcHV0dW0gTGFiIFJlc3VsdAlFbmNvdW50ZXIxMCBPdGhlciBMYWIxIE5hbWUJRW5j
b3VudGVyMTAgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyMTAgT3RoZXIgTGFiMiBOYW1lCUVu
Y291bnRlcjEwIE90aGVyIExhYjIgUmVzdWx0CUVuY291bnRlcjEwIFBhdGllbnQgUmVmZXJyZWQg
VG8JRW5jb3VudGVyMTAgQXQgUmlzayBQb3B1bGF0aW9uIENvZGUJRW5jb3VudGVyMTAgRGlzY2xv
c3VyZSBDb2RlCUVuY291bnRlcjEwIFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMTAgQ29u
ZG9tcyBEaXNwZW5zZWQJRW5jb3VudGVyMTAgU2V4dWFsbHkgVHJhbnNtaXR0ZWQgSW5mZWN0aW9u
IFNjcmVlbmluZwlFbmNvdW50ZXIxMCBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMTAg
Q2xpbmljaWFuIEluaXRpYWxzCUVuY291bnRlcjExIFVuaXF1ZSBJZAlFbmNvdW50ZXIxMSBEYXRl
CUVuY291bnRlcjExIFR5cGUJRW5jb3VudGVyMTEgTW9udGhzIFNpbmNlIEFSVCBTdGFydAlFbmNv
dW50ZXIxMSBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjExIFdlaWdodAlF
bmNvdW50ZXIxMSBCbG9vZCBQcmVzc3VyZQlFbmNvdW50ZXIxMSBIZWlnaHQJRW5jb3VudGVyMTEg
Qk1JCUVuY291bnRlcjExIFByZWduYW5jeSBTdGF0dXMJRW5jb3VudGVyMTEgUHJlZ25hbmN5IEVz
dGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXIxMSBGYW1pbHkgUGxhbm5pbmcgU3RhdHVzCUVuY291
bnRlcjExIEZhbWlseSBQbGFubmluZyBNZXRob2QxCUVuY291bnRlcjExIEZhbWlseSBQbGFubmlu
ZyBNZXRob2QyCUVuY291bnRlcjExIEZhbWlseSBQbGFubmluZyBNZXRob2QzCUVuY291bnRlcjEx
IEZhbWlseSBQbGFubmluZyBNZXRob2Q0CUVuY291bnRlcjExIEZhbWlseSBQbGFubmluZyBNZXRo
b2Q1CUVuY291bnRlcjExIFR1YmVyY3Vsb3NpcyBTdGF0dXMJRW5jb3VudGVyMTEgVHViZXJjdWxv
c2lzIFRyZWF0bWVudCBTdGFydCBNb250aAlFbmNvdW50ZXIxMSBUdWJlcmN1bG9zaXMgVHJlYXRt
ZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyMTEgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBOdW1iZXIJ
RW5jb3VudGVyMTEgUG90ZW50aWFsIFNpZGUgRWZmZWN0MQlFbmNvdW50ZXIxMSBQb3RlbnRpYWwg
U2lkZSBFZmZlY3QyCUVuY291bnRlcjExIFBvdGVudGlhbCBTaWRlIEVmZmVjdDMJRW5jb3VudGVy
MTEgUG90ZW50aWFsIFNpZGUgRWZmZWN0NAlFbmNvdW50ZXIxMSBQb3RlbnRpYWwgU2lkZSBFZmZl
Y3Q1CUVuY291bnRlcjExIE5ldyBPcHBvcnR1bmlzdGljIEluZmVjdGlvbi9PdGhlciBQcm9ibGVt
MQlFbmNvdW50ZXIxMSBOZXcgT3Bwb3J0dW5pc3RpYyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTIJ
RW5jb3VudGVyMTEgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVu
Y291bnRlcjExIE5ldyBPcHBvcnR1bmlzdGljIEluZmVjdGlvbi9PdGhlciBQcm9ibGVtNAlFbmNv
dW50ZXIxMSBOZXcgT3Bwb3J0dW5pc3RpYyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTUJRW5jb3Vu
dGVyMTEgV0hPIFN0YWdlCUVuY291bnRlcjExIENvdHJpbW94YXpvbGUgRGlzcGVuc2VkCUVuY291
bnRlcjExIENvdHJpbW94YXpvbGUgQWRoZXJlbmNlCUVuY291bnRlcjExIENvdHJpbW94YXpvbGUg
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMTEgQ290cmltb3hhem9sZSBSZWFz
b24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXIxMSBDb3RyaW1veGF6b2xlIFJlYXNvbiBG
b3IgUG9vciBBZGhlcmVuY2UzCUVuY291bnRlcjExIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMTEgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3Ig
QWRoZXJlbmNlNQlFbmNvdW50ZXIxMSBJTkggRGlzcGVuc2VkCUVuY291bnRlcjExIE90aGVyIE1l
ZGljYXRpb24gTmFtZTEJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UxCUVuY291
bnRlcjExIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MQlFbmNvdW50ZXIxMSBPdGhlciBNZWRp
Y2F0aW9uIE5hbWUyCUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMglFbmNvdW50
ZXIxMSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTIJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNh
dGlvbiBOYW1lMwlFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTMJRW5jb3VudGVy
MTEgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kzCUVuY291bnRlcjExIE90aGVyIE1lZGljYXRp
b24gTmFtZTQJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U0CUVuY291bnRlcjEx
IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NAlFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9u
IE5hbWU1CUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gRG9zYWdlNQlFbmNvdW50ZXIxMSBP
dGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTUJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBO
YW1lNglFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTYJRW5jb3VudGVyMTEgT3Ro
ZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k2CUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gTmFt
ZTcJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U3CUVuY291bnRlcjExIE90aGVy
IE1lZGljYXRpb24gRnJlcXVlbmN5NwlFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9uIE5hbWU4
CUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gRG9zYWdlOAlFbmNvdW50ZXIxMSBPdGhlciBN
ZWRpY2F0aW9uIEZyZXF1ZW5jeTgJRW5jb3VudGVyMTEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBOYW1lCUVuY291bnRlcjExIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gQWRoZXJl
bmNlCUVuY291bnRlcjExIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMTEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBS
ZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXIxMSBQcmlvciBBUlYgTWVkaWNhdGlv
bi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UzCUVuY291bnRlcjExIFByaW9yIEFS
ViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVy
MTEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNl
NQlFbmNvdW50ZXIxMSBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIE5hbWUJRW5jb3VudGVyMTEgQVJW
IE1lZGljYXRpb24vUmVnaW1lbiBEb3NhZ2UJRW5jb3VudGVyMTEgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXIxMSBDRDQgTGFiIFJlc3VsdCBDb3VudAlFbmNv
dW50ZXIxMSBDRDQgTGFiIFJlc3VsdCBQZXJjZW50YWdlCUVuY291bnRlcjExIEhlbW9nbG9iaW4g
KEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXIxMSBSYXBpZCBQbGFzbWEgUmVhZ2luIChSUFIpIExh
YiBSZXN1bHQJRW5jb3VudGVyMTEgVHViZXJjdWxzaXMgU3B1dHVtIExhYiBSZXN1bHQJRW5jb3Vu
dGVyMTEgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjExIE90aGVyIExhYjEgUmVzdWx0CUVuY291
bnRlcjExIE90aGVyIExhYjIgTmFtZQlFbmNvdW50ZXIxMSBPdGhlciBMYWIyIFJlc3VsdAlFbmNv
dW50ZXIxMSBQYXRpZW50IFJlZmVycmVkIFRvCUVuY291bnRlcjExIEF0IFJpc2sgUG9wdWxhdGlv
biBDb2RlCUVuY291bnRlcjExIERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXIxMSBQYXJ0bmVyIFRl
c3RlZCBDb2RlCUVuY291bnRlcjExIENvbmRvbXMgRGlzcGVuc2VkCUVuY291bnRlcjExIFNleHVh
bGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyMTEgTmV4dCBBcHBv
aW50bWVudCBEYXRlCUVuY291bnRlcjExIENsaW5pY2lhbiBJbml0aWFscwlFbmNvdW50ZXIxMiBV
bmlxdWUgSWQJRW5jb3VudGVyMTIgRGF0ZQlFbmNvdW50ZXIxMiBUeXBlCUVuY291bnRlcjEyIE1v
bnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyMTIgTW9udGhzIFNpbmNlIEN1cnJlbnQgUmVn
aW1lbglFbmNvdW50ZXIxMiBXZWlnaHQJRW5jb3VudGVyMTIgQmxvb2QgUHJlc3N1cmUJRW5jb3Vu
dGVyMTIgSGVpZ2h0CUVuY291bnRlcjEyIEJNSQlFbmNvdW50ZXIxMiBQcmVnbmFuY3kgU3RhdHVz
CUVuY291bnRlcjEyIFByZWduYW5jeSBFc3RpbWF0ZWQgRHVlIERhdGUJRW5jb3VudGVyMTIgRmFt
aWx5IFBsYW5uaW5nIFN0YXR1cwlFbmNvdW50ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlF
bmNvdW50ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMglFbmNvdW50ZXIxMiBGYW1pbHkgUGxh
bm5pbmcgTWV0aG9kMwlFbmNvdW50ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50
ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNQlFbmNvdW50ZXIxMiBUdWJlcmN1bG9zaXMgU3Rh
dHVzCUVuY291bnRlcjEyIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3Vu
dGVyMTIgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBTdGFydCBZZWFyCUVuY291bnRlcjEyIFR1YmVy
Y3Vsb3NpcyBUcmVhdG1lbnQgTnVtYmVyCUVuY291bnRlcjEyIFBvdGVudGlhbCBTaWRlIEVmZmVj
dDEJRW5jb3VudGVyMTIgUG90ZW50aWFsIFNpZGUgRWZmZWN0MglFbmNvdW50ZXIxMiBQb3RlbnRp
YWwgU2lkZSBFZmZlY3QzCUVuY291bnRlcjEyIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3Vu
dGVyMTIgUG90ZW50aWFsIFNpZGUgRWZmZWN0NQlFbmNvdW50ZXIxMiBOZXcgT3Bwb3J0dW5pc3Rp
YyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTEJRW5jb3VudGVyMTIgTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjEyIE5ldyBPcHBvcnR1bmlzdGljIElu
ZmVjdGlvbi9PdGhlciBQcm9ibGVtMwlFbmNvdW50ZXIxMiBOZXcgT3Bwb3J0dW5pc3RpYyBJbmZl
Y3Rpb24vT3RoZXIgUHJvYmxlbTQJRW5jb3VudGVyMTIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjEyIFdITyBTdGFnZQlFbmNvdW50ZXIxMiBDb3Ry
aW1veGF6b2xlIERpc3BlbnNlZAlFbmNvdW50ZXIxMiBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlF
bmNvdW50ZXIxMiBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291
bnRlcjEyIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTIJRW5jb3VudGVy
MTIgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIxMiBD
b3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjEyIENvdHJp
bW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTUJRW5jb3VudGVyMTIgSU5IIERpc3Bl
bnNlZAlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIE5hbWUxCUVuY291bnRlcjEyIE90aGVy
IE1lZGljYXRpb24gRG9zYWdlMQlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5j
eTEJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMglFbmNvdW50ZXIxMiBPdGhlciBN
ZWRpY2F0aW9uIERvc2FnZTIJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3ky
CUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24gTmFtZTMJRW5jb3VudGVyMTIgT3RoZXIgTWVk
aWNhdGlvbiBEb3NhZ2UzCUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlF
bmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU0CUVuY291bnRlcjEyIE90aGVyIE1lZGlj
YXRpb24gRG9zYWdlNAlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5j
b3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNQlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0
aW9uIERvc2FnZTUJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291
bnRlcjEyIE90aGVyIE1lZGljYXRpb24gTmFtZTYJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlv
biBEb3NhZ2U2CUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50
ZXIxMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU3CUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24g
RG9zYWdlNwlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVy
MTIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lOAlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIERv
c2FnZTgJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjEy
IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIxMiBQcmlvciBBUlYg
TWVkaWNhdGlvbi9SZWdpbWVuIEFkaGVyZW5jZQlFbmNvdW50ZXIxMiBQcmlvciBBUlYgTWVkaWNh
dGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjEyIFByaW9y
IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTIJRW5jb3Vu
dGVyMTIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJl
bmNlMwlFbmNvdW50ZXIxMiBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjEyIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4g
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTUJRW5jb3VudGVyMTIgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBOYW1lCUVuY291bnRlcjEyIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291
bnRlcjEyIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTnVtYmVyIG9mIERheXMJRW5jb3VudGVyMTIg
Q0Q0IExhYiBSZXN1bHQgQ291bnQJRW5jb3VudGVyMTIgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFn
ZQlFbmNvdW50ZXIxMiBIZW1vZ2xvYmluIChIZ2IpIExhYiBSZXN1bHQJRW5jb3VudGVyMTIgUmFw
aWQgUGxhc21hIFJlYWdpbiAoUlBSKSBMYWIgUmVzdWx0CUVuY291bnRlcjEyIFR1YmVyY3Vsc2lz
IFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjEyIE90aGVyIExhYjEgTmFtZQlFbmNvdW50ZXIx
MiBPdGhlciBMYWIxIFJlc3VsdAlFbmNvdW50ZXIxMiBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVy
MTIgT3RoZXIgTGFiMiBSZXN1bHQJRW5jb3VudGVyMTIgUGF0aWVudCBSZWZlcnJlZCBUbwlFbmNv
dW50ZXIxMiBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIxMiBEaXNjbG9zdXJlIENv
ZGUJRW5jb3VudGVyMTIgUGFydG5lciBUZXN0ZWQgQ29kZQlFbmNvdW50ZXIxMiBDb25kb21zIERp
c3BlbnNlZAlFbmNvdW50ZXIxMiBTZXh1YWxseSBUcmFuc21pdHRlZCBJbmZlY3Rpb24gU2NyZWVu
aW5nCUVuY291bnRlcjEyIE5leHQgQXBwb2ludG1lbnQgRGF0ZQlFbmNvdW50ZXIxMiBDbGluaWNp
YW4gSW5pdGlhbHMK</inboundTemplate>
        <outboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPENsaW5pY2FsRG9jdW1lbnQg
eG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJo
dHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM9InVybjpobDct
b3JnOnYzIj4KICA8cmVhbG1Db2RlIGNvZGU9J1VTJy8+CiAgPHR5cGVJZCBleHRlbnNpb249IlBP
Q0RfSEQwMDAwNDAiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEuMyIvPgogIDx0ZW1wbGF0ZUlk
IHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuMjcuMTc3NiIgYXNzaWduaW5nQXV0aG9yaXR5TmFt
ZT0iQ0RBL1IyIi8+CiAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAu
MyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSEw3L0NEVCBIZWFkZXIiLz4KICA8dGVtcGxhdGVJ
ZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjEiIGFzc2lnbmluZ0F1dGhvcml0
eU5hbWU9IkhJVFNQL0MzMiIvPgogIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2
LjEuNS4zLjEuMS4xIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUvUENDIi8+CiAgPHRlbXBs
YXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTUwLjI0NzQuMTEuMi4xIi8+CiAgPGlkIHJvb3Q9IjEu
My42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xIiBleHRlbnNpb249Ik9FQ0tlbnlhQzEiLz4KICA8
Y29kZSBjb2RlPSIxIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3NC4xMS4zLjEuMSIg
ZGlzcGxheU5hbWU9Ik9FQyBLZW55YSBDMSIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBDREEg
VHlwZXMiLz4KICA8dGl0bGU+T0VDIEtlbnlhIEMxPC90aXRsZT4KICA8ZWZmZWN0aXZlVGltZSB2
YWx1ZT0iIi8+CiAgPGNvbmZpZGVudGlhbGl0eUNvZGUgY29kZT0iTiIvPgogIDxsYW5ndWFnZUNv
ZGUgY29kZT0iZW4tVVMiIC8+CiAgPHJlY29yZFRhcmdldD4KICAgIDxwYXRpZW50Um9sZT4KICAg
ICAgPGlkIHJvb3Q9IjEuMy42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xLjEiIGV4dGVuc2lvbj0i
Ii8+CiAgICAgIDxhZGRyPgogICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT48L3N0cmVldEFkZHJl
c3NMaW5lPgogICAgICAgIDxjaXR5PjwvY2l0eT4KICAgICAgICA8Y291bnR5PjwvY291bnR5Pgog
ICAgICAgIDxzdGF0ZT48L3N0YXRlPgogICAgICA8L2FkZHI+CiAgICAgIDx0ZWxlY29tIHZhbHVl
PSJ0ZWw6Ii8+CiAgICAgIDxwYXRpZW50PgogICAgICAgIDxuYW1lPgogICAgICAgICAgPGZhbWls
eT48L2ZhbWlseT4KICAgICAgICAgIDxnaXZlbj48L2dpdmVuPgogICAgICAgIDwvbmFtZT4KICAg
ICAgICA8YWRtaW5pc3RyYXRpdmVHZW5kZXJDb2RlIGNvZGU9IiIgY29kZVN5c3RlbT0iMi4xNi44
NDAuMS4xMTM4ODMuNS4xIi8+CiAgICAgICAgPGJpcnRoVGltZSB2YWx1ZT0iIi8+CiAgICAgICAg
PG1hcml0YWxTdGF0dXNDb2RlIGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbT0iMS4z
LjYuMS40LjEuMTUwLjI0NzQuMTEuMy4xLjIiIGNvZGVTeXN0ZW1OYW1lPSJPRUMgS2VueWEgTWFy
aXRhbCBTdGF0dXMiLz4KICAgICAgPC9wYXRpZW50PgogICAgICA8cHJvdmlkZXJPcmdhbml6YXRp
b24+CiAgICAgICAgPG5hbWU+PC9uYW1lPgogICAgICAgIDxhZGRyPgogICAgICAgICAgPGNvdW50
eT48L2NvdW50eT4KICAgICAgICAgIDxzdGF0ZT48L3N0YXRlPgogICAgICAgIDwvYWRkcj4KICAg
ICAgICA8dGVsZWNvbSBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgPC9wcm92aWRlck9yZ2FuaXph
dGlvbj4KICAgIDwvcGF0aWVudFJvbGU+ICAKICA8L3JlY29yZFRhcmdldD4KICA8YXV0aG9yPgog
ICAgPHRpbWUgdmFsdWU9IiIvPgogICAgPGFzc2lnbmVkQXV0aG9yPgogICAgICA8aWQgZXh0ZW5z
aW9uPSIiIHJvb3Q9IjEuMy42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xLjIiLz4KICAgICAgPGFk
ZHI+PC9hZGRyPgogICAgICA8dGVsZWNvbSBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgPGFzc2ln
bmVkUGVyc29uPgogICAgICAgIDxuYW1lPkF1dG8tZ2VuZXJhdGVkPC9uYW1lPgogICAgICA8L2Fz
c2lnbmVkUGVyc29uPgogICAgICA8YXNzaWduZWRBdXRob3JpbmdEZXZpY2U+CiAgICAgICAgPHNv
ZnR3YXJlTmFtZT48L3NvZnR3YXJlTmFtZT4KICAgICAgPC9hc3NpZ25lZEF1dGhvcmluZ0Rldmlj
ZT4KICAgICAgPHJlcHJlc2VudGVkT3JnYW5pemF0aW9uPgogICAgICAgIDxpZCBleHRlbnNpb249
IiIgcm9vdD0iMS4zLjYuMS40LjEuMTUwLjI0NzQuMTEuMi4xLjEuMyIvPgogICAgICAgIDxuYW1l
PjwvbmFtZT4KICAgICAgICA8YWRkcj48L2FkZHI+CiAgICAgICAgPHRlbGVjb20gbnVsbEZsYXZv
cj0iVU5LIi8+CiAgICAgIDwvcmVwcmVzZW50ZWRPcmdhbml6YXRpb24+CiAgICA8L2Fzc2lnbmVk
QXV0aG9yPgogIDwvYXV0aG9yPgogIDxjdXN0b2RpYW4+CiAgICA8YXNzaWduZWRDdXN0b2RpYW4+
CiAgICAgIDxyZXByZXNlbnRlZEN1c3RvZGlhbk9yZ2FuaXphdGlvbj4KICAgICAgICA8aWQgZXh0
ZW5zaW9uPSIiIHJvb3Q9IjEuMy42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xLjMiLz4KICAgICAg
ICA8bmFtZT48L25hbWU+CiAgICAgICAgPGFkZHI+PC9hZGRyPgogICAgICAgIDx0ZWxlY29tIG51
bGxGbGF2b3I9IlVOSyIvPgogICAgICA8L3JlcHJlc2VudGVkQ3VzdG9kaWFuT3JnYW5pemF0aW9u
PgogICAgPC9hc3NpZ25lZEN1c3RvZGlhbj4KICA8L2N1c3RvZGlhbj4KICA8cGFydGljaXBhbnQg
dHlwZUNvZGU9IklORCI+CiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4z
Ljg4LjExLjgzLjMiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQL0M4MyIvPgogICAgPHRl
bXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4yLjQiIGFzc2lnbmluZ0F1
dGhvcml0eU5hbWU9IklIRS9QQ0MiLz4KICAgIDx0aW1lPgogICAgICA8bG93IG51bGxGbGF2b3I9
IlVOSyIvPgogICAgPC90aW1lPgogICAgPGFzc29jaWF0ZWRFbnRpdHkgY2xhc3NDb2RlPSJQUlMi
PgogICAgICA8Y29kZSBjb2RlPSIiIGRpc3BsYXlOYW1lPSIiIGNvZGVTeXN0ZW09IjEuMy42LjEu
NC4xLjE1MC4yNDc0LjExLjMuMS4zIiBjb2RlU3lzdGVtTmFtZT0iT0VDIEtlbnlhIFJlbGF0aW9u
c2hpcCBSb2xlIi8+CiAgICAgIDxhZGRyPgogICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT48L3N0
cmVldEFkZHJlc3NMaW5lPgogICAgICA8L2FkZHI+CiAgICAgIDx0ZWxlY29tIHZhbHVlPSJ0ZWw6
Ii8+CiAgICAgIDxhc3NvY2lhdGVkUGVyc29uPgogICAgICAgIDxuYW1lPgogICAgICAgICAgPGZh
bWlseT48L2ZhbWlseT4KICAgICAgICAgIDxnaXZlbj48L2dpdmVuPgogICAgICAgIDwvbmFtZT4K
ICAgICAgPC9hc3NvY2lhdGVkUGVyc29uPgogICAgPC9hc3NvY2lhdGVkRW50aXR5PgogIDwvcGFy
dGljaXBhbnQ+CiAgPGNvbXBvbmVudD4KICAgIDxzdHJ1Y3R1cmVkQm9keT4KICAgICAgPCEtLUVu
Y291bnRlcnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAg
IDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTI3IiBhc3Np
Z25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMS41LjMuMyIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4x
MTM4ODMuMTAuMjAuMS4zIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAg
ICAgICA8IS0tRW5jb3VudGVycyBzZWN0aW9uIHRlbXBsYXRlLS0+CiAgICAgICAgICA8Y29kZSBj
b2RlPSI0NjI0MC04IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0
ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9Ikhpc3Rvcnkgb2YgZW5jb3VudGVycyIvPgogICAg
ICAgICAgPHRpdGxlPkVuY291bnRlcnM8L3RpdGxlPgogICAgICAgICAgPHRleHQ+CiAgICAgICAg
ICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIxMDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+
CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aD5FbmNvdW50ZXIgVHlw
ZTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5DbGluaWNpYW4gSW5pdGlhbHM8L3RoPgogICAg
ICAgICAgICAgICAgICA8dGg+TG9jYXRpb248L3RoPgogICAgICAgICAgICAgICAgICA8dGg+RGF0
ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8
L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAg
ICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAg
ICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAg
ICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+
CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICA8ZW50cnkgdHlwZUNvZGU9IkRSSVYiPgogICAg
ICAgICAgICA8ZW5jb3VudGVyIGNsYXNzQ29kZT0iRU5DIiBtb29kQ29kZT0iRVZOIj4KICAgICAg
ICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE2
IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICA8dGVt
cGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjIxIiBhc3NpZ25pbmdBdXRo
b3JpdHlOYW1lPSJDQ0QiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4x
LjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTQiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0Mi
Lz4KICAgICAgICAgICAgICA8IS0tIEVuY291bnRlciBhY3Rpdml0eSB0ZW1wbGF0ZSAtLT4KICAg
ICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgogICAgICAgICAgICAgIDxjb2Rl
IGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbT0iMS4zLjYuMS40LjEuMTUwLjI0NzQu
MTEuMy4xLjQiIGNvZGVTeXN0ZW1OYW1lPSJPRUMgS2VueWEgRW5jb3VudGVyIFR5cGVzIj4KICAg
ICAgICAgICAgICAgIDxvcmlnaW5hbFRleHQ+CiAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2Ug
dmFsdWU9IiIvPgogICAgICAgICAgICAgICAgPC9vcmlnaW5hbFRleHQ+CiAgICAgICAgICAgICAg
PC9jb2RlPgogICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2
YWx1ZT0iIi8+CiAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgIDxlZmZlY3RpdmVU
aW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICA8cGVyZm9ybWVyPgogICAgICAgICAgICAgICAg
PGFzc2lnbmVkRW50aXR5PgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9
IiIvPgogICAgICAgICAgICAgICAgICA8YWRkcj48L2FkZHI+CiAgICAgICAgICAgICAgICAgIDx0
ZWxlY29tIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICA8YXNzaWduZWRQZXJz
b24+CiAgICAgICAgICAgICAgICAgICAgPG5hbWU+PC9uYW1lPgogICAgICAgICAgICAgICAgICA8
L2Fzc2lnbmVkUGVyc29uPgogICAgICAgICAgICAgICAgPC9hc3NpZ25lZEVudGl0eT4KICAgICAg
ICAgICAgICA8L3BlcmZvcm1lcj4KICAgICAgICAgICAgICA8cGFydGljaXBhbnQgdHlwZUNvZGU9
IkxPQyI+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4
My4xMC4yMC4xLjQ1Ii8+CiAgICAgICAgICAgICAgICA8IS0tIExvY2F0aW9uIHBhcnRpY2lwYXRp
b24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgICA8cGFydGljaXBhbnRSb2xlIGNsYXNzQ29k
ZT0iU0RMT0MiPgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgog
ICAgICAgICAgICAgICAgICA8cGxheWluZ0VudGl0eSBjbGFzc0NvZGU9IlBMQyI+CiAgICAgICAg
ICAgICAgICAgICAgPG5hbWU+PC9uYW1lPgogICAgICAgICAgICAgICAgICA8L3BsYXlpbmdFbnRp
dHk+CiAgICAgICAgICAgICAgICA8L3BhcnRpY2lwYW50Um9sZT4KICAgICAgICAgICAgICA8L3Bh
cnRpY2lwYW50PgogICAgICAgICAgICA8L2VuY291bnRlcj4KICAgICAgICAgIDwvZW50cnk+CiAg
ICAgICAgPC9zZWN0aW9uPgogICAgICA8L2NvbXBvbmVudD4KICAgICAgPCEtLUFsbGVyZ2llcy9S
ZWFjdGlvbnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAg
IDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTAyIiBhc3Np
Z25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFt
ZT0iSUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4
ODMuMTAuMjAuMS4yIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAgICAg
ICA8IS0tQWxsZXJnaWVzL1JlYWN0aW9ucyBzZWN0aW9uIHRlbXBsYXRlLS0+CiAgICAgICAgICA8
Y29kZSBjb2RlPSI0ODc2NS0yIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNv
ZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkFsbGVyZ2llcywgYWR2ZXJzZSByZWFj
dGlvbnMsIGFsZXJ0cyIvPgogICAgICAgICAgPHRpdGxlPkFsbGVyZ2llcywgIEFkdmVyc2UgUmVh
Y3Rpb25zICZhbXA7IEFsZXJ0czwvdGl0bGU+CiAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAg
PHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPgogICAgICAgICAgICAgIDx0aGVhZD4KICAg
ICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRoPlR5cGU8L3RoPgogICAgICAg
ICAgICAgICAgICA8dGg+U3Vic3RhbmNlPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkRhdGUg
W01NL0REL1lZWVldPC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90
aGVhZD4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAg
ICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwv
dGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICA8
ZW50cnkgdHlwZUNvZGU9IkRSSVYiPgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBt
b29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4x
LjExMzg4My4zLjg4LjExLjgzLjYiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQIEM4MyIv
PgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIw
LjEuMjciIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgIDx0ZW1w
bGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC41LjEiIGFzc2lnbmluZ0F1
dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIx
LjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuNS4zIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJ
SEUgUENDIi8+CiAgICAgICAgICAgICAgPCEtLUFsbGVyZ3kgYWN0IHRlbXBsYXRlIC0tPgogICAg
ICAgICAgICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgPGNvZGUg
bnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUi
Lz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFs
dWU9IiIvPgogICAgICAgICAgICAgIDwvZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICA8ZW50
cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAg
ICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4K
ICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAu
MjAuMS4xOCIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4x
LjExMzg4My4xMC4yMC4xLjI4IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAg
ICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40
LjUiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAg
PHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjYiIGFzc2lnbmlu
Z0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgPGlkIGV4dGVuc2lv
bj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iIiBjb2RlU3lzdGVt
PSIiIGRpc3BsYXlOYW1lPSIiIGNvZGVTeXN0ZW1OYW1lPSIiLz4KICAgICAgICAgICAgICAgICAg
PHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAgICAgICAg
ICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29t
cGxldGVkIi8+CiAgICAgICAgICAgICAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAg
ICAgICAgIDxsb3cgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+
CiAgICAgICAgICAgICAgICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGRpc3BsYXlOYW1lPSIiIGNv
ZGU9IiIgY29kZVN5c3RlbU5hbWU9IiIgY29kZVN5c3RlbT0iIi8+CiAgICAgICAgICAgICAgICAg
IDxwYXJ0aWNpcGFudCB0eXBlQ29kZT0iQ1NNIj4KICAgICAgICAgICAgICAgICAgICA8cGFydGlj
aXBhbnRSb2xlIGNsYXNzQ29kZT0iTUFOVSI+CiAgICAgICAgICAgICAgICAgICAgICA8cGxheWlu
Z0VudGl0eSBjbGFzc0NvZGU9Ik1NQVQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Y29kZSBj
b2RlPSIiIGNvZGVTeXN0ZW09IiIgY29kZVN5c3RlbU5hbWU9IiIgZGlzcGxheU5hbWU9IiI+CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgPG9yaWdpbmFsVGV4dD4KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICAgICAgICAg
IDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2NvZGU+CiAgICAgICAg
ICAgICAgICAgICAgICAgIDxuYW1lPjwvbmFtZT4KICAgICAgICAgICAgICAgICAgICAgIDwvcGxh
eWluZ0VudGl0eT4KICAgICAgICAgICAgICAgICAgICA8L3BhcnRpY2lwYW50Um9sZT4KICAgICAg
ICAgICAgICAgICAgPC9wYXJ0aWNpcGFudD4KICAgICAgICAgICAgICAgICAgPGVudHJ5UmVsYXRp
b25zaGlwIHR5cGVDb2RlPSJSRUZSIj4KICAgICAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24g
Y2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICAgICAgPHRl
bXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zOSIvPgogICAgICAgICAg
ICAgICAgICAgICAgPCEtLSBBbGVydCBzdGF0dXMgb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAg
ICAgICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIzMzk5OS00IiBjb2RlU3lzdGVtPSIyLjE2
Ljg0MC4xLjExMzg4My42LjEiIGRpc3BsYXlOYW1lPSJTdGF0dXMiLz4KICAgICAgICAgICAgICAg
ICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICAg
ICAgPHZhbHVlIHhzaTp0eXBlPSJDRSIgY29kZT0iNTU1NjEwMDMiIGNvZGVTeXN0ZW1OYW1lPSJT
Tk9NRUQtQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1l
PSJBY3RpdmUiLz4KICAgICAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAg
ICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlv
bj4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICAgIDxlbnRy
eVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iUkVGUiIgaW52ZXJzaW9uSW5kPSJmYWxzZSI+CiAgICAg
ICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjQu
MSIvPgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgogICAgICAg
ICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGRpc3BsYXlOYW1lPSIiIGNvZGVTeXN0ZW09IjEuMy42
LjEuNC4xLjE1MC4yNDc0LjExLjMuMS40IiBjb2RlU3lzdGVtTmFtZT0iT0VDIEtlbnlhIEVuY291
bnRlciBUeXBlcyIvPgogICAgICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICAgICAgPC9lbnRy
eVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAg
ICAgIDwvc2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICAgIDwhLS1Qcm9ibGVtcy0tPgog
ICAgICA8Y29tcG9uZW50PgogICAgICAgIDxzZWN0aW9uPgogICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS44My4xMDMiIGFzc2lnbmluZ0F1dGhvcml0
eU5hbWU9IkhJVFNQL0M4MyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40
LjEuMTkzNzYuMS41LjMuMS4zLjYiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4K
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMTEi
IGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhMNyBDQ0QiLz4KICAgICAgICAgIDwhLS1Qcm9ibGVt
cyBzZWN0aW9uIHRlbXBsYXRlLS0+CiAgICAgICAgICA8Y29kZSBjb2RlPSIxMTQ1MC00IiBjb2Rl
U3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlz
cGxheU5hbWU9IlByb2JsZW0gbGlzdCIvPgogICAgICAgICAgPHRpdGxlPlByb2JsZW1zPC90aXRs
ZT4KICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0i
MTAwJSI+CiAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAg
ICAgICAgICAgICA8dGg+UHJvYmxlbTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5FZmZlY3Rp
dmUgRGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAgICAgICAgICA8dGg+UHJvYmxlbSBT
dGF0dXM8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3RoZWFkPgog
ICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAg
ICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAg
ICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90Ym9keT4K
ICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgIDxlbnRyeSB0
eXBlQ29kZT0iRFJJViI+CiAgICAgICAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2Rl
PSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgz
LjMuODguMTEuODMuNyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNyIg
YXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjUuMSIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEu
NC4xLjE5Mzc2LjEuNS4zLjEuNC41LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0Mi
Lz4KICAgICAgICAgICAgICA8IS0tIFByb2JsZW0gYWN0IHRlbXBsYXRlIC0tPgogICAgICAgICAg
ICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZs
YXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAJ
IDxsb3cgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICA8aGlnaCB2YWx1ZT0iIi8+
CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxzdGF0dXNDb2Rl
IGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBl
Q29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMi
IG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2
Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI4IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4K
ICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41
LjMuMS40LjUiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAg
ICAgICAgPCEtLVByb2JsZW0gb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAg
ICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNv
ZGU9IjY0NTcyMDAxIiBkaXNwbGF5TmFtZT0iQ29uZGl0aW9uIiBjb2RlU3lzdGVtPSIyLjE2Ljg0
MC4xLjExMzg4My42Ljk2IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIi8+CiAgICAgICAgICAg
ICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgog
ICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNv
ZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAg
ICAgICAgICAgICAgICA8bG93IHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPC9lZmZlY3Rp
dmVUaW1lPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBkaXNwbGF5TmFt
ZT0iIiBjb2RlPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGNvZGVTeXN0ZW09IiIvPgogICAgICAgICAg
ICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlJFRlIiPgogICAgICAgICAgICAg
ICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAg
ICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4y
MC4xLjUwIi8+CiAgICAgICAgICAgICAgICAgICAgICA8IS0tIFByb2JsZW0gc3RhdHVzIG9ic2Vy
dmF0aW9uIHRlbXBsYXRlIC0tPgogICAgICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzM5
OTktNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBkaXNwbGF5TmFtZT0iU3Rh
dHVzIi8+CiAgICAgICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQi
Lz4KICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IiIgY29k
ZVN5c3RlbU5hbWU9IiIgY29kZVN5c3RlbT0iIiBkaXNwbGF5TmFtZT0iIi8+CiAgICAgICAgICAg
ICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9u
c2hpcD4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRy
eVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9
IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPGFjdCBjbGFzc0Nv
ZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAgICAgICAgICAgICAg
PGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0i
IiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3NC4xMS4zLjEu
NCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMiLz4KICAgICAgICAg
ICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAg
ICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgIDwv
Y29tcG9uZW50PgogICAgICA8IS0tTWVkaWNhdGlvbnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAg
ICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEz
ODgzLjMuODguMTEuODMuMTEyIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4K
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4x
OSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRl
SWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS44IiBhc3NpZ25pbmdBdXRob3JpdHlO
YW1lPSJITDcgQ0NEIi8+CiAgICAgICAgICA8IS0tTWVkaWNhdGlvbnMgc2VjdGlvbiB0ZW1wbGF0
ZS0tPgogICAgICAgICAgPGNvZGUgY29kZT0iMTAxNjAtMCIgY29kZVN5c3RlbT0iMi4xNi44NDAu
MS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJIaXN0b3J5
IG9mIG1lZGljYXRpb24gdXNlIi8+CiAgICAgICAgICA8dGl0bGU+TWVkaWNhdGlvbnM8L3RpdGxl
PgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIx
MDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0aD5NZWRpY2F0aW9uPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkVmZmVj
dGl2ZSBEYXRlIFtNTS9ERC9ZWVlZXTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5Eb3NlPC90
aD4KICAgICAgICAgICAgICAgICAgPHRoPkRheXM8L3RoPgogICAgICAgICAgICAgICAgICA8dGg+
QWRoZXJlbmNlIFN0YXR1cyAmYW1wOyBSZWFzb24ocyk8L3RoPgogICAgICAgICAgICAgICAgPC90
cj4KICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAg
ICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAg
IDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAg
PHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPC90
cj4KICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAg
PC90ZXh0PgogICAgICAgICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4KICAgICAgICAgICAgPHN1
YnN0YW5jZUFkbWluaXN0cmF0aW9uIGNsYXNzQ29kZT0iU0JBRE0iIG1vb2RDb2RlPSJFVk4iPgog
ICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEu
ODMuOCIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAgICAg
PHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNCIgYXNzaWduaW5n
QXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4z
LjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjciIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQ
Q0MiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4x
LjUuMy4xLjQuNy4xIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAg
ICAgICAgPCEtLU1lZGljYXRpb24gYWN0aXZpdHkgdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAg
PGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2Rl
PSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iSVZM
X1RTIj4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgPGhp
Z2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAg
ICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAg
ICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgIDxjb25zdW1hYmxlIHR5cGVDb2RlPSJD
U00iPgogICAgICAgICAgICAgICAgPG1hbnVmYWN0dXJlZFByb2R1Y3Q+CiAgICAgICAgICAgICAg
ICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuOC4yIiBh
c3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRl
bXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS41MyIgYXNzaWduaW5nQXV0
aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEu
My42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC43LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklI
RSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgPCEtLSBQcm9kdWN0IHRlbXBsYXRlIC0tPgogICAg
ICAgICAgICAgICAgICA8bWFudWZhY3R1cmVkTWF0ZXJpYWwgY2xhc3NDb2RlPSJNTUFUIj4KICAg
ICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGNvZGVTeXN0ZW09IiIgZGlzcGxheU5hbWU9
IiIgY29kZVN5c3RlbU5hbWU9IiI+CiAgICAgICAgICAgICAgICAgICAgICA8b3JpZ2luYWxUZXh0
PgogICAgICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIiLz4KICAgICAgICAg
ICAgICAgICAgICAgIDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAgIDwvY29kZT4K
ICAgICAgICAgICAgICAgICAgPC9tYW51ZmFjdHVyZWRNYXRlcmlhbD4KICAgICAgICAgICAgICAg
IDwvbWFudWZhY3R1cmVkUHJvZHVjdD4KICAgICAgICAgICAgICA8L2NvbnN1bWFibGU+CiAgICAg
ICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJSRUZSIj4KICAgICAgICAgICAg
ICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAg
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNDci
Lz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzM5OTktNCIgZGlzcGxheU5hbWU9IlN0
YXR1cyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0i
TE9JTkMiLz4KICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0eXBlPSJDRSIgY29kZT0iNTU1
NjEwMDMiIGRpc3BsYXlOYW1lPSJBY3RpdmUiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgz
LjYuOTYiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiLz4KICAgICAgICAgICAgICAgIDwvb2Jz
ZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAg
ICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0idHJ1ZSI+
CiAgICAgICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAg
ICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4x
MS44My4xMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAg
ICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNDAiIGFz
c2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJ
ZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMiIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0ODc2Ny04IiBk
aXNwbGF5TmFtZT0iQ29tbWVudCIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBjb2RlU3lzdGVtPSIy
LjE2Ljg0MC4xLjExMzg4My42LjEiPgogICAgICAgICAgICAgICAgICAgIDxvcmlnaW5hbFRleHQ+
CiAgICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIiLz4KICAgICAgICAgICAg
ICAgICAgICA8L29yaWdpbmFsVGV4dD4KICAgICAgICAgICAgICAgICAgPC9jb2RlPgogICAgICAg
ICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIi
Lz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29k
ZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAg
IDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5
cGVDb2RlPSJSRUZSIiBpbnZlcnNpb25JbmQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxhY3Qg
Y2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxh
dGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuNC4xIi8+CiAgICAgICAgICAg
ICAgICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgICAgIDxjb2Rl
IGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbT0iMS4zLjYuMS40LjEuMTUwLjI0NzQu
MTEuMy4xLjQiIGNvZGVTeXN0ZW1OYW1lPSJPRUMgS2VueWEgRW5jb3VudGVyIFR5cGVzIi8+CiAg
ICAgICAgICAgICAgICA8L2FjdD4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgog
ICAgICAgICAgICA8L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uPgogICAgICAgICAgPC9lbnRyeT4K
ICAgICAgICA8L3NlY3Rpb24+CiAgICAgIDwvY29tcG9uZW50PgogICAgICA8IS0tVml0YWwgU2ln
bnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0ZW1w
bGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMTYiIGFzc2lnbmluZ0F1dGhv
cml0eU5hbWU9IkhMNyBDQ0QiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQw
LjEuMTEzODgzLjMuODguMTEuODMuMTE5IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9D
ODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4z
LjEuMS41LjMuMiIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAg
PHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4zLjI1IiBhc3NpZ25p
bmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICA8IS0tVml0YWwgU2lnbnMgc2Vj
dGlvbiB0ZW1wbGF0ZS0tPgogICAgICAgICAgPGNvZGUgY29kZT0iODcxNi0zIiBjb2RlU3lzdGVt
PSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5h
bWU9IlZpdGFsIHNpZ25zIi8+CiAgICAgICAgICA8dGl0bGU+Vml0YWwgU2lnbnM8L3RpdGxlPgog
ICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIxMDAl
Ij4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAg
ICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+RGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAg
ICAgICAgICA8dGg+PC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90
aGVhZD4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQg
SUQ9IlZpdGFsSHQiPkhlaWdodCAoY20pPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3Ro
PgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAg
ICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAg
ICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9IlZpdGFsV3QiPldlaWdodCAoa2cpPC9jb250ZW50
PgogICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAg
ICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAg
IDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9IlZpdGFs
Qm1pIj5CTUk8L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAg
ICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3Rib2R5
PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5
IHR5cGVDb2RlPSJEUklWIj4KICAgICAgICAgICAgPG9yZ2FuaXplciBjbGFzc0NvZGU9IkNMVVNU
RVIiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYu
ODQwLjEuMTEzODgzLjEwLjIwLjEuMzIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgog
ICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEu
MzUiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0
ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMy4xIiBhc3NpZ25pbmdBdXRo
b3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgPCEtLSBWaXRhbCBzaWducyBvcmdh
bml6ZXIgdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIi
Lz4KICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0NjY4MDAwNSIgY29kZVN5c3RlbT0iMi4xNi44
NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IlZpdGFsIHNpZ25zIiBjb2RlU3lzdGVtTmFt
ZT0iU05PTUVELUNUIi8+CiAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVk
Ii8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIvPgogICAgICAgICAgICAg
IDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMi
IG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2
Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE0IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRT
UCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4x
MTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAg
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4x
MyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8
dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTMuMiIgYXNzaWdu
aW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgkJCQkJCQkJCQogICAgICAgICAgICAgICAgICA8
IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlk
IGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iODMw
Mi0yIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJM
T0lOQyIgZGlzcGxheU5hbWU9IkJvZHkgSGVpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICA8dHJh
bnNsYXRpb24gY29kZT0iNTAzNzMwMDAiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYu
OTYiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGRpc3BsYXlOYW1lPSJCb2R5IGhlaWdodCBt
ZWFzdXJlIi8+CiAgICAgICAgICAgICAgICAgIDwvY29kZT4KICAgICAgICAgICAgICAgICAgPHRl
eHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI1ZpdGFsSHQiLz4KICAg
ICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2Rl
PSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIv
PgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlBRIiB2YWx1ZT0iIiB1bml0PSJj
bSIvPgogICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAg
ICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICAg
IDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAg
ICAgICAgIDwvY29tcG9uZW50PgogICAgICAgICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAg
ICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAg
ICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgz
LjE0IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAg
ICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWdu
aW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFt
ZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4x
LjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTMuMiIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBD
QyIvPgkJCQkJCQkJCQogICAgICAgICAgICAgICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0
ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4K
ICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzE0MS05IiBjb2RlU3lzdGVtPSIyLjE2Ljg0
MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkJvZHkg
V2VpZ2h0IE1lYXN1cmVkIj4KICAgICAgICAgICAgICAgICAgICA8dHJhbnNsYXRpb24gY29kZT0i
MjcxMTMwMDEiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGNvZGVTeXN0ZW1O
YW1lPSJTTk9NRUQtQ1QiIGRpc3BsYXlOYW1lPSJCb2R5IHdlaWdodCIvPgogICAgICAgICAgICAg
ICAgICA8L2NvZGU+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAg
IDxyZWZlcmVuY2UgdmFsdWU9IiNWaXRhbFd0Ii8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4K
ICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAg
ICAgICAgICAgIDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPHZh
bHVlIHhzaTp0eXBlPSJQUSIgdmFsdWU9IiIgdW5pdD0ia2ciLz4KICAgICAgICAgICAgICAgICAg
PHJlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvblJhbmdlIG51
bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICA8L3JlZmVyZW5jZVJhbmdlPgogICAg
ICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICA8L2NvbXBvbmVudD4KICAg
ICAgICAgICAgICA8Y29tcG9uZW50PgogICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNz
Q29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS44My4xNCIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIu
MTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMzEiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIv
PgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4x
LjUuMy4xLjQuMTMiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjEz
LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAg
PCEtLSBSZXN1bHQgb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgICAgIDxp
ZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjM5
MTU2LTUiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9
IkxPSU5DIiBkaXNwbGF5TmFtZT0iQm9keSBtYXNzIGluZGV4IChCTUkpIj4KICAgICAgICAgICAg
ICAgICAgICA8dHJhbnNsYXRpb24gY29kZT0iNjA2MjEwMDkiIGNvZGVTeXN0ZW09IjIuMTYuODQw
LjEuMTEzODgzLjYuOTYiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGRpc3BsYXlOYW1lPSJC
b2R5IG1hc3MgaW5kZXgiLz4KICAgICAgICAgICAgICAgICAgPC9jb2RlPgogICAgICAgICAgICAg
ICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjVml0YWxC
bWkiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVz
Q29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUg
dmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlJFQUwiIHZhbHVl
PSIiLz4KICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAg
ICAgIDxvYnNlcnZhdGlvblJhbmdlIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAg
ICA8L3JlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAg
ICAgICAgICA8L2NvbXBvbmVudD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlw
ZUNvZGU9IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPGFjdCBj
bGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0
ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAgICAgICAg
ICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUg
Y29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3NC4x
MS4zLjEuNCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMiLz4KICAg
ICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAg
ICAgICAgICAgIDwvb3JnYW5pemVyPgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICA8L3NlY3Rp
b24+CiAgICAgIDwvY29tcG9uZW50PgogICAgICA8IS0tRGlhZ25vc3RpYyBSZXN1bHRzLS0+CiAg
ICAgIDxjb21wb25lbnQ+CiAgICAgICAgPHNlY3Rpb24+CiAgICAgICAgICA8dGVtcGxhdGVJZCBy
b290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjEyMiIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSElUU1AvQzgzIi8+CiAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQu
MS4xOTM3Ni4xLjUuMy4xLjMuMjgiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4K
ICAgICAgICAgIDwhLS1EaWFnbm9zdGljIFJlc3VsdHMgc2VjdGlvbiB0ZW1wbGF0ZS0tPgogICAg
ICAgICAgPGNvZGUgY29kZT0iMzA5NTQtMiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMu
Ni4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJSZWxldmFudCBkaWFnbm9z
dGljIHRlc3RzL2xhYm9yYXRvcnkgZGF0YSIvPgogICAgICAgICAgPHRpdGxlPlJlc3VsdHM8L3Rp
dGxlPgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRo
PSIxMDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAg
ICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+RGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAg
ICAgICAgICAgICAgICA8dGg+PC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAg
ICAgPC90aGVhZD4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAg
ICAgICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNv
bnRlbnQgSUQ9IkxhYkNkNCI+Q0Q0IChjZWxscy91bCBhbmQgJSk8L2NvbnRlbnQ+CiAgICAgICAg
ICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAg
ICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRoIGFsaWdu
PSJsZWZ0Ij4KICAgICAgICAgICAgICAgICAgICA8Y29udGVudCBJRD0iTGFiSGdiIj5IZ2IgKGcv
ZGwpPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8
dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAg
ICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRl
bnQgSUQ9IkxhYlJwciI+UlBSPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RoPgogICAg
ICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAg
ICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGggYWxpZ249ImxlZnQiPgogICAgICAgICAg
ICAgICAgICAgIDxjb250ZW50IElEPSJMYWJUYiI+VEIgU3B1dHVtPC9jb250ZW50PgogICAgICAg
ICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAg
ICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aCBhbGln
bj0ibGVmdCI+PC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICA8L3Rib2R5
PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5
IHR5cGVDb2RlPSJEUklWIj4KICAgICAgICAgICAgPG9yZ2FuaXplciBjbGFzc0NvZGU9IkNMVVNU
RVIiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYu
ODQwLjEuMTEzODgzLjEwLjIwLjEuMzIiLz4KICAgICAgICAgICAgICA8IS0tUmVzdWx0IG9yZ2Fu
aXplciB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIv
PgogICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjU2ODUwLTEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lO
QyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBkaXNwbGF5TmFtZT0iSW50ZXJw
cmV0YXRpb24gYW5kIHJldmlldyBvZiBsYWJvcmF0b3J5IHJlc3VsdHMiLz4KICAgICAgICAgICAg
ICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZl
VGltZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgPGNvbXBvbmVudD4KICAgICAgICAgICAgICAg
IDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAg
ICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTUi
IGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQIEM4MyIvPgogICAgICAgICAgICAgICAgICA8
dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjMxIiBhc3NpZ25pbmdB
dXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0i
MS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjEzIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJ
SEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDwhLS0gUmVzdWx0IG9ic2VydmF0aW9uIHRlbXBs
YXRlIC0tPgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgogICAg
ICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI4MTI3LTMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEu
MTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iQ0Q0IGNlbGxz
Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVu
Y2UgdmFsdWU9IiNMYWJDZDQiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAg
ICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAg
PGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5
cGU9IlBRIiB2YWx1ZT0iIiB1bml0PSJjZWxscy91bCIvPgogICAgICAgICAgICAgICAgICA8cmVm
ZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZs
YXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICAgIDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAg
ICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvY29tcG9uZW50PgogICAgICAg
ICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2Rl
PSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290
PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE1IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1l
PSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44
NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAg
ICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4z
LjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAg
ICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAg
ICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29k
ZT0iODEyOC0xIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1O
YW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkNENCBjZWxscy8xMDAiLz4KICAgICAgICAgICAgICAg
ICAgPHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI0xhYkNkNCIv
PgogICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2Rl
IGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZSB2YWx1
ZT0iIi8+CiAgICAgICAgICAgICAgICAgIDx2YWx1ZSB4c2k6dHlwZT0iSU5UIiB2YWx1ZT0iIi8+
CiAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2VSYW5nZT4KICAgICAgICAgICAgICAgICAgICA8
b2JzZXJ2YXRpb25SYW5nZSBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICAgICAgPC9y
ZWZlcmVuY2VSYW5nZT4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAg
ICAgPC9jb21wb25lbnQ+CiAgICAgICAgICAgICA8Y29tcG9uZW50PgogICAgICAgICAgICAgICAg
PG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAg
ICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS44My4xNSIg
YXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMzEiIGFzc2lnbmluZ0F1
dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIx
LjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTMiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklI
RSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgPCEtLSBSZXN1bHQgb2JzZXJ2YXRpb24gdGVtcGxh
dGUgLS0+CiAgICAgICAgICAgICAgICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAg
ICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjMwMzEzLTEiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEu
MTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iSGVtb2dsb2Jp
biIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJl
bmNlIHZhbHVlPSIjTGFiSGdiIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAg
ICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICAg
IDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0
eXBlPSJQUSIgdmFsdWU9IiIgdW5pdD0iZy9kbCIvPgogICAgICAgICAgICAgICAgICA8cmVmZXJl
bmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZsYXZv
cj0iVU5LIi8+CiAgICAgICAgICAgICAgICAgIDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAg
ICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvY29tcG9uZW50PgogICAgICAgICAg
ICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJP
QlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIy
LjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE1IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJI
SVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAu
MS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAg
ICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEu
NC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAg
ICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAg
PGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0i
MjA1MDctMCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFt
ZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJSZWFnaW4gQWIgaW4gc2VydW0gYnkgUlBSIi8+CiAgICAg
ICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9
IiNMYWJScHIiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8
c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2
ZVRpbWUgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlNUIj48
L3ZhbHVlPgogICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAg
ICAgICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAg
ICAgIDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAg
ICAgICAgICAgIDwvY29tcG9uZW50PgogICAgICAgICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAg
ICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAg
ICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjEx
LjgzLjE1IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAg
ICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNz
aWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlk
IHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlv
biB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIi
Lz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMTE0NzctNyIgY29kZVN5c3RlbT0iMi4x
Ni44NDAuMS4xMTM4ODMuNi4xIiBkaXNwbGF5TmFtZT0iTWljcm9zY29waWMgb2JzZXJ2YXRpb24g
aW4gc3B1dHVtIGJ5IGFjaWQgZmFzdCBzdGFpbiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4K
ICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjTGFiVGIiLz4KICAgICAgICAg
ICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21w
bGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIvPgogICAg
ICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlNUIj48L3ZhbHVlPgogICAgICAgICAgICAg
ICAgICA8cmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uUmFu
Z2UgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICAgIDwvcmVmZXJlbmNlUmFuZ2U+
CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvY29tcG9uZW50
PgogICAgICAgICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24g
Y2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxh
dGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE1IiBhc3NpZ25pbmdBdXRo
b3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9v
dD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0i
Q0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5
Mzc2LjEuNS4zLjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAg
ICAgICAgICAgICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAg
ICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAg
PGNvZGUgY29kZT0iIiBjb2RlU3lzdGVtPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGRpc3BsYXlOYW1l
PSIiLz4KICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVy
ZW5jZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAg
ICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICAgIDxlZmZl
Y3RpdmVUaW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0eXBlPSJT
VCI+PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZVJhbmdlPgogICAgICAgICAg
ICAgICAgICAgIDxvYnNlcnZhdGlvblJhbmdlIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAg
ICAgICAgICA8L3JlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4K
ICAgICAgICAgICAgICA8L2NvbXBvbmVudD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNo
aXAgdHlwZUNvZGU9IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAg
PGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAg
ICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAg
PGNvZGUgY29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAu
MjQ3NC4xMS4zLjEuNCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMi
Lz4KICAgICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNo
aXA+CiAgICAgICAgICAgIDwvb3JnYW5pemVyPgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICA8
L3NlY3Rpb24+CiAgICAgIDwvY29tcG9uZW50PgogICAgICA8IS0tRmFtaWx5IEhpc3RvcnkgLS0+
CiAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgPHNlY3Rpb24+CiAgICAgICAgICA8dGVtcGxhdGVJ
ZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjEyNSIgYXNzaWduaW5nQXV0aG9y
aXR5TmFtZT0iSElUU1AvQzgzIi8+CiAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0
MC4xLjExMzg4My4xMC4yMC4xLjQiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAg
ICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4zLjE0IiBh
c3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICA8IS0tIEZhbWlseSBo
aXN0b3J5IHNlY3Rpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICA8Y29kZSBjb2RlPSIxMDE1Ny02
IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGRpc3BsYXlOYW1lPSJIaXN0b3J5
IG9mIGZhbWlseSBtZW1iZXIgZGlzZWFzZXMiLz4KICAgICAgICAgIDx0aXRsZT5GYW1pbHkgSGlz
dG9yeTwvdGl0bGU+CiAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgPHBhcmFncmFwaD48L3Bh
cmFncmFwaD4KICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPgogICAg
ICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAg
PHRoPjwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5BZ2U8L3RoPgogICAgICAgICAgICAgICAg
ICA8dGg+SW4gQ2FyZT88L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8
L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAg
ICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAg
ICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAg
PC90Ym9keT4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgIDwvdGV4dD4KICAgICAgICAg
IDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+CiAgICAgICAgICAgIDxvcmdhbml6ZXIgbW9vZENvZGU9
IkVWTiIgY2xhc3NDb2RlPSJDTFVTVEVSIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290
PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE4IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1l
PSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4x
LjExMzg4My4xMC4yMC4xLjIzIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAg
ICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTUi
IGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICA8IS0tIEZh
bWlseSBoaXN0b3J5IG9yZ2FuaXplciB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICA8c3RhdHVz
Q29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICA8c3ViamVjdD4KICAgICAgICAg
ICAgICAgIDxyZWxhdGVkU3ViamVjdCBjbGFzc0NvZGU9IlBSUyI+CiAgICAgICAgICAgICAgICAg
IDxjb2RlIGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbU5hbWU9IkhMNyBGYW1pbHlN
ZW1iZXIiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuMTExIj4KICAgICAgICAgICAg
ICAgICAgICA8dHJhbnNsYXRpb24gY29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtTmFt
ZT0iT0VDIEtlbnlhIFJlbGF0aW9uc2hpcCBSb2xlIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4x
NTAuMjQ3NC4xMS4zLjEuMyIvPgogICAgICAgICAgICAgICAgICA8L2NvZGU+CiAgICAgICAgICAg
ICAgICAgIDxhZGRyLz4KICAgICAgICAgICAgICAgICAgPHRlbGVjb20gbnVsbEZsYXZvcj0iVU5L
Ii8+CiAgICAgICAgICAgICAgICAgIDxzdWJqZWN0PgogICAgICAgICAgICAgICAgICAgIDxuYW1l
Lz4KICAgICAgICAgICAgICAgICAgICA8YWRtaW5pc3RyYXRpdmVHZW5kZXJDb2RlIG51bGxGbGF2
b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICAgIDxiaXJ0aFRpbWUgbnVsbEZsYXZvcj0iVU5L
Ii8+CiAgICAgICAgICAgICAgICAgIDwvc3ViamVjdD4KICAgICAgICAgICAgICAgIDwvcmVsYXRl
ZFN1YmplY3Q+CiAgICAgICAgICAgICAgPC9zdWJqZWN0PgogICAgICAgICAgICAgIDxjb21wb25l
bnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2Rl
PSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjEx
Mzg4My4xMC4yMC4xLjIyIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjEz
IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMy4zIiBhc3NpZ25p
bmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDwhLS1GYW1pbHkg
aGlzdG9yeSBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlkIGV4
dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzY1ODY2
MDAyIiBkaXNwbGF5TmFtZT0iRmluZGluZyBvZiBISVYgc3RhdHVzIiBjb2RlU3lzdGVtTmFtZT0i
U05PTUVELUNUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ij4KICAgICAgICAg
ICAgICAgICAgICA8b3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5j
ZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgICAgPC9vcmlnaW5hbFRleHQ+CiAgICAgICAg
ICAgICAgICAgIDwvY29kZT4KICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAg
ICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAg
ICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAg
ICAgICAgIDxlZmZlY3RpdmVUaW1lIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAg
ICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGNvZGVTeXN0
ZW09IiIgZGlzcGxheU5hbWU9IiIvPgogICAgICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNo
aXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0idHJ1ZSI+CiAgICAgICAgICAgICAgICAg
ICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAg
ICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjExIiBh
c3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgICAg
IDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNDAiIGFzc2lnbmlu
Z0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5h
bWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjQ4NzY3LTgi
IGRpc3BsYXlOYW1lPSJDb21tZW50IiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGVTeXN0ZW09
IjIuMTYuODQwLjEuMTEzODgzLjYuMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxvcmlnaW5h
bFRleHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAg
ICAgICAgICAgICAgICAgICAgICAgIDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAg
ICAgPC9jb2RlPgogICAgICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAgICAg
ICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICAgICAgPC90ZXh0
PgogICAgICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAg
ICAgICAgICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlv
bnNoaXA+CiAgICAgICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VC
SiIgaW52ZXJzaW9uSW5kPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24g
Y2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICAgICAgPHRl
bXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zOCIvPgogICAgICAgICAg
ICAgICAgICAgICAgPCEtLSBBZ2Ugb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAg
ICAgICAgICAgICA8Y29kZSBjb2RlPSIzOTc2NTkwMDgiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQt
Q1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJBZ2Ui
Lz4KICAgICAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgog
ICAgICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0eXBlPSJJTlQiIHZhbHVlPSIiLz4KICAg
ICAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgICAgICA8L2VudHJ5
UmVsYXRpb25zaGlwPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAg
ICA8L2NvbXBvbmVudD4KICAgICAgICAgICAgPC9vcmdhbml6ZXI+CiAgICAgICAgICA8L2VudHJ5
PgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICAgIDwhLS1QbGFuIG9m
IENhcmUtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTI0IiBhc3NpZ25p
bmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9
IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0i
SUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMu
MTAuMjAuMi43IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAgICAgICA8
dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjEwIiBhc3NpZ25pbmdB
dXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAgICAgICA8IS0tUGxhbiBvZiBDYXJlIHNlY3Rp
b24gdGVtcGxhdGUtLT4KICAgICAgICAgIDxjb2RlIGNvZGU9IjE4Nzc2LTUiIGNvZGVTeXN0ZW09
IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFt
ZT0iVHJlYXRtZW50IHBsYW4iLz4KICAgICAgICAgIDx0aXRsZT5QbGFuIG9mIENhcmU8L3RpdGxl
PgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIx
MDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0aD5QbGFubmVkIEFjdGl2aXR5PC90aD4KICAgICAgICAgICAgICAgICAgPHRo
PlBsYW5uZWQgRGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAg
ICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAg
IDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48
L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAg
ICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5IHR5cGVDb2Rl
PSJEUklWIj4KICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29k
ZT0iUlFPIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4
My4xMC4yMC4xLjI1Ii8+CiAgICAgICAgICAgICAgPCEtLSBQbGFuIG9mIENhcmUgYWN0aXZpdHkg
b2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiBy
b290PSIiLz4KICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGNv
ZGVTeXN0ZW09IiIgZGlzcGxheU5hbWU9IiIvPgogICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNv
ZGU9Im5ldyIvPgogICAgICAgICAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAg
PGxvdyB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAg
ICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiIgaW52ZXJzaW9uSW5kPSJ0cnVl
Ij4KICAgICAgICAgICAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPgog
ICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4
LjExLjgzLjExIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS40MCIg
YXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0
ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4yIiBhc3NpZ25pbmdBdXRob3Jp
dHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjQ4NzY3LTgi
IGRpc3BsYXlOYW1lPSJDb21tZW50IiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGVTeXN0ZW09
IjIuMTYuODQwLjEuMTEzODgzLjYuMSI+CiAgICAgICAgICAgICAgICAgICAgPG9yaWdpbmFsVGV4
dD4KICAgICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgogICAgICAgICAg
ICAgICAgICAgIDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICA8L2NvZGU+CiAgICAg
ICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9
IiIvPgogICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXND
b2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICAg
ICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAg
dHlwZUNvZGU9IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPGFj
dCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1w
bGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAgICAg
ICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNv
ZGUgY29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3
NC4xMS4zLjEuNCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMiLz4K
ICAgICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+
CiAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgIDwv
c2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICA8L3N0cnVjdHVyZWRCb2R5PgogIDwvY29t
cG9uZW50Pgo8L0NsaW5pY2FsRG9jdW1lbnQ+</outboundTemplate>
        <inboundProtocol>DELIMITED</inboundProtocol>
        <outboundProtocol>HL7V3</outboundProtocol>
        <inboundProperties>
          <property name="batchGroupingColumn"></property>
          <property name="batchMessageDelimiter"></property>
          <property name="batchMessageDelimiterIncluded">false</property>
          <property name="batchScript"></property>
          <property name="batchSkipRecords">0</property>
          <property name="batchSplitByRecord">true</property>
          <property name="columnDelimiter">\t</property>
          <property name="columnNames"></property>
          <property name="columnWidths"></property>
          <property name="escapeWithDoubleQuote">false</property>
          <property name="ignoreCR">true</property>
          <property name="numberedRows">false</property>
          <property name="quoteChar"></property>
          <property name="quoteEscapeChar">\</property>
          <property name="recordDelimiter">\n</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <version>2.1.1.5490</version>
    </connector>
    <connector>
      <name>Insert or update CDA in CDS</name>
      <properties>
        <property name="DataType">Database Writer</property>
        <property name="URL">jdbc:mysql://localhost:3306/cds</property>
        <property name="driver">com.mysql.jdbc.Driver</property>
        <property name="host">query</property>
        <property name="password">letmein123!</property>
        <property name="query"></property>
        <property name="script">var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/cds&apos;,&apos;test_user&apos;,&apos;letmein123!&apos;);

var params = new java.util.ArrayList();
params.add($(&apos;pid&apos;));
params.add($(&apos;facCode&apos;));
params.add($(&apos;sourceSystem&apos;));
var result = dbConn.executeCachedQuery(&quot;SELECT cda_id FROM cda WHERE patient_clinical_id = ? AND facility_code = ? AND source_type = &apos;EMR&apos; &quot; +
                                       &quot;AND source_system = ?&quot;, params);

var found = false;
var cdaId = 0;
if (result.next()) {
  cdaId = result.getInt(&apos;cda_id&apos;);
  if (!result.wasNull() &amp;&amp; cdaId &gt; 0) found = true;
}

params = new java.util.ArrayList();
if (found) {
  params.add($(&apos;facName&apos;));
  params.add(&apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&apos; + messageObject.getTransformedData());
  params.add($(&apos;firstName&apos;));
  params.add($(&apos;lastName&apos;));
  if ($(&apos;birthDate&apos;) == &apos;&apos;) {
    params.add(null);
    params.add(null);
  } else if ($(&apos;birthDate&apos;).length() == 4) {
    params.add($(&apos;birthDate&apos;));
    params.add($(&apos;birthDate&apos;) + &apos;0615&apos;);
  } else if ($(&apos;birthDate&apos;).length() == 6) {
    params.add($(&apos;birthDate&apos;));
    params.add($(&apos;birthDate&apos;) + &apos;15&apos;);
  } else {
    params.add($(&apos;birthDate&apos;));
    params.add($(&apos;birthDate&apos;));
  }
  params.add($(&apos;gender&apos;));
  params.add(DateUtil.getCurrentDate(&apos;yyyy-MM-dd HH:mm:ss&apos;));
  params.add($(&apos;currDT&apos;));
  params.add($(&apos;pid&apos;));
  params.add($(&apos;facCode&apos;));
  params.add($(&apos;sourceSystem&apos;));
  var stat = dbConn.executeUpdate(&quot;UPDATE cda SET facility_name = ?, cda = ?, first_name = ?, last_name = ?, &quot; +
                                  &quot;cda_dob = ?, moh_dob = ?, gender = ?, date_stored = ?, date_generated = ? WHERE &quot; +
                                  &quot;patient_clinical_id = ? AND facility_code = ? AND source_type = &apos;EMR&apos; &quot; +
                                  &quot;AND source_system = ?&quot;, params);

  // Put the cda_id into the cda_to_process table
  params = new java.util.ArrayList();
  params.add(cdaId);
  stat = dbConn.executeUpdate(&quot;INSERT IGNORE cda_to_process (cda_id) VALUES (?)&quot;, params);
} else {
  params.add($(&apos;pid&apos;));
  params.add($(&apos;facCode&apos;));
  params.add($(&apos;facName&apos;));
  params.add(&apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&apos; + messageObject.getTransformedData());
  params.add($(&apos;firstName&apos;));
  params.add($(&apos;lastName&apos;));
  if ($(&apos;birthDate&apos;) == &apos;&apos;) {
    params.add(null);
    params.add(null);
  } else if ($(&apos;birthDate&apos;).length() == 4) {
    params.add($(&apos;birthDate&apos;));
    params.add($(&apos;birthDate&apos;) + &apos;0615&apos;);
  } else if ($(&apos;birthDate&apos;).length() == 6) {
    params.add($(&apos;birthDate&apos;));
    params.add($(&apos;birthDate&apos;) + &apos;15&apos;);
  } else {
    params.add($(&apos;birthDate&apos;));
    params.add($(&apos;birthDate&apos;));
  }
  params.add($(&apos;gender&apos;));
  params.add($(&apos;sourceSystem&apos;));
  params.add(DateUtil.getCurrentDate(&apos;yyyy-MM-dd HH:mm:ss&apos;));
  params.add($(&apos;currDT&apos;));
  var stat = dbConn.executeUpdate(&quot;INSERT cda (patient_clinical_id, facility_code, facility_name, cda, first_name, last_name, cda_dob, moh_dob, &quot; +
                                  &quot;gender, source_type, source_system, date_stored, date_generated) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, &apos;EMR&apos;, ?, ?, ?)&quot;, params);

  // Put the cda_id into the cda_to_process table
  stat = dbConn.executeUpdate(&quot;INSERT IGNORE cda_to_process (cda_id) VALUES (LAST_INSERT_ID())&quot;);
}


dbConn.close();</property>
        <property name="useScript">1</property>
        <property name="username">test_user</property>
      </properties>
      <transformer>
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>Setup</name>
            <script>// The root OID to use for id elements (ideally, this should be unique to each instance of C-PAD).
// Use the tblOrganization.SiteCode value for the final value (after &apos;11.4.1&apos;), if it exists.
// Otherwise, just use &apos;1&apos;. Code for this is in the &apos;Process header&apos; step.
var idRootOid = &quot;1.3.6.1.4.1.150.2474.11.4.1.&quot;;
var medCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.5&quot;;
var medCodeSystemName = &quot;OEC Kenya Medication Codes&quot;;
var labCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.6&quot;;
var labCodeSystemName = &quot;OEC Kenya Laboratory Test Codes&quot;;

// Setup namespaces for outbound CDA
var xsd = new Namespace(&quot;xsd&quot;, &quot;http://www.w3.org/2001/XMLSchema&quot;);
var xsi = new Namespace(&quot;xsi&quot;, &quot;http://www.w3.org/2001/XMLSchema-instance&quot;);
var v3 = new Namespace(&quot;v3&quot;, &quot;urn:hl7-org:v3&quot;);
default xml namespace = v3;

// This function is useful to help switch namespaces whenever reading a data element from
// the CSV file since the namespace on that file differs from that of the outbound CDA.
function msgRead(col) {
  default xml namespace = &quot;&quot;;
  var data = msg[&apos;row&apos;][&apos;column&apos; + col].toString();
  default xml namespace = v3;
  return (data);
}

// Trim leading and trailing whitespace from a text string
function trim(str) {
  return str.replace(/^\s\s*/, &apos;&apos;).replace(/\s\s*$/, &apos;&apos;);
}

// This function will attempt to lookup a given medication name and return an object containing:
// 1) the RxNorm code (if a match is found, else the original input)
// 2) the RxNorm code system name (if match is found, else &apos;medCodeSystemName&apos; variable)
// 3) the RxNorm code system oid (if match is found, else &apos;medCodeSystemOid&apos; variable)
// 4) the RxNorm display name (if match is found, else the original input)
function lookupMed(med) {
  var lookupTable = {
    &apos;3tc&apos;:{
      &apos;code&apos;:&apos;68244&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine&apos;
    },
    &apos;3tc(150)&apos;:{
      &apos;code&apos;:&apos;199147&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine 150 MG Oral Tablet&apos;
    },
    &apos;abc&apos;:{
      &apos;code&apos;:&apos;190521&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir&apos;
    },
    &apos;abc(300)&apos;:{
      &apos;code&apos;:&apos;242679&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir 300 MG Oral Tablet&apos;
    },
    &apos;alluvia&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;atv/r&apos;:{
      &apos;code&apos;:&apos;343047&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Atazanavir&apos;
    },
    &apos;azt&apos;:{
      &apos;code&apos;:&apos;11413&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine&apos;
    },
    &apos;azt(300)&apos;:{
      &apos;code&apos;:&apos;199663&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine 300 MG Oral Tablet&apos;
    },
    &apos;combivir&apos;:{
      &apos;code&apos;:&apos;192254&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Combivir&apos;
    },
    &apos;d4t&apos;:{
      &apos;code&apos;:&apos;59763&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine&apos;
    },
    &apos;d4t(30)&apos;:{
      &apos;code&apos;:&apos;313109&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 30 MG Oral Capsule&apos;
    },
    &apos;d4t(40)&apos;:{
      &apos;code&apos;:&apos;313110&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 40 MG Oral Capsule&apos;
    },
    &apos;ddi&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddi(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddi(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddl(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;efv&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;idv/r&apos;:{
      &apos;code&apos;:&apos;114289&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Indinavir&apos;
    },
    &apos;kal&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;kaletra&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;lop/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpr&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpr/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpv&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpv/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;nfv&apos;:{
      &apos;code&apos;:&apos;134527&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir&apos;
    },
    &apos;nfv(250)&apos;:{
      &apos;code&apos;:&apos;311924&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir 250 MG Oral Tablet&apos;
    },
    &apos;nvp&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(0-&lt;10kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(10-&lt;20kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp syr&apos;:{
      &apos;code&apos;:&apos;311943&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine 10 MG/ML Oral Suspension&apos;
    },
    &apos;tdf&apos;:{
      &apos;code&apos;:&apos;117466&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Tenofovir&apos;
    },
    &apos;viramine&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    }
  };

  if (lookupTable[med.toLowerCase()]) {
    var retObj = lookupTable[med.toLowerCase()];
  } else {
    var retObj = {
      &apos;code&apos;:med,
      &apos;codeSystemName&apos;:medCodeSystemName,
      &apos;codeSystemOid&apos;:medCodeSystemOid,
      &apos;displayName&apos;:med
    };
  }

  return (retObj);
}

// This function will attempt to determine if a given medication string is really multiple medications.
// If so, it will split the string into its component medications and return them as an array.
// If not, it will return the original medication as an array (with one element).
function processMedName(med, flag) {
  // if flag not passed, ignore
  // otherwise use a different set of delimiters
  if (typeof flag !== &apos;undefined&apos;)
    var regimenDelimiters = /[\+,\.]/;
  else
    var regimenDelimiters = /[\+,\/\.]/;

  med = med.replace(/\s+\(/, &quot;(&quot;);
  med = med.replace(/ /g, &quot;_&quot;);
  med = med.replace(/\/100/g, &quot;|100&quot;);
  if (med.toLowerCase().search(regimenDelimiters) &gt;= 0) {
    if (med.toLowerCase().search(&apos;/r&apos;) &gt;= 0) {
      med = med.replace(/\/r/g, &quot;^r&quot;);
      med = med.replace(/\/R/g, &quot;^R&quot;);
    }

    var retArr = med.split(regimenDelimiters);
    for (var i = 0; i &lt; retArr.length; i++) {
      if (retArr[i] == &quot;&quot; || retArr[i] == null || retArr[i].length &lt; 1) continue;
      retArr[i] = lookupMed(retArr[i].replace(/^[0-9]+-/, &apos;&apos;)
                                     .replace(/^.*=/, &apos;&apos;)
                                     .replace(/_/g, &quot; &quot;)
                                     .replace(/\|/g, &quot;/&quot;)
                                     .replace(/\^r/g, &quot;/r&quot;)
                                     .replace(/\^R/g, &quot;/R&quot;)
                                     .replace(/^\s\s*/, &apos;&apos;)
                                     .replace(/\s\s*$/, &apos;&apos;));
    }
    return (retArr);
  } else {
    var retArr = [lookupMed(med)];
    return (retArr);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>// The root OID to use for id elements (ideally, this should be unique to each instance of C-PAD).
// Use the tblOrganization.SiteCode value for the final value (after &apos;11.4.1&apos;), if it exists.
// Otherwise, just use &apos;1&apos;. Code for this is in the &apos;Process header&apos; step.
var idRootOid = &quot;1.3.6.1.4.1.150.2474.11.4.1.&quot;;
var medCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.5&quot;;
var medCodeSystemName = &quot;OEC Kenya Medication Codes&quot;;
var labCodeSystemOid = &quot;1.3.6.1.4.1.150.2474.11.3.1.6&quot;;
var labCodeSystemName = &quot;OEC Kenya Laboratory Test Codes&quot;;

// Setup namespaces for outbound CDA
var xsd = new Namespace(&quot;xsd&quot;, &quot;http://www.w3.org/2001/XMLSchema&quot;);
var xsi = new Namespace(&quot;xsi&quot;, &quot;http://www.w3.org/2001/XMLSchema-instance&quot;);
var v3 = new Namespace(&quot;v3&quot;, &quot;urn:hl7-org:v3&quot;);
default xml namespace = v3;

// This function is useful to help switch namespaces whenever reading a data element from
// the CSV file since the namespace on that file differs from that of the outbound CDA.
function msgRead(col) {
  default xml namespace = &quot;&quot;;
  var data = msg[&apos;row&apos;][&apos;column&apos; + col].toString();
  default xml namespace = v3;
  return (data);
}

// Trim leading and trailing whitespace from a text string
function trim(str) {
  return str.replace(/^\s\s*/, &apos;&apos;).replace(/\s\s*$/, &apos;&apos;);
}

// This function will attempt to lookup a given medication name and return an object containing:
// 1) the RxNorm code (if a match is found, else the original input)
// 2) the RxNorm code system name (if match is found, else &apos;medCodeSystemName&apos; variable)
// 3) the RxNorm code system oid (if match is found, else &apos;medCodeSystemOid&apos; variable)
// 4) the RxNorm display name (if match is found, else the original input)
function lookupMed(med) {
  var lookupTable = {
    &apos;3tc&apos;:{
      &apos;code&apos;:&apos;68244&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine&apos;
    },
    &apos;3tc(150)&apos;:{
      &apos;code&apos;:&apos;199147&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lamivudine 150 MG Oral Tablet&apos;
    },
    &apos;abc&apos;:{
      &apos;code&apos;:&apos;190521&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir&apos;
    },
    &apos;abc(300)&apos;:{
      &apos;code&apos;:&apos;242679&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Abacavir 300 MG Oral Tablet&apos;
    },
    &apos;alluvia&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;atv/r&apos;:{
      &apos;code&apos;:&apos;343047&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Atazanavir&apos;
    },
    &apos;azt&apos;:{
      &apos;code&apos;:&apos;11413&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine&apos;
    },
    &apos;azt(300)&apos;:{
      &apos;code&apos;:&apos;199663&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Zidovudine 300 MG Oral Tablet&apos;
    },
    &apos;combivir&apos;:{
      &apos;code&apos;:&apos;192254&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Combivir&apos;
    },
    &apos;d4t&apos;:{
      &apos;code&apos;:&apos;59763&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine&apos;
    },
    &apos;d4t(30)&apos;:{
      &apos;code&apos;:&apos;313109&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 30 MG Oral Capsule&apos;
    },
    &apos;d4t(40)&apos;:{
      &apos;code&apos;:&apos;313110&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Stavudine 40 MG Oral Capsule&apos;
    },
    &apos;ddi&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddi(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddi(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl&apos;:{
      &apos;code&apos;:&apos;3364&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine&apos;
    },
    &apos;ddl(125)&apos;:{
      &apos;code&apos;:&apos;284183&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 125 MG Enteric Coated Capsule&apos;
    },
    &apos;ddl(200)&apos;:{
      &apos;code&apos;:&apos;284185&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Didanosine 200 MG Enteric Coated Capsule&apos;
    },
    &apos;efv&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;efv(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;195085&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Efavirenz&apos;
    },
    &apos;idv/r&apos;:{
      &apos;code&apos;:&apos;114289&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Indinavir&apos;
    },
    &apos;kal&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;kaletra&apos;:{
      &apos;code&apos;:&apos;284756&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Kaletra&apos;
    },
    &apos;lop/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpr&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpr/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;lpv&apos;:{
      &apos;code&apos;:&apos;195088&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir&apos;
    },
    &apos;lpv/r&apos;:{
      &apos;code&apos;:&apos;597729&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Lopinavir / Ritonavir Oral Tablet&apos;
    },
    &apos;nfv&apos;:{
      &apos;code&apos;:&apos;134527&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir&apos;
    },
    &apos;nfv(250)&apos;:{
      &apos;code&apos;:&apos;311924&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nelfinavir 250 MG Oral Tablet&apos;
    },
    &apos;nvp&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(0-&lt;10kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(10-&lt;20kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(20-&lt;30kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp(30-&lt;40kg)&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    },
    &apos;nvp syr&apos;:{
      &apos;code&apos;:&apos;311943&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine 10 MG/ML Oral Suspension&apos;
    },
    &apos;tdf&apos;:{
      &apos;code&apos;:&apos;117466&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Tenofovir&apos;
    },
    &apos;viramine&apos;:{
      &apos;code&apos;:&apos;53654&apos;,
      &apos;codeSystemName&apos;:&apos;RxNorm&apos;,
      &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.88&apos;,
      &apos;displayName&apos;:&apos;Nevirapine&apos;
    }
  };

  if (lookupTable[med.toLowerCase()]) {
    var retObj = lookupTable[med.toLowerCase()];
  } else {
    var retObj = {
      &apos;code&apos;:med,
      &apos;codeSystemName&apos;:medCodeSystemName,
      &apos;codeSystemOid&apos;:medCodeSystemOid,
      &apos;displayName&apos;:med
    };
  }

  return (retObj);
}

// This function will attempt to determine if a given medication string is really multiple medications.
// If so, it will split the string into its component medications and return them as an array.
// If not, it will return the original medication as an array (with one element).
function processMedName(med, flag) {
  // if flag not passed, ignore
  // otherwise use a different set of delimiters
  if (typeof flag !== &apos;undefined&apos;)
    var regimenDelimiters = /[\+,\.]/;
  else
    var regimenDelimiters = /[\+,\/\.]/;

  med = med.replace(/\s+\(/, &quot;(&quot;);
  med = med.replace(/ /g, &quot;_&quot;);
  med = med.replace(/\/100/g, &quot;|100&quot;);
  if (med.toLowerCase().search(regimenDelimiters) &gt;= 0) {
    if (med.toLowerCase().search(&apos;/r&apos;) &gt;= 0) {
      med = med.replace(/\/r/g, &quot;^r&quot;);
      med = med.replace(/\/R/g, &quot;^R&quot;);
    }

    var retArr = med.split(regimenDelimiters);
    for (var i = 0; i &lt; retArr.length; i++) {
      if (retArr[i] == &quot;&quot; || retArr[i] == null || retArr[i].length &lt; 1) continue;
      retArr[i] = lookupMed(retArr[i].replace(/^[0-9]+-/, &apos;&apos;)
                                     .replace(/^.*=/, &apos;&apos;)
                                     .replace(/_/g, &quot; &quot;)
                                     .replace(/\|/g, &quot;/&quot;)
                                     .replace(/\^r/g, &quot;/r&quot;)
                                     .replace(/\^R/g, &quot;/R&quot;)
                                     .replace(/^\s\s*/, &apos;&apos;)
                                     .replace(/\s\s*$/, &apos;&apos;));
    }
    return (retArr);
  } else {
    var retArr = [lookupMed(med)];
    return (retArr);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>Process header</name>
            <script>var maxParticipants = 3;
var idxHeaderBase = 1;
var idxHeaderOffsets = {
  &apos;facName&apos;:0, &apos;facCode&apos;:1, &apos;facCounty&apos;:2, &apos;facState&apos;:3, &apos;sourceSystem&apos;:4, &apos;pid&apos;:5, &apos;lname1&apos;:6,
  &apos;lname2&apos;:7, &apos;fname1&apos;:8, &apos;fname2&apos;:9, &apos;fname3&apos;:10, &apos;dob&apos;:11, &apos;sex&apos;:12, &apos;addr1&apos;:13,
  &apos;addr2&apos;:14, &apos;city&apos;:15, &apos;county&apos;:16, &apos;state&apos;:17, &apos;landmark&apos;:18, &apos;phone1&apos;:19,
  &apos;phone2&apos;: 20, &apos;phone3&apos;:21, &apos;marStatus&apos;:22, &apos;healthCtr&apos;:23, &apos;lname1Sup1&apos;:24,
  &apos;lname2Sup1&apos;:25, &apos;fname1Sup1&apos;:26, &apos;fname2Sup1&apos;:27, &apos;fname3Sup1&apos;:28, &apos;relSup1&apos;:29,
  &apos;addr1Sup1&apos;:30, &apos;addr2Sup1&apos;:31, &apos;citySup1&apos;:32, &apos;countySup1&apos;:33, &apos;stateSup1&apos;:34,
  &apos;phoneSup1&apos;:35, &apos;lname1Sup2&apos;:36, &apos;lname2Sup2&apos;:37, &apos;fname1Sup2&apos;:37, &apos;fname2Sup2&apos;:39,
  &apos;fname3Sup2&apos;:40, &apos;relSup2&apos;:41, &apos;addr1Sup2&apos;:42, &apos;addr2Sup2&apos;:43, &apos;citySup2&apos;:44,
  &apos;countySup2&apos;:45, &apos;stateSup2&apos;:46, &apos;phoneSup2&apos;:47, &apos;lname1Sup3&apos;:48, &apos;lname2Sup3&apos;:49,
  &apos;fname1Sup3&apos;:50, &apos;fname2Sup3&apos;:51, &apos;fname3Sup3&apos;:52, &apos;relSup3&apos;:53, &apos;addr1Sup3&apos;:54,
  &apos;addr2Sup3&apos;:55, &apos;citySup3&apos;:56, &apos;countySup3&apos;:57, &apos;stateSup3&apos;:58, &apos;phoneSup3&apos;:59
};

// Set some channel variables for use in later mappings
channelMap.put(&apos;facName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facName&apos;])));
channelMap.put(&apos;pid&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;pid&apos;])));
channelMap.put(&apos;softwareName&apos;, channelMap.get(&apos;facName&apos;) + &quot; CPAD-Companion v.1.0&quot;);
channelMap.put(&apos;currDTZ&apos;, DateUtil.getCurrentDate(&quot;yyyyMMddHHmmssZ&quot;));
channelMap.put(&apos;currDT&apos;, DateUtil.getCurrentDate(&quot;yyyy-MM-dd HH:mm:ss&quot;));

// Update root OID value with facility information
var facCode = msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCode&apos;]);
if (trim(facCode) != &quot;&quot; &amp;&amp; facCode != null) {
  idRootOid += trim(facCode);
  channelMap.put(&apos;facCode&apos;, trim(facCode));
} else {
  idRootOid += &apos;1&apos;;
  channelMap.put(&apos;facCode&apos;, &apos;1&apos;);
}

// Pull out some other values to be used as index fields in the CDS
channelMap.put(&apos;firstName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;])));
channelMap.put(&apos;lastName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;])));
channelMap.put(&apos;birthDate&apos;, msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]));
channelMap.put(&apos;gender&apos;, &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
                         &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;N&quot;);
channelMap.put(&apos;sourceSystem&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sourceSystem&apos;])));

// Start populating header elements
tmp[&apos;id&apos;][&apos;@extension&apos;] += &quot;_&quot; + channelMap.get(&apos;facName&apos;) + &quot;_&quot; + facCode + &quot;_&quot; + channelMap.get(&apos;pid&apos;) +
  &quot;_&quot; + channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;title&apos;] += &quot; - &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]) +
  &quot; &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]) + &quot; - &quot; +
  channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;effectiveTime&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;pid&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;city&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;city&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;county&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;state&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phone1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;family&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;given&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] =
  &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
  &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;&quot;;
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@displayName&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCounty&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facState&apos;]);
tmp[&apos;author&apos;][&apos;time&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;assignedAuthoringDevice&apos;][&apos;softwareName&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);

// Handle multiple participant blocks
var repl = &lt;replacement/&gt;;
var participantTmpl = tmp[&apos;participant&apos;].copy();
for (var i = 0; i &lt; maxParticipants; i++) {
  if ((msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == null)) {
    continue;
  }

  var tmpParticipant = participantTmpl.copy();
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;family&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;given&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]);

  // Replace any remaining required values with nullFlavor=&quot;UNK&quot;
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated participant node to the replacement node
  repl.appendChild(tmpParticipant);
}

// Replace the original empty participant node with the populated replacement node
tmp.replace(&apos;participant&apos;, repl[&apos;participant&apos;]);

// If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

// &lt;administrativeGenderCode code=&quot;&quot; .../&gt; =&gt; &lt;administrativeGenderCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;];
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@codeSystem&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;birthTime value=&quot;&quot;/&gt; =&gt; &lt;birthTime nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;maritalStatusCode code=&quot;&quot;/&gt; =&gt; &lt;maritalStatusCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;telecom value=&quot;tel:&quot;/&gt; =&gt; &lt;telecom nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxParticipants = 3;
var idxHeaderBase = 1;
var idxHeaderOffsets = {
  &apos;facName&apos;:0, &apos;facCode&apos;:1, &apos;facCounty&apos;:2, &apos;facState&apos;:3, &apos;sourceSystem&apos;:4, &apos;pid&apos;:5, &apos;lname1&apos;:6,
  &apos;lname2&apos;:7, &apos;fname1&apos;:8, &apos;fname2&apos;:9, &apos;fname3&apos;:10, &apos;dob&apos;:11, &apos;sex&apos;:12, &apos;addr1&apos;:13,
  &apos;addr2&apos;:14, &apos;city&apos;:15, &apos;county&apos;:16, &apos;state&apos;:17, &apos;landmark&apos;:18, &apos;phone1&apos;:19,
  &apos;phone2&apos;: 20, &apos;phone3&apos;:21, &apos;marStatus&apos;:22, &apos;healthCtr&apos;:23, &apos;lname1Sup1&apos;:24,
  &apos;lname2Sup1&apos;:25, &apos;fname1Sup1&apos;:26, &apos;fname2Sup1&apos;:27, &apos;fname3Sup1&apos;:28, &apos;relSup1&apos;:29,
  &apos;addr1Sup1&apos;:30, &apos;addr2Sup1&apos;:31, &apos;citySup1&apos;:32, &apos;countySup1&apos;:33, &apos;stateSup1&apos;:34,
  &apos;phoneSup1&apos;:35, &apos;lname1Sup2&apos;:36, &apos;lname2Sup2&apos;:37, &apos;fname1Sup2&apos;:37, &apos;fname2Sup2&apos;:39,
  &apos;fname3Sup2&apos;:40, &apos;relSup2&apos;:41, &apos;addr1Sup2&apos;:42, &apos;addr2Sup2&apos;:43, &apos;citySup2&apos;:44,
  &apos;countySup2&apos;:45, &apos;stateSup2&apos;:46, &apos;phoneSup2&apos;:47, &apos;lname1Sup3&apos;:48, &apos;lname2Sup3&apos;:49,
  &apos;fname1Sup3&apos;:50, &apos;fname2Sup3&apos;:51, &apos;fname3Sup3&apos;:52, &apos;relSup3&apos;:53, &apos;addr1Sup3&apos;:54,
  &apos;addr2Sup3&apos;:55, &apos;citySup3&apos;:56, &apos;countySup3&apos;:57, &apos;stateSup3&apos;:58, &apos;phoneSup3&apos;:59
};

// Set some channel variables for use in later mappings
channelMap.put(&apos;facName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facName&apos;])));
channelMap.put(&apos;pid&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;pid&apos;])));
channelMap.put(&apos;softwareName&apos;, channelMap.get(&apos;facName&apos;) + &quot; CPAD-Companion v.1.0&quot;);
channelMap.put(&apos;currDTZ&apos;, DateUtil.getCurrentDate(&quot;yyyyMMddHHmmssZ&quot;));
channelMap.put(&apos;currDT&apos;, DateUtil.getCurrentDate(&quot;yyyy-MM-dd HH:mm:ss&quot;));

// Update root OID value with facility information
var facCode = msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCode&apos;]);
if (trim(facCode) != &quot;&quot; &amp;&amp; facCode != null) {
  idRootOid += trim(facCode);
  channelMap.put(&apos;facCode&apos;, trim(facCode));
} else {
  idRootOid += &apos;1&apos;;
  channelMap.put(&apos;facCode&apos;, &apos;1&apos;);
}

// Pull out some other values to be used as index fields in the CDS
channelMap.put(&apos;firstName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;])));
channelMap.put(&apos;lastName&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;])));
channelMap.put(&apos;birthDate&apos;, msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]));
channelMap.put(&apos;gender&apos;, &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
                         &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
                         &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;N&quot;);
channelMap.put(&apos;sourceSystem&apos;, trim(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sourceSystem&apos;])));

// Start populating header elements
tmp[&apos;id&apos;][&apos;@extension&apos;] += &quot;_&quot; + channelMap.get(&apos;facName&apos;) + &quot;_&quot; + facCode + &quot;_&quot; + channelMap.get(&apos;pid&apos;) +
  &quot;_&quot; + channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;title&apos;] += &quot; - &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]) +
  &quot; &quot; + msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]) + &quot; - &quot; +
  channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;effectiveTime&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;pid&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;city&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;city&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;county&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;state&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phone1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;family&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;name&apos;][&apos;given&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] =
  &quot;M&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Male&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ?
  &quot;M&quot; : &quot;F&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ||
  &quot;Female&quot;.equalsIgnoreCase(msgRead(idxHeaderBase + idxHeaderOffsets[&apos;sex&apos;])) ? &quot;F&quot; : &quot;&quot;;
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;dob&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@displayName&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;marStatus&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;county&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facCounty&apos;]);
tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;providerOrganization&apos;][&apos;addr&apos;][&apos;state&apos;] =
  msgRead(idxHeaderBase + idxHeaderOffsets[&apos;facState&apos;]);
tmp[&apos;author&apos;][&apos;time&apos;][&apos;@value&apos;] = channelMap.get(&apos;currDTZ&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;id&apos;][&apos;@extension&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;assignedAuthoringDevice&apos;][&apos;softwareName&apos;] = channelMap.get(&apos;softwareName&apos;);
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;author&apos;][&apos;assignedAuthor&apos;][&apos;representedOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;id&apos;][&apos;@extension&apos;] = facCode;
tmp[&apos;custodian&apos;][&apos;assignedCustodian&apos;][&apos;representedCustodianOrganization&apos;][&apos;name&apos;] = channelMap.get(&apos;facName&apos;);

// Handle multiple participant blocks
var repl = &lt;replacement/&gt;;
var participantTmpl = tmp[&apos;participant&apos;].copy();
for (var i = 0; i &lt; maxParticipants; i++) {
  if ((msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]) == null) &amp;&amp;
      (msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == &quot;&quot; ||
       msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]) == null)) {
    continue;
  }

  var tmpParticipant = participantTmpl.copy();
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;relSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;addr&apos;][&apos;streetAddressLine&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;addr1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] +=
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;phoneSup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;family&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;lname1Sup&apos; + (i + 1)]);
  tmpParticipant[&apos;associatedEntity&apos;][&apos;associatedPerson&apos;][&apos;name&apos;][&apos;given&apos;] =
    msgRead(idxHeaderBase + idxHeaderOffsets[&apos;fname1Sup&apos; + (i + 1)]);

  // Replace any remaining required values with nullFlavor=&quot;UNK&quot;
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@value&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }
  if (tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    delete tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    tmpParticipant[&apos;associatedEntity&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated participant node to the replacement node
  repl.appendChild(tmpParticipant);
}

// Replace the original empty participant node with the populated replacement node
tmp.replace(&apos;participant&apos;, repl[&apos;participant&apos;]);

// If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

// &lt;administrativeGenderCode code=&quot;&quot; .../&gt; =&gt; &lt;administrativeGenderCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@code&apos;];
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@codeSystem&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;administrativeGenderCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;birthTime value=&quot;&quot;/&gt; =&gt; &lt;birthTime nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;birthTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;maritalStatusCode code=&quot;&quot;/&gt; =&gt; &lt;maritalStatusCode nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;] == &quot;&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@code&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;patient&apos;][&apos;maritalStatusCode&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}

// &lt;telecom value=&quot;tel:&quot;/&gt; =&gt; &lt;telecom nullFlavor=&quot;UNK&quot;/&gt;
if (tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;] == &quot;tel:&quot;) {
  delete tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@value&apos;];
  tmp[&apos;recordTarget&apos;][&apos;patientRole&apos;][&apos;telecom&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>Process encounters section</name>
            <script>var maxEnc = 12;
var idxEncBases = {
  &apos;eid&apos;:257, &apos;date&apos;:258, &apos;type&apos;:259, &apos;clinInit&apos;:347
};
var idxEncOffset = 91;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  // if no id, we&apos;re done processing encounters, so break
  if (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == null ||
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == &quot;&quot;) {
    break;
  }

  var tmpText = textTmpl.copy();
  var tmpEntry = entryTmpl.copy();

  // save encounter id to use as reference in other body sections&#xd;//  channelMap.put(&apos;enc&apos; + i + &apos;Id&apos;, msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)));

  // Populate text elements
  var encId = &apos;EncType&apos; + i;
  var encType = msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
  var encContent = &lt;content ID={encId}&gt;{encType}&lt;/content&gt;;
  tmpText[&apos;td&apos;][0].appendChild(encContent);
  tmpText[&apos;td&apos;][1] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpText[&apos;td&apos;][2] =
    channelMap.get(&apos;facName&apos;);
  tmpText[&apos;td&apos;][3] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
  // Done populating encounter text elements

  // Append populated encounter text node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

  // Populate entry elements
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;assignedPerson&apos;][&apos;name&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    channelMap.get(&apos;facName&apos;);
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] =
    channelMap.get(&apos;facName&apos;);

  // Dispose of any unpopulated nodes
  if (msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == &quot;&quot; ||
      msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;performer&apos;];
  }

  if (channelMap.get(&apos;facName&apos;) == &quot;&quot; ||
      channelMap.get(&apos;facName&apos;) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;participant&apos;];
  }

  // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

  // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated encounter entry node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;].appendChild(tmpEntry);
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxEnc = 12;
var idxEncBases = {
  &apos;eid&apos;:257, &apos;date&apos;:258, &apos;type&apos;:259, &apos;clinInit&apos;:347
};
var idxEncOffset = 91;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  // if no id, we&apos;re done processing encounters, so break
  if (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == null ||
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) == &quot;&quot;) {
    break;
  }

  var tmpText = textTmpl.copy();
  var tmpEntry = entryTmpl.copy();

  // save encounter id to use as reference in other body sections&#xd;//  channelMap.put(&apos;enc&apos; + i + &apos;Id&apos;, msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)));

  // Populate text elements
  var encId = &apos;EncType&apos; + i;
  var encType = msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
  var encContent = &lt;content ID={encId}&gt;{encType}&lt;/content&gt;;
  tmpText[&apos;td&apos;][0].appendChild(encContent);
  tmpText[&apos;td&apos;][1] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpText[&apos;td&apos;][2] =
    channelMap.get(&apos;facName&apos;);
  tmpText[&apos;td&apos;][3] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
    &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
  // Done populating encounter text elements

  // Append populated encounter text node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

  // Populate entry elements
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;] = encType;
  tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + encId;
  tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] =
    msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;performer&apos;][&apos;assignedEntity&apos;][&apos;assignedPerson&apos;][&apos;name&apos;] =
    msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset));
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;id&apos;][&apos;@extension&apos;] =
    channelMap.get(&apos;facName&apos;);
  tmpEntry[&apos;encounter&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] =
    channelMap.get(&apos;facName&apos;);

  // Dispose of any unpopulated nodes
  if (msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == &quot;&quot; ||
      msgRead(idxEncBases[&apos;clinInit&apos;] + (i * idxEncOffset)) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;performer&apos;];
  }

  if (channelMap.get(&apos;facName&apos;) == &quot;&quot; ||
      channelMap.get(&apos;facName&apos;) == null) {
    delete tmpEntry[&apos;encounter&apos;][&apos;participant&apos;];
  }

  // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

  // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@code&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@displayName&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
    delete tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
  if (tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
    delete tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
    tmpEntry[&apos;encounter&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
  }

  // Append populated encounter entry node
  tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][0][&apos;section&apos;].appendChild(tmpEntry);
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>Process allergies/reactions section</name>
            <script>var maxPoorAdh = 5;
var idxPoorAdhBases = {
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:324
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  for (var j = idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset);
           j &lt; idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset) + maxPoorAdh;
           j++) {
    // if the reason for poor adherence is not &apos;Toxicity/side effects&apos; or the medication name is empty,
    // then skip it (doesn&apos;t belong in this section)
    if (msgRead(j) != &quot;1-Toxicity/side effects&quot; ||
        trim(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset))) == &quot;&quot; ||
        msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)) == null) {
      continue;
    } else {
      // found med(s) to be added to this section, break loop when done (only need to add once per encounter)

      // Process the medication (or multiple medications if it&apos;s a regimen)
      var meds = processMedName(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
      for (var k = 0; k &lt; meds.length; k++) {

        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0] = &apos;Drug Intolerance&apos;;
        tmpText[&apos;td&apos;][1].appendChild(medContent);
        tmpText[&apos;td&apos;][2] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
        // Done populating allergies/reactions text elements

        // Append populated allergies/reactions text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId + &apos;-Intol&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;59037007&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Drug Intolerance&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Append populated allergies/reactions entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;].appendChild(tmpEntry);
      }

      break;
    }
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxPoorAdh = 5;
var idxPoorAdhBases = {
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:324
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  for (var j = idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset);
           j &lt; idxPoorAdhBases[&apos;priorAdh&apos;] + (i * idxEncOffset) + maxPoorAdh;
           j++) {
    // if the reason for poor adherence is not &apos;Toxicity/side effects&apos; or the medication name is empty,
    // then skip it (doesn&apos;t belong in this section)
    if (msgRead(j) != &quot;1-Toxicity/side effects&quot; ||
        trim(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset))) == &quot;&quot; ||
        msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)) == null) {
      continue;
    } else {
      // found med(s) to be added to this section, break loop when done (only need to add once per encounter)

      // Process the medication (or multiple medications if it&apos;s a regimen)
      var meds = processMedName(msgRead(idxPoorAdhBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
      for (var k = 0; k &lt; meds.length; k++) {

        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0] = &apos;Drug Intolerance&apos;;
        tmpText[&apos;td&apos;][1].appendChild(medContent);
        tmpText[&apos;td&apos;][2] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(4, 6) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(6, 8) +
          &quot;/&quot; + msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset)).substring(0, 4);
        // Done populating allergies/reactions text elements

        // Append populated allergies/reactions text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId + &apos;-Intol&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;59037007&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Drug Intolerance&apos;;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] =
          msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;participant&apos;][&apos;participantRole&apos;][&apos;playingEntity&apos;][&apos;name&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }
        if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Append populated allergies/reactions entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][1][&apos;section&apos;].appendChild(tmpEntry);
      }

      break;
    }
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>Process problems section</name>
            <script>var maxSideEff = 5;
var maxOtherProb = 5;
var idxProblemBases = {
  &apos;pregStat&apos;:267, &apos;edd&apos;:268, &apos;tbStat&apos;:275, &apos;tbTxStMo&apos;:276, &apos;tbTxStYr&apos;:277, &apos;tbTxNo&apos;:278, &apos;sideEff&apos;:279, &apos;othProb&apos;:284
};

// Lookup table to get codes for the known picklist values
var conditionLookup = {
  &apos;1-Peripheral neuropathy&apos;:{
    &apos;code&apos;:&apos;11060002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Disease related peripheral neuropathy&apos;
  },
  &apos;2-Rash&apos;:{
    &apos;code&apos;:&apos;2666970015&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;C/O: a rash&apos;
  },
  &apos;3-Anaemia&apos;:{
    &apos;code&apos;:&apos;271737000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Anemia&apos;
  },
  &apos;4-Pancreatitis&apos;:{
    &apos;code&apos;:&apos;75694006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pancreatitis&apos;
  },
  &apos;5-Jaundice&apos;:{
    &apos;code&apos;:&apos;18165001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Jaundice&apos;
  },
  &apos;6-Fat redistribution&apos;:{
    &apos;code&apos;:&apos;71325002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Lipodystrophy&apos;
  },
  &apos;7-Hypersensitivity&apos;:{
    &apos;code&apos;:&apos;257550005&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Hypersensitivity&apos;
  },
  &apos;8-Hepatotoxicity&apos;:{
    &apos;code&apos;:&apos;197354009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Toxic liver disease&apos;
  },
  &apos;9-CNS: dizzy, anxiety, nightmare, depression&apos;:{
    &apos;code&apos;:&apos;246557006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;CNS symptom&apos;
  },
  &apos;1-Zoster&apos;:{
    &apos;code&apos;:&apos;4740000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Herpes zoster&apos;
  },
  &apos;2-Pneumonia&apos;:{
    &apos;code&apos;:&apos;233604007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pneumonia&apos;
  },
  &apos;3-DEmentia/Enceph&apos;:{
    &apos;code&apos;:&apos;52448006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Dementia&apos;
  },
  &apos;4-Thrush (oral/vaginal)&apos;:{
    &apos;code&apos;:&apos;78048006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Candidiasis&apos;
  },
  &apos;5-Ulcers (mouth or other)&apos;:{
    &apos;code&apos;:&apos;125318001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Multiple ulcers&apos;
  },
  &apos;6-Fever&apos;:{
    &apos;code&apos;:&apos;386661006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Fever&apos;
  },
  &apos;7-Cough&apos;:{
    &apos;code&apos;:&apos;49727002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Cough&apos;
  },
  &apos;8-DB difficult breathing&apos;:{
    &apos;code&apos;:&apos;230145002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Difficulty breathing&apos;
  },
  &apos;9-IRIS Immune reconstitution Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;426202004&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Immune reconstitution syndrome&apos;
  },
  &apos;10-Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;238149007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Systemic inflammatory response syndrome&apos;
  },
  &apos;11-Weight loss&apos;:{
    &apos;code&apos;:&apos;422868009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Unexplained weight loss&apos;
  },
  &apos;12-UD urethral discharge&apos;:{
    &apos;code&apos;:&apos;9957009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Urethral discharge&apos;
  },
  &apos;13-PID pelvic inflammatory disease&apos;:{
    &apos;code&apos;:&apos;237037006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Acute pelvic inflammatory disease&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add pregnancy status, if available
  var pregStat = msgRead(idxProblemBases[&apos;pregStat&apos;] + (i * idxEncOffset));
  if (trim(pregStat) != &quot;&quot; &amp;&amp; pregStat != null &amp;&amp; (pregStat == &apos;Yes&apos; || pregStat == &apos;No&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var pregStatId = &apos;PregStat-&apos; + i;
    var pregStatCode = &apos;&apos;;
    var pregStatDisp = &apos;&apos;;
    if (pregStat == &apos;Yes&apos;) {
      pregStatCode = &apos;77386006&apos;;
      pregStatDisp = &apos;Patient currently pregnant&apos;;
    } else {
      pregStatCode = &apos;60001007&apos;;
      pregStatDisp = &apos;Not pregnant&apos;;
    }

    // populate template for EDD observation, if data exists
    var edd = msgRead(idxProblemBases[&apos;edd&apos;] + (i * idxEncOffset));
    var eddObs = &apos;&apos;;
    if (trim(edd) != &quot;&quot; &amp;&amp; edd != null) {
      var author = channelMap.get(&apos;softwareName&apos;);
      var eddId = &apos;EDD-&apos; + i;
      eddObs =
        &lt;entryRelationship typeCode=&quot;SUBJ&quot;&gt;
         &lt;observation classCode=&quot;OBS&quot; moodCode=&quot;EVN&quot;&gt;
          &lt;templateId root=&quot;2.16.840.1.113883.10.20.1.28&quot; assigningAuthorityName=&quot;CCD&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.4.13&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.1.11.2.3.1&quot;/&gt;
          &lt;statusCode code=&quot;completed&quot;/&gt;
          &lt;effectiveTime value={visitDate}/&gt;
          &lt;author typeCode=&quot;AUT&quot;&gt;
           &lt;time value={visitDate}/&gt;
           &lt;assignedAuthor&gt;
            &lt;id root=&quot;1.3.6.1.4.1.150.2474.11.2.1.1.2&quot; extension={author}/&gt;
           &lt;/assignedAuthor&gt;
          &lt;/author&gt;
          &lt;id root={idRootOid} extension={eddId}/&gt;
          &lt;code code=&quot;161714006&quot; displayName=&quot;Estimated date of delivery&quot; codeSystem=&quot;2.16.840.1.113883.6.96&quot; codeSystemName=&quot;SNOMED-CT&quot;/&gt;
          &lt;value value={edd}/&gt;
         &lt;/observation&gt;
        &lt;/entryRelationship&gt;;
      eddObs.addNamespace(xsi);
      eddObs.observation.value.@xsi::type = &quot;TS&quot;;
    }

    // Populate text elements
    var pregStatContent = &lt;content ID={pregStatId}&gt;Pregnancy Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(pregStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = pregStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + pregStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = pregStatCode;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = pregStatDisp;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    if (eddObs != &apos;&apos;)&#xd;      tmpEntry[&apos;act&apos;].appendChild(eddObs);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add TB status, if available
  var tbStat = msgRead(idxProblemBases[&apos;tbStat&apos;] + (i * idxEncOffset));
  if (trim(tbStat) != &quot;&quot; &amp;&amp; tbStat != null &amp;&amp; (tbStat == &apos;1. NO signs&apos; || tbStat == &apos;2. TB suspected&apos; || tbStat == &apos;3. TB RX&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var tbStatId = &apos;TbStat-&apos; + i;
    var tbStatDisp = &apos;&apos;;
    if (tbStat == &apos;1. NO signs&apos;) {
      tbStatDisp = &apos;No signs or symptoms suggesting TB&apos;;
    } else if (tbStat == &apos;2. TB suspected&apos;) {
      tbStatDisp = &apos;TB referral or sputum sent&apos;;
    } else {
      tbStatDisp = &apos;Currently on TB treatment&apos;;
      var tbStMo = msgRead(idxProblemBases[&apos;tbTxStMo&apos;] + (i * idxEncOffset));
      var tbStYr = msgRead(idxProblemBases[&apos;tbTxStYr&apos;] + (i * idxEncOffset));
      var tbNo = msgRead(idxProblemBases[&apos;tbTxNo&apos;] + (i * idxEncOffset));
      if (trim(tbStMo) != &quot;&quot; &amp;&amp; tbStMo != null &amp;&amp; trim(tbStYr) != &quot;&quot; &amp;&amp; tbStYr != null)
        tbStatDisp += &apos;. Treatment started on &apos; + tbStMo + &apos;/&apos; + tbStYr + &apos; (MM/YY)&apos;;
      if (trim(tbNo) != &quot;&quot; &amp;&amp; tbNo != null)
        tbStatDisp += &apos;. Treatment number &apos; + tbNo;
    }
    var tbStatValue = &lt;value&gt;{tbStatDisp}&lt;/value&gt;;
    tbStatValue.addNamespace(xsi);
    tbStatValue.@xsi::type = &quot;ST&quot;;

    // Populate text elements
    var tbStatContent = &lt;content ID={tbStatId}&gt;TB Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(tbStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = tbStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + tbStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(tbStatValue);
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over potential side effects and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset) + maxSideEff;
           j++) {
    var sideEff = msgRead(j);
    if (trim(sideEff) == &quot;&quot; || sideEff == null || trim(sideEff) == &apos;None&apos; || trim(sideEff) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(sideEff)]) {
        var sideEffDisp = conditionLookup[trim(sideEff)][&apos;displayName&apos;];
      } else {
        var sideEffDisp = trim(sideEff);
      }

      // Populate text elements
      var condId = &apos;SideEffect-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{sideEffDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(sideEff)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(sideEff)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = sideEffDisp;
      } else {
        var value = &lt;value&gt;{sideEffDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // Loop over New OIs/Other Problems and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset) + maxOtherProb;
           j++) {
    var othProb = msgRead(j);
    if (trim(othProb) == &quot;&quot; || othProb == null || trim(othProb) == &apos;None&apos; || trim(othProb) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(othProb)]) {
        var othProbDisp = conditionLookup[trim(othProb)][&apos;displayName&apos;];
      } else {
        var othProbDisp = trim(othProb).replace(/^[0-9]+-/, &apos;&apos;);
      }

      // Populate text elements
      var condId = &apos;OtherCondition-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{othProbDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(othProb)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(othProb)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = othProbDisp;
      } else {
        var value = &lt;value&gt;{othProbDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxSideEff = 5;
var maxOtherProb = 5;
var idxProblemBases = {
  &apos;pregStat&apos;:267, &apos;edd&apos;:268, &apos;tbStat&apos;:275, &apos;tbTxStMo&apos;:276, &apos;tbTxStYr&apos;:277, &apos;tbTxNo&apos;:278, &apos;sideEff&apos;:279, &apos;othProb&apos;:284
};

// Lookup table to get codes for the known picklist values
var conditionLookup = {
  &apos;1-Peripheral neuropathy&apos;:{
    &apos;code&apos;:&apos;11060002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Disease related peripheral neuropathy&apos;
  },
  &apos;2-Rash&apos;:{
    &apos;code&apos;:&apos;2666970015&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;C/O: a rash&apos;
  },
  &apos;3-Anaemia&apos;:{
    &apos;code&apos;:&apos;271737000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Anemia&apos;
  },
  &apos;4-Pancreatitis&apos;:{
    &apos;code&apos;:&apos;75694006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pancreatitis&apos;
  },
  &apos;5-Jaundice&apos;:{
    &apos;code&apos;:&apos;18165001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Jaundice&apos;
  },
  &apos;6-Fat redistribution&apos;:{
    &apos;code&apos;:&apos;71325002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Lipodystrophy&apos;
  },
  &apos;7-Hypersensitivity&apos;:{
    &apos;code&apos;:&apos;257550005&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Hypersensitivity&apos;
  },
  &apos;8-Hepatotoxicity&apos;:{
    &apos;code&apos;:&apos;197354009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Toxic liver disease&apos;
  },
  &apos;9-CNS: dizzy, anxiety, nightmare, depression&apos;:{
    &apos;code&apos;:&apos;246557006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;CNS symptom&apos;
  },
  &apos;1-Zoster&apos;:{
    &apos;code&apos;:&apos;4740000&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Herpes zoster&apos;
  },
  &apos;2-Pneumonia&apos;:{
    &apos;code&apos;:&apos;233604007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Pneumonia&apos;
  },
  &apos;3-DEmentia/Enceph&apos;:{
    &apos;code&apos;:&apos;52448006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Dementia&apos;
  },
  &apos;4-Thrush (oral/vaginal)&apos;:{
    &apos;code&apos;:&apos;78048006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Candidiasis&apos;
  },
  &apos;5-Ulcers (mouth or other)&apos;:{
    &apos;code&apos;:&apos;125318001&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Multiple ulcers&apos;
  },
  &apos;6-Fever&apos;:{
    &apos;code&apos;:&apos;386661006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Fever&apos;
  },
  &apos;7-Cough&apos;:{
    &apos;code&apos;:&apos;49727002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Cough&apos;
  },
  &apos;8-DB difficult breathing&apos;:{
    &apos;code&apos;:&apos;230145002&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Difficulty breathing&apos;
  },
  &apos;9-IRIS Immune reconstitution Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;426202004&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Immune reconstitution syndrome&apos;
  },
  &apos;10-Infammatory syndrom&apos;:{
    &apos;code&apos;:&apos;238149007&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Systemic inflammatory response syndrome&apos;
  },
  &apos;11-Weight loss&apos;:{
    &apos;code&apos;:&apos;422868009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Unexplained weight loss&apos;
  },
  &apos;12-UD urethral discharge&apos;:{
    &apos;code&apos;:&apos;9957009&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Urethral discharge&apos;
  },
  &apos;13-PID pelvic inflammatory disease&apos;:{
    &apos;code&apos;:&apos;237037006&apos;,
    &apos;codeSystemName&apos;:&apos;SNOMED-CT&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.6.96&apos;,
    &apos;displayName&apos;:&apos;Acute pelvic inflammatory disease&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add pregnancy status, if available
  var pregStat = msgRead(idxProblemBases[&apos;pregStat&apos;] + (i * idxEncOffset));
  if (trim(pregStat) != &quot;&quot; &amp;&amp; pregStat != null &amp;&amp; (pregStat == &apos;Yes&apos; || pregStat == &apos;No&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var pregStatId = &apos;PregStat-&apos; + i;
    var pregStatCode = &apos;&apos;;
    var pregStatDisp = &apos;&apos;;
    if (pregStat == &apos;Yes&apos;) {
      pregStatCode = &apos;77386006&apos;;
      pregStatDisp = &apos;Patient currently pregnant&apos;;
    } else {
      pregStatCode = &apos;60001007&apos;;
      pregStatDisp = &apos;Not pregnant&apos;;
    }

    // populate template for EDD observation, if data exists
    var edd = msgRead(idxProblemBases[&apos;edd&apos;] + (i * idxEncOffset));
    var eddObs = &apos;&apos;;
    if (trim(edd) != &quot;&quot; &amp;&amp; edd != null) {
      var author = channelMap.get(&apos;softwareName&apos;);
      var eddId = &apos;EDD-&apos; + i;
      eddObs =
        &lt;entryRelationship typeCode=&quot;SUBJ&quot;&gt;
         &lt;observation classCode=&quot;OBS&quot; moodCode=&quot;EVN&quot;&gt;
          &lt;templateId root=&quot;2.16.840.1.113883.10.20.1.28&quot; assigningAuthorityName=&quot;CCD&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.4.13&quot;/&gt;
          &lt;templateId root=&quot;1.3.6.1.4.1.19376.1.5.3.1.1.11.2.3.1&quot;/&gt;
          &lt;statusCode code=&quot;completed&quot;/&gt;
          &lt;effectiveTime value={visitDate}/&gt;
          &lt;author typeCode=&quot;AUT&quot;&gt;
           &lt;time value={visitDate}/&gt;
           &lt;assignedAuthor&gt;
            &lt;id root=&quot;1.3.6.1.4.1.150.2474.11.2.1.1.2&quot; extension={author}/&gt;
           &lt;/assignedAuthor&gt;
          &lt;/author&gt;
          &lt;id root={idRootOid} extension={eddId}/&gt;
          &lt;code code=&quot;161714006&quot; displayName=&quot;Estimated date of delivery&quot; codeSystem=&quot;2.16.840.1.113883.6.96&quot; codeSystemName=&quot;SNOMED-CT&quot;/&gt;
          &lt;value value={edd}/&gt;
         &lt;/observation&gt;
        &lt;/entryRelationship&gt;;
      eddObs.addNamespace(xsi);
      eddObs.observation.value.@xsi::type = &quot;TS&quot;;
    }

    // Populate text elements
    var pregStatContent = &lt;content ID={pregStatId}&gt;Pregnancy Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(pregStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = pregStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + pregStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + pregStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = pregStatCode;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = pregStatDisp;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    if (eddObs != &apos;&apos;)&#xd;      tmpEntry[&apos;act&apos;].appendChild(eddObs);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add TB status, if available
  var tbStat = msgRead(idxProblemBases[&apos;tbStat&apos;] + (i * idxEncOffset));
  if (trim(tbStat) != &quot;&quot; &amp;&amp; tbStat != null &amp;&amp; (tbStat == &apos;1. NO signs&apos; || tbStat == &apos;2. TB suspected&apos; || tbStat == &apos;3. TB RX&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var tbStatId = &apos;TbStat-&apos; + i;
    var tbStatDisp = &apos;&apos;;
    if (tbStat == &apos;1. NO signs&apos;) {
      tbStatDisp = &apos;No signs or symptoms suggesting TB&apos;;
    } else if (tbStat == &apos;2. TB suspected&apos;) {
      tbStatDisp = &apos;TB referral or sputum sent&apos;;
    } else {
      tbStatDisp = &apos;Currently on TB treatment&apos;;
      var tbStMo = msgRead(idxProblemBases[&apos;tbTxStMo&apos;] + (i * idxEncOffset));
      var tbStYr = msgRead(idxProblemBases[&apos;tbTxStYr&apos;] + (i * idxEncOffset));
      var tbNo = msgRead(idxProblemBases[&apos;tbTxNo&apos;] + (i * idxEncOffset));
      if (trim(tbStMo) != &quot;&quot; &amp;&amp; tbStMo != null &amp;&amp; trim(tbStYr) != &quot;&quot; &amp;&amp; tbStYr != null)
        tbStatDisp += &apos;. Treatment started on &apos; + tbStMo + &apos;/&apos; + tbStYr + &apos; (MM/YY)&apos;;
      if (trim(tbNo) != &quot;&quot; &amp;&amp; tbNo != null)
        tbStatDisp += &apos;. Treatment number &apos; + tbNo;
    }
    var tbStatValue = &lt;value&gt;{tbStatDisp}&lt;/value&gt;;
    tbStatValue.addNamespace(xsi);
    tbStatValue.@xsi::type = &quot;ST&quot;;

    // Populate text elements
    var tbStatContent = &lt;content ID={tbStatId}&gt;TB Status&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(tbStatContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = tbStatDisp;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-1&apos;;
    tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + tbStatId + &apos;-2&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + tbStatId;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(tbStatValue);
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over potential side effects and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;sideEff&apos;] + (i * idxEncOffset) + maxSideEff;
           j++) {
    var sideEff = msgRead(j);
    if (trim(sideEff) == &quot;&quot; || sideEff == null || trim(sideEff) == &apos;None&apos; || trim(sideEff) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(sideEff)]) {
        var sideEffDisp = conditionLookup[trim(sideEff)][&apos;displayName&apos;];
      } else {
        var sideEffDisp = trim(sideEff);
      }

      // Populate text elements
      var condId = &apos;SideEffect-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{sideEffDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(sideEff)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(sideEff)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(sideEff)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = sideEffDisp;
      } else {
        var value = &lt;value&gt;{sideEffDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // Loop over New OIs/Other Problems and add any found as new, active conditions
  for (var j = idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset);
           j &lt; idxProblemBases[&apos;othProb&apos;] + (i * idxEncOffset) + maxOtherProb;
           j++) {
    var othProb = msgRead(j);
    if (trim(othProb) == &quot;&quot; || othProb == null || trim(othProb) == &apos;None&apos; || trim(othProb) == &apos;Missing&apos;) {
      // if empty or null, skip
      continue;
    } else {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Use lookup table name if it was a value picked from the list
      if (conditionLookup[trim(othProb)]) {
        var othProbDisp = conditionLookup[trim(othProb)][&apos;displayName&apos;];
      } else {
        var othProbDisp = trim(othProb).replace(/^[0-9]+-/, &apos;&apos;);
      }

      // Populate text elements
      var condId = &apos;OtherCondition-&apos; + i + &apos;-&apos; + j;
      var condContent = &lt;content ID={condId}&gt;{othProbDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(condContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &apos;Active&apos;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + condId + &apos;-&apos; + j;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;64572001&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Condition&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + condId;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      if (conditionLookup[trim(othProb)]) {
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = conditionLookup[trim(othProb)][&apos;code&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = conditionLookup[trim(othProb)][&apos;codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = othProbDisp;
      } else {
        var value = &lt;value&gt;{othProbDisp}&lt;/value&gt;;
        value.addNamespace(xsi);
        value.@xsi::type = &quot;ST&quot;;
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;value&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;].appendChild(value);
      }
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;55561003&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;entryRelationship&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;Active&apos;;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;high value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime&gt;&lt;high nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@value&apos;];
      tmpEntry[&apos;act&apos;][&apos;effectiveTime&apos;][&apos;high&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }
      if (tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;act&apos;][&apos;entryRelationship&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][2][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>Process medications section</name>
            <script>var maxPriorPoorAdh = 5;
var maxCtxPoorAdh = 5;
var maxOtherMed = 8;
var idxRxBases = {
  &apos;ctxDisp&apos;:290, &apos;ctxAdh&apos;:291, &apos;ctxPoorAdh&apos;:292, &apos;inhDisp&apos;:297, &apos;othMedName&apos;:298, &apos;othMedDose&apos;:299, &apos;othMedFreq&apos;:300,
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:323, &apos;priorAdhReason&apos;:324, &apos;arvName&apos;:329, &apos;arvDose&apos;:330, &apos;arvDays&apos;:331
};
var idxOthMedOffset = 3;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add cotrimoxazole, if dispensed
  var ctxDisp = msgRead(idxRxBases[&apos;ctxDisp&apos;] + (i * idxEncOffset));
  if (trim(ctxDisp) != &quot;&quot; &amp;&amp; ctxDisp != null &amp;&amp; ctxDisp == &apos;Yes&apos;) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var ctxAdhDisp = &quot;&quot;; 
    var ctxAdh = msgRead(idxRxBases[&apos;ctxAdh&apos;] + (i * idxEncOffset));
    if (trim(ctxAdh) != &quot;&quot; &amp;&amp; ctxAdh != null &amp;&amp; ctxAdh != &apos;Missing&apos;) {
      ctxAdhDisp += &quot;Adherence: &quot; + ctxAdh;
    }
    var ctxPoorAdhDisp = &quot;&quot;;
    for (var j = idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset);
             j &lt; idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset) + maxCtxPoorAdh;
             j++) {
    var ctxPoorAdh = msgRead(j);
      if (trim(ctxPoorAdh) != &quot;&quot; &amp;&amp; ctxPoorAdh != null &amp;&amp; ctxPoorAdh != &apos;Missing&apos;) {
        ctxPoorAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? ctxPoorAdh : &quot;, &quot; + ctxPoorAdh;
      }      
    }
    ctxAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + ctxPoorAdhDisp;

    // Populate text elements
    var medId = &apos;CTX-&apos; + i;
    var ctxAdhId = &apos;CTXAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Cotrimoxazole&lt;/content&gt;;
    var ctxAdhContent = &lt;content ID={ctxAdhId}&gt;{ctxAdhDisp}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(ctxAdhContent);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;374234&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Sulfamethoxazole / Trimethoprim Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (ctxAdhDisp != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add isoniazid, if dispensed
  var inhDisp = msgRead(idxRxBases[&apos;inhDisp&apos;] + (i * idxEncOffset));
  if (trim(inhDisp) != &quot;&quot; &amp;&amp; inhDisp != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var medId = &apos;INH-&apos; + i;
    var inhAdhId = &apos;INHAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Isoniazid&lt;/content&gt;;
    var inhAdhId = &lt;content ID={inhAdhId}&gt;{trim(inhDisp)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(inhAdhId);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;370716&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Isoniazid Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (trim(inhDisp) != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over other medications
  for (var j = 0; j &lt; maxOtherMed * idxOthMedOffset; j = j + idxOthMedOffset) {
    var meds = processMedName(msgRead(idxRxBases[&apos;othMedName&apos;] + (i * idxEncOffset) + j), 1);
    for (var k = 0; k &lt; meds.length; k++) {
      if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0].appendChild(medContent);
        tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
        tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
        // Done populating text elements

        // Append populated text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Remove the comment template, if not used
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

        // Append populated entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
      }
    }
  }

  // prior ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      var adhDisp = &quot;&quot;; 
      var adh = msgRead(idxRxBases[&apos;priorAdh&apos;] + (i * idxEncOffset));
      if (trim(adh) != &quot;&quot; &amp;&amp; adh != null &amp;&amp; adh != &apos;Missing&apos;) {
        adhDisp += &quot;Adherence: &quot; + ctxAdh;
      }
      var poorAdhDisp = &quot;&quot;;
      for (var j = idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset);
               j &lt; idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset) + maxPriorPoorAdh;
               j++) {
      var poorAdh = msgRead(j);
        if (trim(poorAdh) != &quot;&quot; &amp;&amp; poorAdh != null &amp;&amp; poorAdh != &apos;Missing&apos;) {
          poorAdhDisp += poorAdhDisp.length &lt; 1 ? poorAdh : &quot;, &quot; + poorAdh;
        }      
      }
      adhDisp += poorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + poorAdhDisp;

      // Populate text elements
      var medId = &apos;PriorMed-&apos; + i + &apos;-&apos; + k;
      var adhId = &apos;PriorMedAdh-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      var adhContent = &lt;content ID={adhId}&gt;{adhDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4].appendChild(adhContent);
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      if (adhDisp != &apos;&apos;) {
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
      }
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // current ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;arvName&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Populate text elements
      var medId = &apos;ArvMed-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxPriorPoorAdh = 5;
var maxCtxPoorAdh = 5;
var maxOtherMed = 8;
var idxRxBases = {
  &apos;ctxDisp&apos;:290, &apos;ctxAdh&apos;:291, &apos;ctxPoorAdh&apos;:292, &apos;inhDisp&apos;:297, &apos;othMedName&apos;:298, &apos;othMedDose&apos;:299, &apos;othMedFreq&apos;:300,
  &apos;priorMed&apos;:322, &apos;priorAdh&apos;:323, &apos;priorAdhReason&apos;:324, &apos;arvName&apos;:329, &apos;arvDose&apos;:330, &apos;arvDays&apos;:331
};
var idxOthMedOffset = 3;

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add cotrimoxazole, if dispensed
  var ctxDisp = msgRead(idxRxBases[&apos;ctxDisp&apos;] + (i * idxEncOffset));
  if (trim(ctxDisp) != &quot;&quot; &amp;&amp; ctxDisp != null &amp;&amp; ctxDisp == &apos;Yes&apos;) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    var ctxAdhDisp = &quot;&quot;; 
    var ctxAdh = msgRead(idxRxBases[&apos;ctxAdh&apos;] + (i * idxEncOffset));
    if (trim(ctxAdh) != &quot;&quot; &amp;&amp; ctxAdh != null &amp;&amp; ctxAdh != &apos;Missing&apos;) {
      ctxAdhDisp += &quot;Adherence: &quot; + ctxAdh;
    }
    var ctxPoorAdhDisp = &quot;&quot;;
    for (var j = idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset);
             j &lt; idxRxBases[&apos;ctxPoorAdh&apos;] + (i * idxEncOffset) + maxCtxPoorAdh;
             j++) {
    var ctxPoorAdh = msgRead(j);
      if (trim(ctxPoorAdh) != &quot;&quot; &amp;&amp; ctxPoorAdh != null &amp;&amp; ctxPoorAdh != &apos;Missing&apos;) {
        ctxPoorAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? ctxPoorAdh : &quot;, &quot; + ctxPoorAdh;
      }      
    }
    ctxAdhDisp += ctxPoorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + ctxPoorAdhDisp;

    // Populate text elements
    var medId = &apos;CTX-&apos; + i;
    var ctxAdhId = &apos;CTXAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Cotrimoxazole&lt;/content&gt;;
    var ctxAdhContent = &lt;content ID={ctxAdhId}&gt;{ctxAdhDisp}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(ctxAdhContent);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;374234&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Sulfamethoxazole / Trimethoprim Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (ctxAdhDisp != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + ctxAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add isoniazid, if dispensed
  var inhDisp = msgRead(idxRxBases[&apos;inhDisp&apos;] + (i * idxEncOffset));
  if (trim(inhDisp) != &quot;&quot; &amp;&amp; inhDisp != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var medId = &apos;INH-&apos; + i;
    var inhAdhId = &apos;INHAdh-&apos; + i;
    var medContent = &lt;content ID={medId}&gt;Isoniazid&lt;/content&gt;;
    var inhAdhId = &lt;content ID={inhAdhId}&gt;{trim(inhDisp)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(medContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
    tmpText[&apos;td&apos;][4].appendChild(inhAdhId);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;370716&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.88&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;RxNorm&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Isoniazid Oral Tablet&apos;;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
    if (trim(inhDisp) != &apos;&apos;) {
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + inhAdhId;
    }
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
  }

  // Loop over other medications
  for (var j = 0; j &lt; maxOtherMed * idxOthMedOffset; j = j + idxOthMedOffset) {
    var meds = processMedName(msgRead(idxRxBases[&apos;othMedName&apos;] + (i * idxEncOffset) + j), 1);
    for (var k = 0; k &lt; meds.length; k++) {
      if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
        var tmpText = textTmpl.copy();
        var tmpEntry = entryTmpl.copy();

        // Populate text elements
        var medId = &apos;Med-&apos; + i + &apos;-&apos; + j + &apos;-&apos; + k;
        var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
        tmpText[&apos;td&apos;][0].appendChild(medContent);
        tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
        tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
        tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
        // Done populating text elements

        // Append populated text node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

        // Populate entry elements
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
          msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
          msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

        // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

        // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
          tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
        }

        // Remove the comment template, if not used
        if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
          delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

        // Append populated entry node
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
      }
    }
  }

  // prior ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;priorMed&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      var adhDisp = &quot;&quot;; 
      var adh = msgRead(idxRxBases[&apos;priorAdh&apos;] + (i * idxEncOffset));
      if (trim(adh) != &quot;&quot; &amp;&amp; adh != null &amp;&amp; adh != &apos;Missing&apos;) {
        adhDisp += &quot;Adherence: &quot; + ctxAdh;
      }
      var poorAdhDisp = &quot;&quot;;
      for (var j = idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset);
               j &lt; idxRxBases[&apos;priorAdhReason&apos;] + (i * idxEncOffset) + maxPriorPoorAdh;
               j++) {
      var poorAdh = msgRead(j);
        if (trim(poorAdh) != &quot;&quot; &amp;&amp; poorAdh != null &amp;&amp; poorAdh != &apos;Missing&apos;) {
          poorAdhDisp += poorAdhDisp.length &lt; 1 ? poorAdh : &quot;, &quot; + poorAdh;
        }      
      }
      adhDisp += poorAdhDisp.length &lt; 1 ? &quot;&quot; : &quot;. Reasons: &quot; + poorAdhDisp;

      // Populate text elements
      var medId = &apos;PriorMed-&apos; + i + &apos;-&apos; + k;
      var adhId = &apos;PriorMedAdh-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      var adhContent = &lt;content ID={adhId}&gt;{adhDisp}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4].appendChild(adhContent);
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      if (adhDisp != &apos;&apos;) {
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + adhId;
      }
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }

  // current ARVs/regimen
  var meds = processMedName(msgRead(idxRxBases[&apos;arvName&apos;] + (i * idxEncOffset)));
  for (var k = 0; k &lt; meds.length; k++) {
    if (meds[k][&apos;displayName&apos;] != &quot;&quot; &amp;&amp; meds[k][&apos;displayName&apos;] != null) {
      var tmpText = textTmpl.copy();
      var tmpEntry = entryTmpl.copy();

      // Populate text elements
      var medId = &apos;ArvMed-&apos; + i + &apos;-&apos; + k;
      var medContent = &lt;content ID={medId}&gt;{meds[k][&apos;displayName&apos;]}&lt;/content&gt;;
      tmpText[&apos;td&apos;][0].appendChild(medContent);
      tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
      tmpText[&apos;td&apos;][2] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][3] = &quot;N/A&quot;;
      tmpText[&apos;td&apos;][4] = &quot;N/A&quot;;
      // Done populating text elements

      // Append populated text node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

      // Populate entry elements
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@code&apos;] = meds[k][&apos;code&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = meds[k][&apos;codeSystemOid&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = meds[k][&apos;codeSystemName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;@displayName&apos;] = meds[k][&apos;displayName&apos;];
      tmpEntry[&apos;substanceAdministration&apos;][&apos;consumable&apos;][&apos;manufacturedProduct&apos;][&apos;manufacturedMaterial&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + medId;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
      tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
        msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][2][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
        tmpEntry[&apos;substanceAdministration&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Remove the comment template, if not used
      if (tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
        delete tmpEntry[&apos;substanceAdministration&apos;][&apos;entryRelationship&apos;][1];

      // Append populated entry node
      tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][3][&apos;section&apos;].appendChild(tmpEntry);
    }
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>Process vital signs section</name>
            <script>var idxVitalBases = {
  &apos;weight&apos;:263, &apos;bp&apos;:264, &apos;height&apos;:265, &apos;bmi&apos;:266
};

var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var vitalId = &apos;Vital-&apos; + i;
  var haveHt = false;
  var haveWt = false;
  var haveBmi = false;
  var tmpEntry = entryTmpl.copy();

  // add height, if provided
  var val = msgRead(idxVitalBases[&apos;height&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalHt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(vitalContent);

    haveHt = true;
  }

  // add weight, if provided
  var val = msgRead(idxVitalBases[&apos;weight&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalWt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(vitalContent);

    haveWt = true;
  }

  // add BMI, if provided
  var val = msgRead(idxVitalBases[&apos;bmi&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalBMI-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(vitalContent);

    haveBmi = true;
  }

  // add the rest, if there were any vitals for this encounter
  if (haveHt || haveWt || haveBmi) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + vitalId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveBmi) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveWt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveHt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var idxVitalBases = {
  &apos;weight&apos;:263, &apos;bp&apos;:264, &apos;height&apos;:265, &apos;bmi&apos;:266
};

var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var vitalId = &apos;Vital-&apos; + i;
  var haveHt = false;
  var haveWt = false;
  var haveBmi = false;
  var tmpEntry = entryTmpl.copy();

  // add height, if provided
  var val = msgRead(idxVitalBases[&apos;height&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalHt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(vitalContent);

    haveHt = true;
  }

  // add weight, if provided
  var val = msgRead(idxVitalBases[&apos;weight&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalWt-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(vitalContent);

    haveWt = true;
  }

  // add BMI, if provided
  var val = msgRead(idxVitalBases[&apos;bmi&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;VitalBMI-&apos; + i;
    var vitalContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(vitalContent);

    haveBmi = true;
  }

  // add the rest, if there were any vitals for this encounter
  if (haveHt || haveWt || haveBmi) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + vitalId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveBmi) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveWt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveHt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][4][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>Process diagnostic results section</name>
            <script>var maxOtherLab = 2;
var idxLabBases = {
  &apos;cd4Cnt&apos;:332, &apos;cd4Perc&apos;:333, &apos;hgb&apos;:334, &apos;rpr&apos;:335, &apos;tb&apos;:336, &apos;othLabName&apos;:337, &apos;othLabRes&apos;:338
};
var idxLabOffset = 2;

var othTextTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
var compTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5];
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var labId = &apos;Lab-&apos; + i;
  var haveCd4Cnt = false;
  var haveCd4Perc = false;
  var haveHgb = false;
  var haveRpr = false;
  var haveTb = false;
  var haveOther = false;
  var tmpEntry = entryTmpl.copy();

  // add CD4, if provided
  var cd4Disp = &quot;&quot;;
  var txtId = &apos;LabCd4-&apos; + i;
  var val = msgRead(idxLabBases[&apos;cd4Cnt&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp = trim(val);

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Cnt = true;
  }

  // Check for percentage value
  val = msgRead(idxLabBases[&apos;cd4Perc&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp += (cd4Disp.length &lt; 1 ? &apos;&apos; : &apos; &apos;) + &apos;(&apos; + trim(val) + &apos;%)&apos;;

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Perc = true;
  }

  if (haveCd4Cnt || haveCd4Perc) {
    // Populate text elements
    var labContent = &lt;td&gt;{cd4Disp}&lt;/td&gt;;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(labContent);
  }

  // add Hgb, if provided
  var val = msgRead(idxLabBases[&apos;hgb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabHgb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(labContent);

    haveHgb = true;
  }

  // add Rpr, if provided
  var val = msgRead(idxLabBases[&apos;rpr&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabRpr-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(labContent);

    haveRpr = true;
  }

  // add Tb, if provided
  var val = msgRead(idxLabBases[&apos;tb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabTb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3].appendChild(labContent);

    haveTb = true;
  }

  // Loop over other lab tests, if any
  var initOthRow = 4;
  for (var j = 0; j &lt; maxOtherLab * idxLabOffset; j = j + idxLabOffset) {
    var name = msgRead(idxLabBases[&apos;othLabName&apos;] + (i * idxEncOffset) + j);
    var result = msgRead(idxLabBases[&apos;othLabRes&apos;] + (i * idxEncOffset) + j);
    if (trim(result) != &quot;&quot; &amp;&amp; result != null) {
      var tmpText = othTextTmpl.copy();
      var tmpComp = compTmpl.copy();

      // need to see if we&apos;ve already got a text row with the same lab name, also count number of columns if row already exists
      var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
      var othRow = rowCnt;
      if (trim(name) == &quot;&quot; || name == null) {
        name = &apos;N/A (&apos; + (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset))) + &apos;-&apos; + (j == 0 ? &apos;1&apos; : (j == idxLabOffset ? &apos;2&apos; : &apos;&apos;)) + &apos;)&apos;;
      } else {
        for (var k = initOthRow; k &lt; rowCnt; k++) {
          if (tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][k][&apos;th&apos;].toString().toLowerCase() == &apos;other: &apos; + trim(name).toLowerCase()) {
            othRow = k;
            break;
          }
        }
      }

      // need to backfill any previous columns with empty cells, if we&apos;re adding a new row
      if (othRow == rowCnt) {
        var emptyCol = &lt;td/&gt;;
        for (var q = 0; q &lt; i; q++) {
          tmpText.appendChild(emptyCol);
        }
      }

      // Populate text elements
      var txtId = &apos;&apos;;
      var resultCol = &lt;td&gt;{trim(result)}&lt;/td&gt;;
      tmpText.appendChild(resultCol);
      if (othRow == rowCnt) {
        txtId = &apos;LabOth-&apos; + i + &apos;-&apos; + j;
        var labContent = &lt;content ID={txtId}&gt;{&apos;Other: &apos; + trim(name)}&lt;/content&gt;;
        tmpText[&apos;th&apos;].appendChild(labContent);
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);
      } else {
        txtId = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow][&apos;th&apos;][&apos;content&apos;][&apos;@ID&apos;].toString();
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow].appendChild(resultCol);
      }
      // Done populating text elements

      // Populate entry elements
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = labCodeSystemOid;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = labCodeSystemName;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
      tmpComp[&apos;observation&apos;][&apos;value&apos;] = trim(result);

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
        tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated component node
      tmpEntry[&apos;organizer&apos;].appendChild(tmpComp);

      haveOther = true;
    }
  }

  // add the rest, if there were any labs for this encounter
  if (haveCd4Cnt || haveCd4Perc || haveHgb || haveRpr || haveTb || haveOther) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + labId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveTb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4];
    }
    if (!haveRpr) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3];
    }
    if (!haveHgb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveCd4Perc) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveCd4Cnt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxOtherLab = 2;
var idxLabBases = {
  &apos;cd4Cnt&apos;:332, &apos;cd4Perc&apos;:333, &apos;hgb&apos;:334, &apos;rpr&apos;:335, &apos;tb&apos;:336, &apos;othLabName&apos;:337, &apos;othLabRes&apos;:338
};
var idxLabOffset = 2;

var othTextTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
var compTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;][&apos;organizer&apos;][&apos;component&apos;][5];
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][1];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3][&apos;td&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][4];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  var labId = &apos;Lab-&apos; + i;
  var haveCd4Cnt = false;
  var haveCd4Perc = false;
  var haveHgb = false;
  var haveRpr = false;
  var haveTb = false;
  var haveOther = false;
  var tmpEntry = entryTmpl.copy();

  // add CD4, if provided
  var cd4Disp = &quot;&quot;;
  var txtId = &apos;LabCd4-&apos; + i;
  var val = msgRead(idxLabBases[&apos;cd4Cnt&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp = trim(val);

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Cnt = true;
  }

  // Check for percentage value
  val = msgRead(idxLabBases[&apos;cd4Perc&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Postpone populating text elements until we know if we have the percentage value as well
    cd4Disp += (cd4Disp.length &lt; 1 ? &apos;&apos; : &apos; &apos;) + &apos;(&apos; + trim(val) + &apos;%)&apos;;

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    haveCd4Perc = true;
  }

  if (haveCd4Cnt || haveCd4Perc) {
    // Populate text elements
    var labContent = &lt;td&gt;{cd4Disp}&lt;/td&gt;;
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][0].appendChild(labContent);
  }

  // add Hgb, if provided
  var val = msgRead(idxLabBases[&apos;hgb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabHgb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][1].appendChild(labContent);

    haveHgb = true;
  }

  // add Rpr, if provided
  var val = msgRead(idxLabBases[&apos;rpr&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabRpr-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][2].appendChild(labContent);

    haveRpr = true;
  }

  // add Tb, if provided
  var val = msgRead(idxLabBases[&apos;tb&apos;] + (i * idxEncOffset));
  if (trim(val) != &quot;&quot; &amp;&amp; val != null) {
    // Populate text elements
    var txtId = &apos;LabTb-&apos; + i;
    var labContent = &lt;td&gt;{trim(val)}&lt;/td&gt;;
    // Done populating text elements

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;value&apos;] = trim(val);

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4][&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][3].appendChild(labContent);

    haveTb = true;
  }

  // Loop over other lab tests, if any
  var initOthRow = 4;
  for (var j = 0; j &lt; maxOtherLab * idxLabOffset; j = j + idxLabOffset) {
    var name = msgRead(idxLabBases[&apos;othLabName&apos;] + (i * idxEncOffset) + j);
    var result = msgRead(idxLabBases[&apos;othLabRes&apos;] + (i * idxEncOffset) + j);
    if (trim(result) != &quot;&quot; &amp;&amp; result != null) {
      var tmpText = othTextTmpl.copy();
      var tmpComp = compTmpl.copy();

      // need to see if we&apos;ve already got a text row with the same lab name, also count number of columns if row already exists
      var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
      var othRow = rowCnt;
      if (trim(name) == &quot;&quot; || name == null) {
        name = &apos;N/A (&apos; + (msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset))) + &apos;-&apos; + (j == 0 ? &apos;1&apos; : (j == idxLabOffset ? &apos;2&apos; : &apos;&apos;)) + &apos;)&apos;;
      } else {
        for (var k = initOthRow; k &lt; rowCnt; k++) {
          if (tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][k][&apos;th&apos;].toString().toLowerCase() == &apos;other: &apos; + trim(name).toLowerCase()) {
            othRow = k;
            break;
          }
        }
      }

      // need to backfill any previous columns with empty cells, if we&apos;re adding a new row
      if (othRow == rowCnt) {
        var emptyCol = &lt;td/&gt;;
        for (var q = 0; q &lt; i; q++) {
          tmpText.appendChild(emptyCol);
        }
      }

      // Populate text elements
      var txtId = &apos;&apos;;
      var resultCol = &lt;td&gt;{trim(result)}&lt;/td&gt;;
      tmpText.appendChild(resultCol);
      if (othRow == rowCnt) {
        txtId = &apos;LabOth-&apos; + i + &apos;-&apos; + j;
        var labContent = &lt;content ID={txtId}&gt;{&apos;Other: &apos; + trim(name)}&lt;/content&gt;;
        tmpText[&apos;th&apos;].appendChild(labContent);
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);
      } else {
        txtId = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow][&apos;th&apos;][&apos;content&apos;][&apos;@ID&apos;].toString();
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][othRow].appendChild(resultCol);
      }
      // Done populating text elements

      // Populate entry elements
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
      tmpComp[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
        msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = labCodeSystemOid;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = labCodeSystemName;
      tmpComp[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = trim(name);
      tmpComp[&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + txtId;
      tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
      tmpComp[&apos;observation&apos;][&apos;value&apos;] = trim(result);

      // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

      // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
      if (tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
        delete tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
        tmpComp[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
      }

      // Append populated component node
      tmpEntry[&apos;organizer&apos;].appendChild(tmpComp);

      haveOther = true;
    }
  }

  // add the rest, if there were any labs for this encounter
  if (haveCd4Cnt || haveCd4Perc || haveHgb || haveRpr || haveTb || haveOther) {
    // Populate text elements
    var headerText = &lt;th&gt;{visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4)}&lt;/th&gt;;
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;].appendChild(headerText);
    // Done populating text elements

    // Make sure all rows have the right number of columns, add an empty column if there was no data for a particular row
    var headerCols = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;].length() - 1;
    var rowCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].length();
    var emptyCol = &lt;td/&gt;;
    for (var t = 0; t &lt; rowCnt; t++) {
      var colCnt = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t][&apos;td&apos;].length();
      for (var s = 0; s &lt; headerCols - colCnt; s++) {
        tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][t].appendChild(emptyCol);
      }
    }

    // Populate entry elements
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + labId;
    tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;entryRelationship&apos;][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@value&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove any unpopulated component templates
    if (!haveTb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][4];
    }
    if (!haveRpr) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][3];
    }
    if (!haveHgb) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][2];
    }
    if (!haveCd4Perc) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][1];
    }
    if (!haveCd4Cnt) {
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][0];
    }

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][5][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>Process family history section</name>
            <script>var maxFamMembers = 8;
var idxFamilyBases = {
  &apos;rel&apos;:110, &apos;age&apos;:111, &apos;hivStat&apos;:112, &apos;inCare&apos;:113, &apos;treatNo&apos;:114
};
var idxFamOffset = 10;

var relationLookup = {
  &apos;Father&apos;:{
    &apos;code&apos;:&apos;FTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Father&apos;
  },
  &apos;Mother&apos;:{
    &apos;code&apos;:&apos;MTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Mother&apos;
  },
  &apos;Wife&apos;:{
    &apos;code&apos;:&apos;WIFE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Wife&apos;
  },
  &apos;Husband&apos;:{
    &apos;code&apos;:&apos;HUSB&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Husband&apos;
  },
  &apos;Daughter&apos;:{
    &apos;code&apos;:&apos;DAU&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Daughter&apos;
  },
  &apos;Son&apos;:{
    &apos;code&apos;:&apos;SON&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Son&apos;
  },
  &apos;Sister&apos;:{
    &apos;code&apos;:&apos;SIS&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Sister&apos;
  },
  &apos;Brother&apos;:{
    &apos;code&apos;:&apos;BRO&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Brother&apos;
  },
  &apos;Cousin&apos;:{
    &apos;code&apos;:&apos;COUSN&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Cousin&apos;
  },
  &apos;Nephew&apos;:{
    &apos;code&apos;:&apos;NEPHEW&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Nephew&apos;
  },
  &apos;Niece&apos;:{
    &apos;code&apos;:&apos;NIECE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Niece&apos;
  },
  &apos;Aunt&apos;:{
    &apos;code&apos;:&apos;AUNT&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Aunt&apos;
  },
  &apos;Uncle&apos;:{
    &apos;code&apos;:&apos;UNCLE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Uncle&apos;
  },
  &apos;Workmate&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Employer&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Other&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;paragraph&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxFamMembers; i++) {
  var status = msgRead(idxFamilyBases[&apos;hivStat&apos;] + (i * idxFamOffset));
  if (trim(status) != &quot;&quot; &amp;&amp; status != null &amp;&amp; (status == &apos;Positive&apos; || status == &apos;Negative&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var statId = &apos;HIVStatus-&apos; + i;
    var rel = msgRead(idxFamilyBases[&apos;rel&apos;] + (i * idxFamOffset));
    var age = msgRead(idxFamilyBases[&apos;age&apos;] + (i * idxFamOffset));
    var inCare = msgRead(idxFamilyBases[&apos;inCare&apos;] + (i * idxFamOffset));
    var treatNo = msgRead(idxFamilyBases[&apos;treatNo&apos;] + (i * idxFamOffset));
    var textContent = &lt;content ID={statId}&gt;HIV Status&lt;/content&gt;;
    var careId = &apos;HIVCare-&apos; + i;
    var careTreatDisp = &apos;&apos;;
    if (trim(inCare) != &apos;&apos; &amp;&amp; inCare != null) {
      careTreatDisp += inCare == &apos;Yes&apos; || inCare == &apos;No&apos; ? trim(inCare) : &apos;&apos;;
    }
    if (trim(treatNo) != &apos;&apos; &amp;&amp; treatNo != null) {
      careTreatDisp += &apos; (Treatment #&apos; + trim(treatNo) + &apos;)&apos;;
    }
    var careContent = &lt;content ID={careId}&gt;{careTreatDisp}&lt;/content&gt;;
    tmpText[&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][0].appendChild(textContent);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][0] = trim(status);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][1] = trim(age) != &quot;&quot; &amp;&amp; age != null ? trim(age) : &apos;N/A&apos;;
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][2].appendChild(careContent);
    tmpText[&apos;paragraph&apos;] = trim(rel) != &quot;&quot; &amp;&amp; rel != null ? trim(rel) : &apos;N/A&apos;;
    // Done populating text elements

    // Append populated text elements
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;paragraph&apos;]);
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;table&apos;]);&#xd;
    // Populate entry elements
    var relLookup = &apos;&apos;;
    if (trim(rel) != &quot;&quot; &amp;&amp; rel != null) {
      relLookup = relationLookup[trim(rel)];
    } else {
      relLookup = relationLookup[&apos;Other (specify)&apos;];
    }
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] = relLookup[&apos;code&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;] = relLookup[&apos;displayName&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    if (status == &quot;Positive&quot;) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165816005&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV positive&apos;;
    } else {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165815009&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV negative&apos;;
    }
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    if (trim(age) != &quot;&quot; &amp;&amp; age != null) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(age);
    }

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;translation code=&quot;&quot; .../&gt; =&gt; &lt;translation nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove age template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1];

    // Remove the comment template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var maxFamMembers = 8;
var idxFamilyBases = {
  &apos;rel&apos;:110, &apos;age&apos;:111, &apos;hivStat&apos;:112, &apos;inCare&apos;:113, &apos;treatNo&apos;:114
};
var idxFamOffset = 10;

var relationLookup = {
  &apos;Father&apos;:{
    &apos;code&apos;:&apos;FTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Father&apos;
  },
  &apos;Mother&apos;:{
    &apos;code&apos;:&apos;MTH&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Mother&apos;
  },
  &apos;Wife&apos;:{
    &apos;code&apos;:&apos;WIFE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Wife&apos;
  },
  &apos;Husband&apos;:{
    &apos;code&apos;:&apos;HUSB&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Husband&apos;
  },
  &apos;Daughter&apos;:{
    &apos;code&apos;:&apos;DAU&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Daughter&apos;
  },
  &apos;Son&apos;:{
    &apos;code&apos;:&apos;SON&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Son&apos;
  },
  &apos;Sister&apos;:{
    &apos;code&apos;:&apos;SIS&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Sister&apos;
  },
  &apos;Brother&apos;:{
    &apos;code&apos;:&apos;BRO&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Brother&apos;
  },
  &apos;Cousin&apos;:{
    &apos;code&apos;:&apos;COUSN&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Cousin&apos;
  },
  &apos;Nephew&apos;:{
    &apos;code&apos;:&apos;NEPHEW&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Nephew&apos;
  },
  &apos;Niece&apos;:{
    &apos;code&apos;:&apos;NIECE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Niece&apos;
  },
  &apos;Aunt&apos;:{
    &apos;code&apos;:&apos;AUNT&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Aunt&apos;
  },
  &apos;Uncle&apos;:{
    &apos;code&apos;:&apos;UNCLE&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Uncle&apos;
  },
  &apos;Workmate&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Employer&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  },
  &apos;Other&apos;:{
    &apos;code&apos;:&apos;FRND&apos;,
    &apos;codeSystemName&apos;:&apos;HL7 FamilyMember&apos;,
    &apos;codeSystemOid&apos;:&apos;2.16.840.1.113883.5.111&apos;,
    &apos;displayName&apos;:&apos;Unrelated Friend&apos;
  }
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;paragraph&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxFamMembers; i++) {
  var status = msgRead(idxFamilyBases[&apos;hivStat&apos;] + (i * idxFamOffset));
  if (trim(status) != &quot;&quot; &amp;&amp; status != null &amp;&amp; (status == &apos;Positive&apos; || status == &apos;Negative&apos;)) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var statId = &apos;HIVStatus-&apos; + i;
    var rel = msgRead(idxFamilyBases[&apos;rel&apos;] + (i * idxFamOffset));
    var age = msgRead(idxFamilyBases[&apos;age&apos;] + (i * idxFamOffset));
    var inCare = msgRead(idxFamilyBases[&apos;inCare&apos;] + (i * idxFamOffset));
    var treatNo = msgRead(idxFamilyBases[&apos;treatNo&apos;] + (i * idxFamOffset));
    var textContent = &lt;content ID={statId}&gt;HIV Status&lt;/content&gt;;
    var careId = &apos;HIVCare-&apos; + i;
    var careTreatDisp = &apos;&apos;;
    if (trim(inCare) != &apos;&apos; &amp;&amp; inCare != null) {
      careTreatDisp += inCare == &apos;Yes&apos; || inCare == &apos;No&apos; ? trim(inCare) : &apos;&apos;;
    }
    if (trim(treatNo) != &apos;&apos; &amp;&amp; treatNo != null) {
      careTreatDisp += &apos; (Treatment #&apos; + trim(treatNo) + &apos;)&apos;;
    }
    var careContent = &lt;content ID={careId}&gt;{careTreatDisp}&lt;/content&gt;;
    tmpText[&apos;table&apos;][&apos;thead&apos;][&apos;tr&apos;][&apos;th&apos;][0].appendChild(textContent);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][0] = trim(status);
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][1] = trim(age) != &quot;&quot; &amp;&amp; age != null ? trim(age) : &apos;N/A&apos;;
    tmpText[&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;][&apos;td&apos;][2].appendChild(careContent);
    tmpText[&apos;paragraph&apos;] = trim(rel) != &quot;&quot; &amp;&amp; rel != null ? trim(rel) : &apos;N/A&apos;;
    // Done populating text elements

    // Append populated text elements
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;paragraph&apos;]);
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;][&apos;text&apos;].appendChild(tmpText[&apos;table&apos;]);&#xd;
    // Populate entry elements
    var relLookup = &apos;&apos;;
    if (trim(rel) != &quot;&quot; &amp;&amp; rel != null) {
      relLookup = relationLookup[trim(rel)];
    } else {
      relLookup = relationLookup[&apos;Other (specify)&apos;];
    }
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] = relLookup[&apos;code&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;] = relLookup[&apos;displayName&apos;];
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;] = trim(rel);
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + statId;
    if (status == &quot;Positive&quot;) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165816005&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV positive&apos;;
    } else {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@code&apos;] = &apos;165815009&apos;;
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@displayName&apos;] = &apos;HIV negative&apos;;
    }
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;value&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + careId;
    if (trim(age) != &quot;&quot; &amp;&amp; age != null) {
      tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] = trim(age);
    }

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;translation code=&quot;&quot; .../&gt; =&gt; &lt;translation nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;organizer&apos;][&apos;subject&apos;][&apos;relatedSubject&apos;][&apos;code&apos;][&apos;translation&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove age template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;observation&apos;][&apos;value&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][1];

    // Remove the comment template, if not used
    if (tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;organizer&apos;][&apos;component&apos;][&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][6][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>Process plan of care section</name>
            <script>var idxPlanBases = {
  &apos;referredTo&apos;:341, &apos;nextAppt&apos;:347
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add next appointment date, if given
  var nextAppt = msgRead(idxPlanBases[&apos;nextAppt&apos;] + (i * idxEncOffset));
  if (trim(nextAppt) != &quot;&quot; &amp;&amp; nextAppt != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;NextAppt-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Next Appointment&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = nextAppt.substring(4, 6) + &quot;/&quot; + nextAppt.substring(6, 8) + &quot;/&quot; + nextAppt.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = nextAppt;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;390840006&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Next appointment&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add referral, if given
  var refer = msgRead(idxPlanBases[&apos;referredTo&apos;] + (i * idxEncOffset));
  if (trim(refer) != &quot;&quot; &amp;&amp; refer != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;Referral-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Referral to: {trim(refer)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;183677001&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Referred - other care&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var idxPlanBases = {
  &apos;referredTo&apos;:341, &apos;nextAppt&apos;:347
};

var textTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;].copy();
var entryTmpl = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;].copy();
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;][&apos;tr&apos;];
delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;entry&apos;];
for (var i = 0; i &lt; maxEnc; i++) {
  var visitDate = msgRead(idxEncBases[&apos;date&apos;] + (i * idxEncOffset));
  if (visitDate == &apos;&apos; || visitDate == null) continue;

  // add next appointment date, if given
  var nextAppt = msgRead(idxPlanBases[&apos;nextAppt&apos;] + (i * idxEncOffset));
  if (trim(nextAppt) != &quot;&quot; &amp;&amp; nextAppt != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;NextAppt-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Next Appointment&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = nextAppt.substring(4, 6) + &quot;/&quot; + nextAppt.substring(6, 8) + &quot;/&quot; + nextAppt.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = nextAppt;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;390840006&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Next appointment&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }

  // add referral, if given
  var refer = msgRead(idxPlanBases[&apos;referredTo&apos;] + (i * idxEncOffset));
  if (trim(refer) != &quot;&quot; &amp;&amp; refer != null) {
    var tmpText = textTmpl.copy();
    var tmpEntry = entryTmpl.copy();

    // Populate text elements
    var planId = &apos;Referral-&apos; + i;
    var planContent = &lt;content ID={planId}&gt;Referral to: {trim(refer)}&lt;/content&gt;;
    tmpText[&apos;td&apos;][0].appendChild(planContent);
    tmpText[&apos;td&apos;][1] = visitDate.substring(4, 6) + &quot;/&quot; + visitDate.substring(6, 8) + &quot;/&quot; + visitDate.substring(0, 4);
    // Done populating text elements

    // Append populated text node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;][&apos;text&apos;][&apos;table&apos;][&apos;tbody&apos;].appendChild(tmpText);

    // Populate entry elements
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset)) + &apos;-&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] = visitDate;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] = &apos;183677001&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;] = &apos;2.16.840.1.113883.6.96&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;] = &apos;SNOMED-CT&apos;;
    tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;] = &apos;Referred - other care&apos;;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;code&apos;][&apos;originalText&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] = &apos;#&apos; + planId;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@root&apos;] = idRootOid;
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;id&apos;][&apos;@extension&apos;] =
      msgRead(idxEncBases[&apos;eid&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));
    tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;] =
      msgRead(idxEncBases[&apos;type&apos;] + (i * idxEncOffset));

    // If there are any remaining required values that are empty, replace with nullFlavor=&quot;UNK&quot;:

    // &lt;code code=&quot;&quot; .../&gt; =&gt; &lt;code nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@code&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@displayName&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystem&apos;];
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@codeSystemName&apos;];
      tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][1][&apos;act&apos;][&apos;code&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // &lt;effectiveTime&gt;&lt;low value=&quot;&quot;/&gt; =&gt; &lt;effectiveTime nullFlavor=&quot;UNK&quot;/&gt;
    if (tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;][&apos;@value&apos;] == &quot;&quot;) {
      delete tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;low&apos;];
      tmpEntry[&apos;observation&apos;][&apos;effectiveTime&apos;][&apos;@nullFlavor&apos;] = &quot;UNK&quot;;
    }

    // Remove the comment template, if not used
    if (tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0][&apos;act&apos;][&apos;text&apos;][&apos;reference&apos;][&apos;@value&apos;] == &apos;&apos;)
      delete tmpEntry[&apos;observation&apos;][&apos;entryRelationship&apos;][0];

    // Append populated entry node
    tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][7][&apos;section&apos;].appendChild(tmpEntry);
  }
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>Process social history section (nothing to put in this section yet)</name>
            <script></script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string></string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>Post process</name>
            <script>// If no data was available for a particular section (other than encounters), nuke the whole section
for (var i = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;].length(); i &gt; 0; i--) {
  var z = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1][&apos;section&apos;].elements(&apos;entry&apos;).length();
  if (z &lt; 1) {
    delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1];
  }
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>// If no data was available for a particular section (other than encounters), nuke the whole section
for (var i = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;].length(); i &gt; 0; i--) {
  var z = tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1][&apos;section&apos;].elements(&apos;entry&apos;).length();
  if (z &lt; 1) {
    delete tmp[&apos;component&apos;][&apos;structuredBody&apos;][&apos;component&apos;][i - 1];
  }
}</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">RmFjaWxpdHkgTmFtZQlGYWNpbGl0eSBDb2RlCUZhY2lsaXR5IENvdW50eS9EaXN0cmljdAlGYWNp
bGl0eSBTdGF0ZS9Qcm92aW5jZQlTb3VyY2UgU3lzdGVtIFVuaXF1ZSBDb2RlCUZhY2lsaXR5IFVu
aXF1ZSBQYXRpZW50IE51bWJlcglQYXRpZW50IEZhbWlseSBOYW1lMQlQYXRpZW50IEZhbWlseSBO
YW1lMglQYXRpZW50IEdpdmVuIE5hbWUxCVBhdGllbnQgR2l2ZW4gTmFtZTIJUGF0aWVudCBHaXZl
biBOYW1lMwlQYXRpZW50IERhdGUgb2YgQmlydGgJUGF0aWVudCBHZW5kZXIJUGF0aWVudCBTdHJl
ZXQgQWRkcmVzczEJUGF0aWVudCBTdHJlZXQgQWRkcmVzczIJUGF0aWVudCBDaXR5L1N1Yi1sb2Nh
dGlvbi9Db21tdW5lCVBhdGllbnQgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50CVBhdGll
bnQgU3RhdGUvUHJvdmluY2UvRGlzdHJpY3QvRGVwYXJ0ZW1lbnQJUGF0aWVudCBBZGRyZXNzIExh
bmRtYXJrL0RpcmVjdGlvbnMJUGF0aWVudCBUZWxlcGhvbmUxCVBhdGllbnQgVGVsZXBob25lMglQ
YXRpZW50IFRlbGVwaG9uZTMJUGF0aWVudCBNYXJpdGFsIFN0YXR1cwlQYXRpZW50IE5lYXJlc3Qg
SGVhbHRoIENlbnRlcglUcmVhdG1lbnQgU3VwcG9ydGVyMSBGYW1pbHkgTmFtZTEJVHJlYXRtZW50
IFN1cHBvcnRlcjEgRmFtaWx5IE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIxIEdpdmVuIE5hbWUx
CVRyZWF0bWVudCBTdXBwb3J0ZXIxIEdpdmVuIE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIxIEdp
dmVuIE5hbWUzCVRyZWF0bWVudCBTdXBwb3J0ZXIxIFJlbGF0aW9uc2hpcAlUcmVhdG1lbnQgU3Vw
cG9ydGVyMSBTdHJlZXQgQWRkcmVzczEJVHJlYXRtZW50IFN1cHBvcnRlcjEgU3RyZWV0IEFkZHJl
c3MyCVRyZWF0bWVudCBTdXBwb3J0ZXIxIENpdHkvU3ViLWxvY2F0aW9uL0NvbW11bmUJVHJlYXRt
ZW50IFN1cHBvcnRlcjEgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50CVRyZWF0bWVudCBT
dXBwb3J0ZXIxIFN0YXRlL1Byb3ZpbmNlL0Rpc3RyaWN0L0RlcGFydGVtZW50CVRyZWF0bWVudCBT
dXBwb3J0ZXIxIFRlbGVwaG9uZQlUcmVhdG1lbnQgU3VwcG9ydGVyMiBGYW1pbHkgTmFtZTEJVHJl
YXRtZW50IFN1cHBvcnRlcjIgRmFtaWx5IE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIyIEdpdmVu
IE5hbWUxCVRyZWF0bWVudCBTdXBwb3J0ZXIyIEdpdmVuIE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0
ZXIyIEdpdmVuIE5hbWUzCVRyZWF0bWVudCBTdXBwb3J0ZXIyIFJlbGF0aW9uc2hpcAlUcmVhdG1l
bnQgU3VwcG9ydGVyMiBTdHJlZXQgQWRkcmVzczEJVHJlYXRtZW50IFN1cHBvcnRlcjIgU3RyZWV0
IEFkZHJlc3MyCVRyZWF0bWVudCBTdXBwb3J0ZXIyIENpdHkvU3ViLWxvY2F0aW9uL0NvbW11bmUJ
VHJlYXRtZW50IFN1cHBvcnRlcjIgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50CVRyZWF0
bWVudCBTdXBwb3J0ZXIyIFN0YXRlL1Byb3ZpbmNlL0Rpc3RyaWN0L0RlcGFydGVtZW50CVRyZWF0
bWVudCBTdXBwb3J0ZXIyIFRlbGVwaG9uZQlUcmVhdG1lbnQgU3VwcG9ydGVyMyBGYW1pbHkgTmFt
ZTEJVHJlYXRtZW50IFN1cHBvcnRlcjMgRmFtaWx5IE5hbWUyCVRyZWF0bWVudCBTdXBwb3J0ZXIz
IEdpdmVuIE5hbWUxCVRyZWF0bWVudCBTdXBwb3J0ZXIzIEdpdmVuIE5hbWUyCVRyZWF0bWVudCBT
dXBwb3J0ZXIzIEdpdmVuIE5hbWUzCVRyZWF0bWVudCBTdXBwb3J0ZXIzIFJlbGF0aW9uc2hpcAlU
cmVhdG1lbnQgU3VwcG9ydGVyMyBTdHJlZXQgQWRkcmVzczEJVHJlYXRtZW50IFN1cHBvcnRlcjMg
U3RyZWV0IEFkZHJlc3MyCVRyZWF0bWVudCBTdXBwb3J0ZXIzIENpdHkvU3ViLWxvY2F0aW9uL0Nv
bW11bmUJVHJlYXRtZW50IFN1cHBvcnRlcjMgQ291bnR5L0xvY2F0aW9uL0Fycm9uZGlzc2VtZW50
CVRyZWF0bWVudCBTdXBwb3J0ZXIzIFN0YXRlL1Byb3ZpbmNlL0Rpc3RyaWN0L0RlcGFydGVtZW50
CVRyZWF0bWVudCBTdXBwb3J0ZXIzIFRlbGVwaG9uZQlQYXRpZW50IFNvdXJjZSBFbnRyeSBQb2lu
dAlQYXRpZW50IFNvdXJjZSBUcmFuc2ZlciBJbiBEYXRlCVBhdGllbnQgU291cmNlIFRyYW5zZmVy
IEluIEZhY2lsaXR5CVBhdGllbnQgU291cmNlIFRyYW5zZmVyIEluIEZyb20gU3RhdGUvUHJvdmlu
Y2UvRGlzdHJpY3QvRGVwYXJ0ZW1lbnQJUGF0aWVudCBTb3VyY2UgVHJhbnNmZXIgSW4gQVJUIFN0
YXJ0IERhdGUJQ29uZmlybWVkIEhJViBQb3NpdGl2ZSBEYXRlCUNvbmZpcm1lZCBISVYgUG9zaXRp
dmUgRmFjaWxpdHkJRW5yb2xsbWVudCBJbiBISVYgQ2FyZSBEYXRlCVdITyBTdGFnZSBhdCBFbnJv
bGxtZW50IEluIEhJViBDYXJlCUFSVCBIaXN0b3J5IEtub3duIEFsbGVyZ3kxCUFSVCBIaXN0b3J5
IEtub3duIEFsbGVyZ3kyCUFSVCBIaXN0b3J5IEtub3duIEFsbGVyZ3kzCUFSVCBIaXN0b3J5IEtu
b3duIEFsbGVyZ3k0CUFSVCBIaXN0b3J5IEtub3duIEFsbGVyZ3k1CUFSVCBIaXN0b3J5IE1lZGlj
YXRpb24vUmVnaW1lbjEJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuMSBEYXRlIExhc3Qg
VXNlZAlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW4xIFB1cnBvc2UJQVJUIEhpc3Rvcnkg
TWVkaWNhdGlvbi9SZWdpbWVuMglBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW4yIERhdGUg
TGFzdCBVc2VkCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjIgUHVycG9zZQlBUlQgSGlz
dG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW4zCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjMg
RGF0ZSBMYXN0IFVzZWQJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuMyBQdXJwb3NlCUFS
VCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjQJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdp
bWVuNCBEYXRlIExhc3QgVXNlZAlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW40IFB1cnBv
c2UJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuNQlBUlQgSGlzdG9yeSBNZWRpY2F0aW9u
L1JlZ2ltZW41IERhdGUgTGFzdCBVc2VkCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjUg
UHVycG9zZQlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW42CUFSVCBIaXN0b3J5IE1lZGlj
YXRpb24vUmVnaW1lbjYgRGF0ZSBMYXN0IFVzZWQJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdp
bWVuNiBQdXJwb3NlCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjcJQVJUIEhpc3Rvcnkg
TWVkaWNhdGlvbi9SZWdpbWVuNyBEYXRlIExhc3QgVXNlZAlBUlQgSGlzdG9yeSBNZWRpY2F0aW9u
L1JlZ2ltZW43IFB1cnBvc2UJQVJUIEhpc3RvcnkgTWVkaWNhdGlvbi9SZWdpbWVuOAlBUlQgSGlz
dG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW44IERhdGUgTGFzdCBVc2VkCUFSVCBIaXN0b3J5IE1lZGlj
YXRpb24vUmVnaW1lbjggUHVycG9zZQlBUlQgSGlzdG9yeSBNZWRpY2F0aW9uL1JlZ2ltZW45CUFS
VCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjkgRGF0ZSBMYXN0IFVzZWQJQVJUIEhpc3Rvcnkg
TWVkaWNhdGlvbi9SZWdpbWVuOSBQdXJwb3NlCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1l
bjEwCUFSVCBIaXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjEwIERhdGUgTGFzdCBVc2VkCUFSVCBI
aXN0b3J5IE1lZGljYXRpb24vUmVnaW1lbjEwIFB1cnBvc2UJRmFtaWx5IE1lbWJlcjEgRmFtaWx5
IE5hbWUxCUZhbWlseSBNZW1iZXIxIEZhbWlseSBOYW1lMglGYW1pbHkgTWVtYmVyMSBHaXZlbiBO
YW1lMQlGYW1pbHkgTWVtYmVyMSBHaXZlbiBOYW1lMglGYW1pbHkgTWVtYmVyMSBHaXZlbiBOYW1l
MwlGYW1pbHkgTWVtYmVyMSBSZWxhdGlvbnNoaXAJRmFtaWx5IE1lbWJlcjEgQWdlCUZhbWlseSBN
ZW1iZXIxIEhJViBTdGF0dXMJRmFtaWx5IE1lbWJlcjEgSW4gSElWIENhcmUJRmFtaWx5IE1lbWJl
cjEgVW5pcXVlIFBhdGllbnQgTnVtYmVyCUZhbWlseSBNZW1iZXIyIEZhbWlseSBOYW1lMQlGYW1p
bHkgTWVtYmVyMiBGYW1pbHkgTmFtZTIJRmFtaWx5IE1lbWJlcjIgR2l2ZW4gTmFtZTEJRmFtaWx5
IE1lbWJlcjIgR2l2ZW4gTmFtZTIJRmFtaWx5IE1lbWJlcjIgR2l2ZW4gTmFtZTMJRmFtaWx5IE1l
bWJlcjIgUmVsYXRpb25zaGlwCUZhbWlseSBNZW1iZXIyIEFnZQlGYW1pbHkgTWVtYmVyMiBISVYg
U3RhdHVzCUZhbWlseSBNZW1iZXIyIEluIEhJViBDYXJlCUZhbWlseSBNZW1iZXIyIFVuaXF1ZSBQ
YXRpZW50IE51bWJlcglGYW1pbHkgTWVtYmVyMyBGYW1pbHkgTmFtZTEJRmFtaWx5IE1lbWJlcjMg
RmFtaWx5IE5hbWUyCUZhbWlseSBNZW1iZXIzIEdpdmVuIE5hbWUxCUZhbWlseSBNZW1iZXIzIEdp
dmVuIE5hbWUyCUZhbWlseSBNZW1iZXIzIEdpdmVuIE5hbWUzCUZhbWlseSBNZW1iZXIzIFJlbGF0
aW9uc2hpcAlGYW1pbHkgTWVtYmVyMyBBZ2UJRmFtaWx5IE1lbWJlcjMgSElWIFN0YXR1cwlGYW1p
bHkgTWVtYmVyMyBJbiBISVYgQ2FyZQlGYW1pbHkgTWVtYmVyMyBVbmlxdWUgUGF0aWVudCBOdW1i
ZXIJRmFtaWx5IE1lbWJlcjQgRmFtaWx5IE5hbWUxCUZhbWlseSBNZW1iZXI0IEZhbWlseSBOYW1l
MglGYW1pbHkgTWVtYmVyNCBHaXZlbiBOYW1lMQlGYW1pbHkgTWVtYmVyNCBHaXZlbiBOYW1lMglG
YW1pbHkgTWVtYmVyNCBHaXZlbiBOYW1lMwlGYW1pbHkgTWVtYmVyNCBSZWxhdGlvbnNoaXAJRmFt
aWx5IE1lbWJlcjQgQWdlCUZhbWlseSBNZW1iZXI0IEhJViBTdGF0dXMJRmFtaWx5IE1lbWJlcjQg
SW4gSElWIENhcmUJRmFtaWx5IE1lbWJlcjQgVW5pcXVlIFBhdGllbnQgTnVtYmVyCUZhbWlseSBN
ZW1iZXI1IEZhbWlseSBOYW1lMQlGYW1pbHkgTWVtYmVyNSBGYW1pbHkgTmFtZTIJRmFtaWx5IE1l
bWJlcjUgR2l2ZW4gTmFtZTEJRmFtaWx5IE1lbWJlcjUgR2l2ZW4gTmFtZTIJRmFtaWx5IE1lbWJl
cjUgR2l2ZW4gTmFtZTMJRmFtaWx5IE1lbWJlcjUgUmVsYXRpb25zaGlwCUZhbWlseSBNZW1iZXI1
IEFnZQlGYW1pbHkgTWVtYmVyNSBISVYgU3RhdHVzCUZhbWlseSBNZW1iZXI1IEluIEhJViBDYXJl
CUZhbWlseSBNZW1iZXI1IFVuaXF1ZSBQYXRpZW50IE51bWJlcglGYW1pbHkgTWVtYmVyNiBGYW1p
bHkgTmFtZTEJRmFtaWx5IE1lbWJlcjYgRmFtaWx5IE5hbWUyCUZhbWlseSBNZW1iZXI2IEdpdmVu
IE5hbWUxCUZhbWlseSBNZW1iZXI2IEdpdmVuIE5hbWUyCUZhbWlseSBNZW1iZXI2IEdpdmVuIE5h
bWUzCUZhbWlseSBNZW1iZXI2IFJlbGF0aW9uc2hpcAlGYW1pbHkgTWVtYmVyNiBBZ2UJRmFtaWx5
IE1lbWJlcjYgSElWIFN0YXR1cwlGYW1pbHkgTWVtYmVyNiBJbiBISVYgQ2FyZQlGYW1pbHkgTWVt
YmVyNiBVbmlxdWUgUGF0aWVudCBOdW1iZXIJRmFtaWx5IE1lbWJlcjcgRmFtaWx5IE5hbWUxCUZh
bWlseSBNZW1iZXI3IEZhbWlseSBOYW1lMglGYW1pbHkgTWVtYmVyNyBHaXZlbiBOYW1lMQlGYW1p
bHkgTWVtYmVyNyBHaXZlbiBOYW1lMglGYW1pbHkgTWVtYmVyNyBHaXZlbiBOYW1lMwlGYW1pbHkg
TWVtYmVyNyBSZWxhdGlvbnNoaXAJRmFtaWx5IE1lbWJlcjcgQWdlCUZhbWlseSBNZW1iZXI3IEhJ
ViBTdGF0dXMJRmFtaWx5IE1lbWJlcjcgSW4gSElWIENhcmUJRmFtaWx5IE1lbWJlcjcgVW5pcXVl
IFBhdGllbnQgTnVtYmVyCUZhbWlseSBNZW1iZXI4IEZhbWlseSBOYW1lMQlGYW1pbHkgTWVtYmVy
OCBGYW1pbHkgTmFtZTIJRmFtaWx5IE1lbWJlcjggR2l2ZW4gTmFtZTEJRmFtaWx5IE1lbWJlcjgg
R2l2ZW4gTmFtZTIJRmFtaWx5IE1lbWJlcjggR2l2ZW4gTmFtZTMJRmFtaWx5IE1lbWJlcjggUmVs
YXRpb25zaGlwCUZhbWlseSBNZW1iZXI4IEFnZQlGYW1pbHkgTWVtYmVyOCBISVYgU3RhdHVzCUZh
bWlseSBNZW1iZXI4IEluIEhJViBDYXJlCUZhbWlseSBNZW1iZXI4IFVuaXF1ZSBQYXRpZW50IE51
bWJlcglNZWRpY2FsIEVsaWdpYmlsaXR5IGZvciBBUlYgVGhlcmFweSBEYXRlCU1lZGljYWwgRWxp
Z2liaWxpdHkgZm9yIEFSViBUaGVyYXB5IER1ZSBUbyBDbGluaWNhbCBXSE8gU3RhZ2UJTWVkaWNh
bCBFbGlnaWJpbGl0eSBmb3IgQVJWIFRoZXJhcHkgRHVlIFRvIFRMQwlNZWRpY2FsIEVsaWdpYmls
aXR5IGZvciBBUlYgVGhlcmFweSBEdWUgVG8gQ0Q0IENvdW50CU1lZGljYWwgRWxpZ2liaWxpdHkg
Zm9yIEFSViBUaGVyYXB5IER1ZSBUbyBDRDQgUGVyY2VudGFnZQlDdXJyZW50IEFSViBUaGVyYXB5
IFN0YXJ0IERhdGUJQ3VycmVudCBBUlYgVGhlcmFweSBTdGFydCBDb2hvcnQJQ3VycmVudCBBUlYg
VGhlcmFweSBTdGFydCBSZWdpbWVuCUN1cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQgV2VpZ2h0CUN1
cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQgSGVpZ2h0CUN1cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQg
Qk1JIChBZHVsdHMpCUN1cnJlbnQgQVJWIFRoZXJhcHkgU3RhcnQgV0hPIFN0YWdlCUZpcnN0IExp
bmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24xIERhdGUJRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1
YnN0aXR1dGlvbjEgUmVnaW1lbglGaXJzdCBMaW5lIEFSViBTd2l0Y2gvU3Vic3RpdHV0aW9uMSBS
ZWFzb24xCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24xIFJlYXNvbjIJRmlyc3Qg
TGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgUmVhc29uMwlGaXJzdCBMaW5lIEFSViBTd2l0
Y2gvU3Vic3RpdHV0aW9uMiBEYXRlCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24y
IFJlZ2ltZW4JRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVhc29uMQlGaXJz
dCBMaW5lIEFSViBTd2l0Y2gvU3Vic3RpdHV0aW9uMiBSZWFzb24yCUZpcnN0IExpbmUgQVJWIFN3
aXRjaC9TdWJzdGl0dXRpb24yIFJlYXNvbjMJRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1
dGlvbjMgRGF0ZQlGaXJzdCBMaW5lIEFSViBTd2l0Y2gvU3Vic3RpdHV0aW9uMyBSZWdpbWVuCUZp
cnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb24zIFJlYXNvbjEJRmlyc3QgTGluZSBBUlYg
U3dpdGNoL1N1YnN0aXR1dGlvbjMgUmVhc29uMglGaXJzdCBMaW5lIEFSViBTd2l0Y2gvU3Vic3Rp
dHV0aW9uMyBSZWFzb24zCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJzdGl0dXRpb240IERhdGUJ
Rmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVnaW1lbglGaXJzdCBMaW5lIEFS
ViBTd2l0Y2gvU3Vic3RpdHV0aW9uNCBSZWFzb24xCUZpcnN0IExpbmUgQVJWIFN3aXRjaC9TdWJz
dGl0dXRpb240IFJlYXNvbjIJRmlyc3QgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVh
c29uMwlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgRGF0ZQlTZWNvbmQgTGlu
ZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNo
L1N1YnN0aXR1dGlvbjEgUmVhc29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlv
bjEgUmVhc29uMglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjEgUmVhc29uMwlT
ZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgRGF0ZQlTZWNvbmQgTGluZSBBUlYg
U3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0
aXR1dGlvbjIgUmVhc29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVh
c29uMglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjIgUmVhc29uMwlTZWNvbmQg
TGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjMgRGF0ZQlTZWNvbmQgTGluZSBBUlYgU3dpdGNo
L1N1YnN0aXR1dGlvbjMgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlv
bjMgUmVhc29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjMgUmVhc29uMglT
ZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjMgUmVhc29uMwlTZWNvbmQgTGluZSBB
UlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgRGF0ZQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0
aXR1dGlvbjQgUmVnaW1lbglTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVh
c29uMQlTZWNvbmQgTGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVhc29uMglTZWNvbmQg
TGluZSBBUlYgU3dpdGNoL1N1YnN0aXR1dGlvbjQgUmVhc29uMwlQYXRpZW50IFRyYW5zZmVyIERh
dGUJUGF0aWVudCBUcmFuc2ZlciBGYWNpbGl0eQlQYXRpZW50IERlYXRoIERhdGUJQVJUIFRyZWF0
bWVudCBJbnRlcnJ1cHRpb24xIERhdGUJQVJUIFRyZWF0bWVudCBJbnRlcnJ1cHRpb24xIFJlYXNv
bglBUlQgVHJlYXRtZW50IEludGVycnVwdGlvbjEgUmVzdGFydCBEYXRlCUFSVCBUcmVhdG1lbnQg
SW50ZXJydXB0aW9uMiBEYXRlCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0aW9uMiBSZWFzb24JQVJU
IFRyZWF0bWVudCBJbnRlcnJ1cHRpb24yIFJlc3RhcnQgRGF0ZQlBUlQgVHJlYXRtZW50IEludGVy
cnVwdGlvbjMgRGF0ZQlBUlQgVHJlYXRtZW50IEludGVycnVwdGlvbjMgUmVhc29uCUFSVCBUcmVh
dG1lbnQgSW50ZXJydXB0aW9uMyBSZXN0YXJ0IERhdGUJQVJUIFRyZWF0bWVudCBJbnRlcnJ1cHRp
b240IERhdGUJQVJUIFRyZWF0bWVudCBJbnRlcnJ1cHRpb240IFJlYXNvbglBUlQgVHJlYXRtZW50
IEludGVycnVwdGlvbjQgUmVzdGFydCBEYXRlCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0aW9uNSBE
YXRlCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0aW9uNSBSZWFzb24JQVJUIFRyZWF0bWVudCBJbnRl
cnJ1cHRpb241IFJlc3RhcnQgRGF0ZQlBUlQgVHJlYXRtZW50IEludGVycnVwdGlvbjYgRGF0ZQlB
UlQgVHJlYXRtZW50IEludGVycnVwdGlvbjYgUmVhc29uCUFSVCBUcmVhdG1lbnQgSW50ZXJydXB0
aW9uNiBSZXN0YXJ0IERhdGUJRW5jb3VudGVyMSBVbmlxdWUgSWQJRW5jb3VudGVyMSBEYXRlCUVu
Y291bnRlcjEgVHlwZQlFbmNvdW50ZXIxIE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVy
MSBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjEgV2VpZ2h0CUVuY291bnRl
cjEgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyMSBIZWlnaHQJRW5jb3VudGVyMSBCTUkJRW5jb3Vu
dGVyMSBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjEgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUg
RGF0ZQlFbmNvdW50ZXIxIEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMSBGYW1pbHkg
UGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXIxIEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291
bnRlcjEgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyMSBGYW1pbHkgUGxhbm5pbmcg
TWV0aG9kNAlFbmNvdW50ZXIxIEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjEgVHVi
ZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXIxIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQg
TW9udGgJRW5jb3VudGVyMSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3Vu
dGVyMSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIxIFBvdGVudGlhbCBT
aWRlIEVmZmVjdDEJRW5jb3VudGVyMSBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjEg
UG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXIxIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJ
RW5jb3VudGVyMSBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjEgTmV3IE9wcG9ydHVu
aXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0
aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjEgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjEgV0hPIFN0YWdlCUVuY291bnRlcjEgQ290cmlt
b3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyMSBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNv
dW50ZXIxIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVy
MSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjEgQ290
cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIxIENvdHJpbW94
YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMSBDb3RyaW1veGF6b2xl
IFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjEgSU5IIERpc3BlbnNlZAlFbmNv
dW50ZXIxIE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9u
IERvc2FnZTEJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVy
MSBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBEb3Nh
Z2UyCUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjEgT3Ro
ZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlF
bmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXIxIE90aGVyIE1l
ZGljYXRpb24gTmFtZTQJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3Vu
dGVyMSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0
aW9uIE5hbWU1CUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjEg
T3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBO
YW1lNglFbmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIxIE90aGVy
IE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXIxIE90aGVyIE1lZGljYXRpb24gTmFtZTcJ
RW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMSBPdGhlciBNZWRp
Y2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyMSBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291
bnRlcjEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjEgT3RoZXIgTWVkaWNhdGlv
biBGcmVxdWVuY3k4CUVuY291bnRlcjEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1l
CUVuY291bnRlcjEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3Vu
dGVyMSBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVu
Y2UxCUVuY291bnRlcjEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBv
b3IgQWRoZXJlbmNlMglFbmNvdW50ZXIxIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVh
c29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyMSBQcmlvciBBUlYgTWVkaWNhdGlvbi9S
ZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjEgUHJpb3IgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXIxIEFS
ViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIxIEFSViBNZWRpY2F0aW9uL1JlZ2lt
ZW4gRG9zYWdlCUVuY291bnRlcjEgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5
cwlFbmNvdW50ZXIxIENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjEgQ0Q0IExhYiBSZXN1
bHQgUGVyY2VudGFnZQlFbmNvdW50ZXIxIEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNv
dW50ZXIxIFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIxIFR1
YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjEgT3RoZXIgTGFiMSBOYW1lCUVu
Y291bnRlcjEgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyMSBPdGhlciBMYWIyIE5hbWUJRW5j
b3VudGVyMSBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXIxIFBhdGllbnQgUmVmZXJyZWQgVG8J
RW5jb3VudGVyMSBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIxIERpc2Nsb3N1cmUg
Q29kZQlFbmNvdW50ZXIxIFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMSBDb25kb21zIERp
c3BlbnNlZAlFbmNvdW50ZXIxIFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5p
bmcJRW5jb3VudGVyMSBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMSBDbGluaWNpYW4g
SW5pdGlhbHMJRW5jb3VudGVyMiBVbmlxdWUgSWQJRW5jb3VudGVyMiBEYXRlCUVuY291bnRlcjIg
VHlwZQlFbmNvdW50ZXIyIE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyMiBNb250aHMg
U2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjIgV2VpZ2h0CUVuY291bnRlcjIgQmxvb2Qg
UHJlc3N1cmUJRW5jb3VudGVyMiBIZWlnaHQJRW5jb3VudGVyMiBCTUkJRW5jb3VudGVyMiBQcmVn
bmFuY3kgU3RhdHVzCUVuY291bnRlcjIgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNv
dW50ZXIyIEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMiBGYW1pbHkgUGxhbm5pbmcg
TWV0aG9kMQlFbmNvdW50ZXIyIEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjIgRmFt
aWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlF
bmNvdW50ZXIyIEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjIgVHViZXJjdWxvc2lz
IFN0YXR1cwlFbmNvdW50ZXIyIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5j
b3VudGVyMiBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyMiBUdWJl
cmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIyIFBvdGVudGlhbCBTaWRlIEVmZmVj
dDEJRW5jb3VudGVyMiBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjIgUG90ZW50aWFs
IFNpZGUgRWZmZWN0MwlFbmNvdW50ZXIyIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVy
MiBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9u
L090aGVyIFByb2JsZW0zCUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW00CUVuY291bnRlcjIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVy
IFByb2JsZW01CUVuY291bnRlcjIgV0hPIFN0YWdlCUVuY291bnRlcjIgQ290cmltb3hhem9sZSBE
aXNwZW5zZWQJRW5jb3VudGVyMiBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXIyIENv
dHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMiBDb3RyaW1v
eGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjIgQ290cmltb3hhem9s
ZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIyIENvdHJpbW94YXpvbGUgUmVh
c29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMiBDb3RyaW1veGF6b2xlIFJlYXNvbiBG
b3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjIgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXIyIE90
aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJ
RW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyMiBPdGhlciBN
ZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291
bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjIgT3RoZXIgTWVkaWNh
dGlvbiBOYW1lMwlFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXIy
IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRpb24g
TmFtZTQJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyMiBPdGhl
ciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU1
CUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjIgT3RoZXIgTWVk
aWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNv
dW50ZXIyIE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRp
b24gRnJlcXVlbmN5NglFbmNvdW50ZXIyIE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVy
MiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIEZy
ZXF1ZW5jeTcJRW5jb3VudGVyMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjIgT3Ro
ZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVu
Y3k4CUVuY291bnRlcjIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRl
cjIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyMiBQcmlv
ciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291
bnRlcjIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJl
bmNlMglFbmNvdW50ZXIyIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTMJRW5jb3VudGVyMiBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJl
YXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjIgUHJpb3IgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXIyIEFSViBNZWRpY2F0
aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIyIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdl
CUVuY291bnRlcjIgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50
ZXIyIENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjIgQ0Q0IExhYiBSZXN1bHQgUGVyY2Vu
dGFnZQlFbmNvdW50ZXIyIEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXIyIFJh
cGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIyIFR1YmVyY3Vsc2lz
IFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjIgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjIg
T3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyMiBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyMiBP
dGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXIyIFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVy
MiBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIyIERpc2Nsb3N1cmUgQ29kZQlFbmNv
dW50ZXIyIFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMiBDb25kb21zIERpc3BlbnNlZAlF
bmNvdW50ZXIyIFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3Vu
dGVyMiBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMiBDbGluaWNpYW4gSW5pdGlhbHMJ
RW5jb3VudGVyMyBVbmlxdWUgSWQJRW5jb3VudGVyMyBEYXRlCUVuY291bnRlcjMgVHlwZQlFbmNv
dW50ZXIzIE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyMyBNb250aHMgU2luY2UgQ3Vy
cmVudCBSZWdpbWVuCUVuY291bnRlcjMgV2VpZ2h0CUVuY291bnRlcjMgQmxvb2QgUHJlc3N1cmUJ
RW5jb3VudGVyMyBIZWlnaHQJRW5jb3VudGVyMyBCTUkJRW5jb3VudGVyMyBQcmVnbmFuY3kgU3Rh
dHVzCUVuY291bnRlcjMgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXIzIEZh
bWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMyBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlF
bmNvdW50ZXIzIEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjMgRmFtaWx5IFBsYW5u
aW5nIE1ldGhvZDMJRW5jb3VudGVyMyBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXIz
IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjMgVHViZXJjdWxvc2lzIFN0YXR1cwlF
bmNvdW50ZXIzIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyMyBU
dWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyMyBUdWJlcmN1bG9zaXMg
VHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIzIFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3Vu
dGVyMyBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjMgUG90ZW50aWFsIFNpZGUgRWZm
ZWN0MwlFbmNvdW50ZXIzIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyMyBQb3RlbnRp
YWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW0xCUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVy
IFByb2JsZW0yCUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFBy
b2JsZW0zCUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2Js
ZW00CUVuY291bnRlcjMgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01
CUVuY291bnRlcjMgV0hPIFN0YWdlCUVuY291bnRlcjMgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJ
RW5jb3VudGVyMyBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXIzIENvdHJpbW94YXpv
bGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMyBDb3RyaW1veGF6b2xlIFJl
YXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjMgQ290cmltb3hhem9sZSBSZWFzb24g
Rm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIzIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMyBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBB
ZGhlcmVuY2U1CUVuY291bnRlcjMgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXIzIE90aGVyIE1lZGlj
YXRpb24gTmFtZTEJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVy
MyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9u
IE5hbWUyCUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjMgT3Ro
ZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBOYW1l
MwlFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXIzIE90aGVyIE1l
ZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5j
b3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0
aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRl
cjMgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBG
cmVxdWVuY3k1CUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXIzIE90
aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gRnJlcXVl
bmN5NglFbmNvdW50ZXIzIE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyMyBPdGhlciBN
ZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJ
RW5jb3VudGVyMyBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjMgT3RoZXIgTWVkaWNh
dGlvbiBEb3NhZ2U4CUVuY291bnRlcjMgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291
bnRlcjMgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjMgUHJpb3Ig
QVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyMyBQcmlvciBBUlYgTWVk
aWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjMgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNv
dW50ZXIzIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVy
ZW5jZTMJRW5jb3VudGVyMyBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjMgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBS
ZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXIzIEFSViBNZWRpY2F0aW9uL1JlZ2lt
ZW4gTmFtZQlFbmNvdW50ZXIzIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRl
cjMgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXIzIENENCBM
YWIgUmVzdWx0IENvdW50CUVuY291bnRlcjMgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNv
dW50ZXIzIEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXIzIFJhcGlkIFBsYXNt
YSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIzIFR1YmVyY3Vsc2lzIFNwdXR1bSBM
YWIgUmVzdWx0CUVuY291bnRlcjMgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjMgT3RoZXIgTGFi
MSBSZXN1bHQJRW5jb3VudGVyMyBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyMyBPdGhlciBMYWIy
IFJlc3VsdAlFbmNvdW50ZXIzIFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyMyBBdCBSaXNr
IFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIzIERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXIzIFBh
cnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMyBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXIz
IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyMyBOZXh0
IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMyBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVy
NCBVbmlxdWUgSWQJRW5jb3VudGVyNCBEYXRlCUVuY291bnRlcjQgVHlwZQlFbmNvdW50ZXI0IE1v
bnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyNCBNb250aHMgU2luY2UgQ3VycmVudCBSZWdp
bWVuCUVuY291bnRlcjQgV2VpZ2h0CUVuY291bnRlcjQgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVy
NCBIZWlnaHQJRW5jb3VudGVyNCBCTUkJRW5jb3VudGVyNCBQcmVnbmFuY3kgU3RhdHVzCUVuY291
bnRlcjQgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI0IEZhbWlseSBQbGFu
bmluZyBTdGF0dXMJRW5jb3VudGVyNCBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI0
IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjQgRmFtaWx5IFBsYW5uaW5nIE1ldGhv
ZDMJRW5jb3VudGVyNCBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXI0IEZhbWlseSBQ
bGFubmluZyBNZXRob2Q1CUVuY291bnRlcjQgVHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI0
IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyNCBUdWJlcmN1bG9z
aXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyNCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50
IE51bWJlcglFbmNvdW50ZXI0IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNCBQb3Rl
bnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjQgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNv
dW50ZXI0IFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyNCBQb3RlbnRpYWwgU2lkZSBF
ZmZlY3Q1CUVuY291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2Js
ZW0xCUVuY291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0y
CUVuY291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVu
Y291bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291
bnRlcjQgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRl
cjQgV0hPIFN0YWdlCUVuY291bnRlcjQgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVy
NCBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI0IENvdHJpbW94YXpvbGUgUmVhc29u
IEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyNCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjQgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3Ig
QWRoZXJlbmNlMwlFbmNvdW50ZXI0IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVy
ZW5jZTQJRW5jb3VudGVyNCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1
CUVuY291bnRlcjQgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24gTmFt
ZTEJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyNCBPdGhlciBN
ZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVu
Y291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjQgT3RoZXIgTWVkaWNh
dGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50
ZXI0IE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24g
RnJlcXVlbmN5MwlFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNCBP
dGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1
ZW5jeTQJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRlcjQgT3RoZXIg
TWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1
CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI0IE90aGVyIE1lZGlj
YXRpb24gRG9zYWdlNglFbmNvdW50ZXI0IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNv
dW50ZXI0IE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9u
IERvc2FnZTcJRW5jb3VudGVyNCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVy
NCBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBEb3Nh
Z2U4CUVuY291bnRlcjQgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjQgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjQgUHJpb3IgQVJWIE1lZGlj
YXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyNCBQcmlvciBBUlYgTWVkaWNhdGlvbi9S
ZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjQgUHJpb3IgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI0IFBy
aW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5j
b3VudGVyNCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhl
cmVuY2U0CUVuY291bnRlcjQgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9y
IFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI0IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlF
bmNvdW50ZXI0IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRlcjQgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI0IENENCBMYWIgUmVzdWx0
IENvdW50CUVuY291bnRlcjQgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI0IEhl
bW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI0IFJhcGlkIFBsYXNtYSBSZWFnaW4g
KFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI0IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0
CUVuY291bnRlcjQgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjQgT3RoZXIgTGFiMSBSZXN1bHQJ
RW5jb3VudGVyNCBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyNCBPdGhlciBMYWIyIFJlc3VsdAlF
bmNvdW50ZXI0IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyNCBBdCBSaXNrIFBvcHVsYXRp
b24gQ29kZQlFbmNvdW50ZXI0IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI0IFBhcnRuZXIgVGVz
dGVkIENvZGUJRW5jb3VudGVyNCBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXI0IFNleHVhbGx5
IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyNCBOZXh0IEFwcG9pbnRt
ZW50IERhdGUJRW5jb3VudGVyNCBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVyNSBVbmlxdWUg
SWQJRW5jb3VudGVyNSBEYXRlCUVuY291bnRlcjUgVHlwZQlFbmNvdW50ZXI1IE1vbnRocyBTaW5j
ZSBBUlQgU3RhcnQJRW5jb3VudGVyNSBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291
bnRlcjUgV2VpZ2h0CUVuY291bnRlcjUgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyNSBIZWlnaHQJ
RW5jb3VudGVyNSBCTUkJRW5jb3VudGVyNSBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjUgUHJl
Z25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI1IEZhbWlseSBQbGFubmluZyBTdGF0
dXMJRW5jb3VudGVyNSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI1IEZhbWlseSBQ
bGFubmluZyBNZXRob2QyCUVuY291bnRlcjUgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3Vu
dGVyNSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXI1IEZhbWlseSBQbGFubmluZyBN
ZXRob2Q1CUVuY291bnRlcjUgVHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI1IFR1YmVyY3Vs
b3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyNSBUdWJlcmN1bG9zaXMgVHJlYXRt
ZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyNSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglF
bmNvdW50ZXI1IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNSBQb3RlbnRpYWwgU2lk
ZSBFZmZlY3QyCUVuY291bnRlcjUgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI1IFBv
dGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyNSBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVu
Y291bnRlcjUgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291
bnRlcjUgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRl
cjUgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjUg
TmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjUgTmV3
IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjUgV0hPIFN0
YWdlCUVuY291bnRlcjUgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyNSBDb3RyaW1v
eGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI1IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29y
IEFkaGVyZW5jZTEJRW5jb3VudGVyNSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhl
cmVuY2UyCUVuY291bnRlcjUgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNl
MwlFbmNvdW50ZXI1IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5j
b3VudGVyNSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRl
cjUgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3Vu
dGVyNSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9u
IEZyZXF1ZW5jeTEJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjUg
T3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBGcmVx
dWVuY3kyCUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI1IE90aGVy
IE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5
MwlFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNSBPdGhlciBNZWRp
Y2F0aW9uIERvc2FnZTQJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5j
b3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlv
biBEb3NhZ2U1CUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRl
cjUgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gRG9z
YWdlNglFbmNvdW50ZXI1IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI1IE90
aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJ
RW5jb3VudGVyNSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyNSBPdGhlciBN
ZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291
bnRlcjUgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjUgUHJpb3IgQVJWIE1l
ZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjUgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyNSBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJl
YXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjUgUHJpb3IgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI1IFByaW9yIEFSViBN
ZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyNSBQ
cmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVu
Y291bnRlcjUgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRo
ZXJlbmNlNQlFbmNvdW50ZXI1IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI1
IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRlcjUgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI1IENENCBMYWIgUmVzdWx0IENvdW50CUVu
Y291bnRlcjUgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI1IEhlbW9nbG9iaW4g
KEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI1IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFi
IFJlc3VsdAlFbmNvdW50ZXI1IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRl
cjUgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjUgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVy
NSBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyNSBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI1
IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyNSBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlF
bmNvdW50ZXI1IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI1IFBhcnRuZXIgVGVzdGVkIENvZGUJ
RW5jb3VudGVyNSBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXI1IFNleHVhbGx5IFRyYW5zbWl0
dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyNSBOZXh0IEFwcG9pbnRtZW50IERhdGUJ
RW5jb3VudGVyNSBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVyNiBVbmlxdWUgSWQJRW5jb3Vu
dGVyNiBEYXRlCUVuY291bnRlcjYgVHlwZQlFbmNvdW50ZXI2IE1vbnRocyBTaW5jZSBBUlQgU3Rh
cnQJRW5jb3VudGVyNiBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjYgV2Vp
Z2h0CUVuY291bnRlcjYgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyNiBIZWlnaHQJRW5jb3VudGVy
NiBCTUkJRW5jb3VudGVyNiBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjYgUHJlZ25hbmN5IEVz
dGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI2IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3Vu
dGVyNiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI2IEZhbWlseSBQbGFubmluZyBN
ZXRob2QyCUVuY291bnRlcjYgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyNiBGYW1p
bHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50ZXI2IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVu
Y291bnRlcjYgVHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI2IFR1YmVyY3Vsb3NpcyBUcmVh
dG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVyNiBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0
IFllYXIJRW5jb3VudGVyNiBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI2
IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNiBQb3RlbnRpYWwgU2lkZSBFZmZlY3Qy
CUVuY291bnRlcjYgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI2IFBvdGVudGlhbCBT
aWRlIEVmZmVjdDQJRW5jb3VudGVyNiBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjYg
TmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjYgTmV3
IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjYgTmV3IE9w
cG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjYgTmV3IE9wcG9y
dHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjYgTmV3IE9wcG9ydHVu
aXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjYgV0hPIFN0YWdlCUVuY291
bnRlcjYgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyNiBDb3RyaW1veGF6b2xlIEFk
aGVyZW5jZQlFbmNvdW50ZXI2IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5j
ZTEJRW5jb3VudGVyNiBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVu
Y291bnRlcjYgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50
ZXI2IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyNiBD
b3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjYgSU5IIERp
c3BlbnNlZAlFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyNiBPdGhl
ciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5j
eTEJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjYgT3RoZXIgTWVk
aWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVu
Y291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRp
b24gRG9zYWdlMwlFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50
ZXI2IE90aGVyIE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIERv
c2FnZTQJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyNiBP
dGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1
CUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjYgT3RoZXIg
TWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI2IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNv
dW50ZXI2IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI2IE90aGVyIE1lZGlj
YXRpb24gTmFtZTcJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVy
NiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyNiBPdGhlciBNZWRpY2F0aW9u
IE5hbWU4CUVuY291bnRlcjYgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjYgT3Ro
ZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjYgUHJpb3IgQVJWIE1lZGljYXRpb24v
UmVnaW1lbiBOYW1lCUVuY291bnRlcjYgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhl
cmVuY2UJRW5jb3VudGVyNiBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjYgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBS
ZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI2IFByaW9yIEFSViBNZWRpY2F0aW9u
L1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyNiBQcmlvciBBUlYg
TWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjYg
UHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlF
bmNvdW50ZXI2IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI2IEFSViBNZWRp
Y2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291bnRlcjYgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBO
dW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI2IENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjYg
Q0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI2IEhlbW9nbG9iaW4gKEhnYikgTGFi
IFJlc3VsdAlFbmNvdW50ZXI2IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlF
bmNvdW50ZXI2IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjYgT3RoZXIg
TGFiMSBOYW1lCUVuY291bnRlcjYgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyNiBPdGhlciBM
YWIyIE5hbWUJRW5jb3VudGVyNiBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI2IFBhdGllbnQg
UmVmZXJyZWQgVG8JRW5jb3VudGVyNiBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI2
IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI2IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVy
NiBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50ZXI2IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVj
dGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyNiBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVy
NiBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3VudGVyNyBVbmlxdWUgSWQJRW5jb3VudGVyNyBEYXRl
CUVuY291bnRlcjcgVHlwZQlFbmNvdW50ZXI3IE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3Vu
dGVyNyBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjcgV2VpZ2h0CUVuY291
bnRlcjcgQmxvb2QgUHJlc3N1cmUJRW5jb3VudGVyNyBIZWlnaHQJRW5jb3VudGVyNyBCTUkJRW5j
b3VudGVyNyBQcmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjcgUHJlZ25hbmN5IEVzdGltYXRlZCBE
dWUgRGF0ZQlFbmNvdW50ZXI3IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyNyBGYW1p
bHkgUGxhbm5pbmcgTWV0aG9kMQlFbmNvdW50ZXI3IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVu
Y291bnRlcjcgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyNyBGYW1pbHkgUGxhbm5p
bmcgTWV0aG9kNAlFbmNvdW50ZXI3IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjcg
VHViZXJjdWxvc2lzIFN0YXR1cwlFbmNvdW50ZXI3IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3Rh
cnQgTW9udGgJRW5jb3VudGVyNyBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5j
b3VudGVyNyBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI3IFBvdGVudGlh
bCBTaWRlIEVmZmVjdDEJRW5jb3VudGVyNyBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRl
cjcgUG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI3IFBvdGVudGlhbCBTaWRlIEVmZmVj
dDQJRW5jb3VudGVyNyBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjcgTmV3IE9wcG9y
dHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjcgTmV3IE9wcG9ydHVu
aXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjcgTmV3IE9wcG9ydHVuaXN0
aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjcgTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjcgTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjcgV0hPIFN0YWdlCUVuY291bnRlcjcgQ290
cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyNyBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlF
bmNvdW50ZXI3IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3Vu
dGVyNyBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjcg
Q290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXI3IENvdHJp
bW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyNyBDb3RyaW1veGF6
b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjcgSU5IIERpc3BlbnNlZAlF
bmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0
aW9uIERvc2FnZTEJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3Vu
dGVyNyBPdGhlciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBE
b3NhZ2UyCUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjcg
T3RoZXIgTWVkaWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gRG9zYWdl
MwlFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXI3IE90aGVy
IE1lZGljYXRpb24gTmFtZTQJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5j
b3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyNyBPdGhlciBNZWRp
Y2F0aW9uIE5hbWU1CUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRl
cjcgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjcgT3RoZXIgTWVkaWNhdGlv
biBOYW1lNglFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXI3IE90
aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI3IE90aGVyIE1lZGljYXRpb24gTmFt
ZTcJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyNyBPdGhlciBN
ZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVyNyBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVu
Y291bnRlcjcgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjcgT3RoZXIgTWVkaWNh
dGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjcgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBO
YW1lCUVuY291bnRlcjcgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5j
b3VudGVyNyBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhl
cmVuY2UxCUVuY291bnRlcjcgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9y
IFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXI3IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4g
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyNyBQcmlvciBBUlYgTWVkaWNhdGlv
bi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjcgUHJpb3IgQVJW
IE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI3
IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI3IEFSViBNZWRpY2F0aW9uL1Jl
Z2ltZW4gRG9zYWdlCUVuY291bnRlcjcgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2Yg
RGF5cwlFbmNvdW50ZXI3IENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjcgQ0Q0IExhYiBS
ZXN1bHQgUGVyY2VudGFnZQlFbmNvdW50ZXI3IEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlF
bmNvdW50ZXI3IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI3
IFR1YmVyY3Vsc2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjcgT3RoZXIgTGFiMSBOYW1l
CUVuY291bnRlcjcgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyNyBPdGhlciBMYWIyIE5hbWUJ
RW5jb3VudGVyNyBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI3IFBhdGllbnQgUmVmZXJyZWQg
VG8JRW5jb3VudGVyNyBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI3IERpc2Nsb3N1
cmUgQ29kZQlFbmNvdW50ZXI3IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyNyBDb25kb21z
IERpc3BlbnNlZAlFbmNvdW50ZXI3IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3Jl
ZW5pbmcJRW5jb3VudGVyNyBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyNyBDbGluaWNp
YW4gSW5pdGlhbHMJRW5jb3VudGVyOCBVbmlxdWUgSWQJRW5jb3VudGVyOCBEYXRlCUVuY291bnRl
cjggVHlwZQlFbmNvdW50ZXI4IE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyOCBNb250
aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjggV2VpZ2h0CUVuY291bnRlcjggQmxv
b2QgUHJlc3N1cmUJRW5jb3VudGVyOCBIZWlnaHQJRW5jb3VudGVyOCBCTUkJRW5jb3VudGVyOCBQ
cmVnbmFuY3kgU3RhdHVzCUVuY291bnRlcjggUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlF
bmNvdW50ZXI4IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyOCBGYW1pbHkgUGxhbm5p
bmcgTWV0aG9kMQlFbmNvdW50ZXI4IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjgg
RmFtaWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyOCBGYW1pbHkgUGxhbm5pbmcgTWV0aG9k
NAlFbmNvdW50ZXI4IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjggVHViZXJjdWxv
c2lzIFN0YXR1cwlFbmNvdW50ZXI4IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJ
RW5jb3VudGVyOCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyOCBU
dWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI4IFBvdGVudGlhbCBTaWRlIEVm
ZmVjdDEJRW5jb3VudGVyOCBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjggUG90ZW50
aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXI4IFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3Vu
dGVyOCBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5m
ZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW0zCUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9u
L090aGVyIFByb2JsZW00CUVuY291bnRlcjggTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW01CUVuY291bnRlcjggV0hPIFN0YWdlCUVuY291bnRlcjggQ290cmltb3hhem9s
ZSBEaXNwZW5zZWQJRW5jb3VudGVyOCBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI4
IENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyOCBDb3Ry
aW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjggQ290cmltb3hh
em9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXI4IENvdHJpbW94YXpvbGUg
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyOCBDb3RyaW1veGF6b2xlIFJlYXNv
biBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjggSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI4
IE90aGVyIE1lZGljYXRpb24gTmFtZTEJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIERvc2Fn
ZTEJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyOCBPdGhl
ciBNZWRpY2F0aW9uIE5hbWUyCUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVu
Y291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjggT3RoZXIgTWVk
aWNhdGlvbiBOYW1lMwlFbmNvdW50ZXI4IE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50
ZXI4IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXI4IE90aGVyIE1lZGljYXRp
b24gTmFtZTQJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyOCBP
dGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIE5h
bWU1CUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjggT3RoZXIg
TWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglF
bmNvdW50ZXI4IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXI4IE90aGVyIE1lZGlj
YXRpb24gRnJlcXVlbmN5NglFbmNvdW50ZXI4IE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3Vu
dGVyOCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9u
IEZyZXF1ZW5jeTcJRW5jb3VudGVyOCBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjgg
T3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjggT3RoZXIgTWVkaWNhdGlvbiBGcmVx
dWVuY3k4CUVuY291bnRlcjggUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291
bnRlcjggUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyOCBQ
cmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVu
Y291bnRlcjggUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRo
ZXJlbmNlMglFbmNvdW50ZXI4IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZv
ciBQb29yIEFkaGVyZW5jZTMJRW5jb3VudGVyOCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVu
IFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjggUHJpb3IgQVJWIE1lZGljYXRp
b24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI4IEFSViBNZWRp
Y2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXI4IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9z
YWdlCUVuY291bnRlcjggQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNv
dW50ZXI4IENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjggQ0Q0IExhYiBSZXN1bHQgUGVy
Y2VudGFnZQlFbmNvdW50ZXI4IEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI4
IFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI4IFR1YmVyY3Vs
c2lzIFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjggT3RoZXIgTGFiMSBOYW1lCUVuY291bnRl
cjggT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyOCBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVy
OCBPdGhlciBMYWIyIFJlc3VsdAlFbmNvdW50ZXI4IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3Vu
dGVyOCBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI4IERpc2Nsb3N1cmUgQ29kZQlF
bmNvdW50ZXI4IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyOCBDb25kb21zIERpc3BlbnNl
ZAlFbmNvdW50ZXI4IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5j
b3VudGVyOCBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyOCBDbGluaWNpYW4gSW5pdGlh
bHMJRW5jb3VudGVyOSBVbmlxdWUgSWQJRW5jb3VudGVyOSBEYXRlCUVuY291bnRlcjkgVHlwZQlF
bmNvdW50ZXI5IE1vbnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyOSBNb250aHMgU2luY2Ug
Q3VycmVudCBSZWdpbWVuCUVuY291bnRlcjkgV2VpZ2h0CUVuY291bnRlcjkgQmxvb2QgUHJlc3N1
cmUJRW5jb3VudGVyOSBIZWlnaHQJRW5jb3VudGVyOSBCTUkJRW5jb3VudGVyOSBQcmVnbmFuY3kg
U3RhdHVzCUVuY291bnRlcjkgUHJlZ25hbmN5IEVzdGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXI5
IEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyOSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9k
MQlFbmNvdW50ZXI5IEZhbWlseSBQbGFubmluZyBNZXRob2QyCUVuY291bnRlcjkgRmFtaWx5IFBs
YW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyOSBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50
ZXI5IEZhbWlseSBQbGFubmluZyBNZXRob2Q1CUVuY291bnRlcjkgVHViZXJjdWxvc2lzIFN0YXR1
cwlFbmNvdW50ZXI5IFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3VudGVy
OSBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyOSBUdWJlcmN1bG9z
aXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXI5IFBvdGVudGlhbCBTaWRlIEVmZmVjdDEJRW5j
b3VudGVyOSBQb3RlbnRpYWwgU2lkZSBFZmZlY3QyCUVuY291bnRlcjkgUG90ZW50aWFsIFNpZGUg
RWZmZWN0MwlFbmNvdW50ZXI5IFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3VudGVyOSBQb3Rl
bnRpYWwgU2lkZSBFZmZlY3Q1CUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9u
L090aGVyIFByb2JsZW0xCUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090
aGVyIFByb2JsZW0yCUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVy
IFByb2JsZW0zCUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFBy
b2JsZW00CUVuY291bnRlcjkgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2Js
ZW01CUVuY291bnRlcjkgV0hPIFN0YWdlCUVuY291bnRlcjkgQ290cmltb3hhem9sZSBEaXNwZW5z
ZWQJRW5jb3VudGVyOSBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlFbmNvdW50ZXI5IENvdHJpbW94
YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyOSBDb3RyaW1veGF6b2xl
IFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVuY291bnRlcjkgQ290cmltb3hhem9sZSBSZWFz
b24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXI5IENvdHJpbW94YXpvbGUgUmVhc29uIEZv
ciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVyOSBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9v
ciBBZGhlcmVuY2U1CUVuY291bnRlcjkgSU5IIERpc3BlbnNlZAlFbmNvdW50ZXI5IE90aGVyIE1l
ZGljYXRpb24gTmFtZTEJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3Vu
dGVyOSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTEJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0
aW9uIE5hbWUyCUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjkg
T3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kyCUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBO
YW1lMwlFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXI5IE90aGVy
IE1lZGljYXRpb24gRnJlcXVlbmN5MwlFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gTmFtZTQJ
RW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyOSBPdGhlciBNZWRp
Y2F0aW9uIEZyZXF1ZW5jeTQJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIE5hbWU1CUVuY291
bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlv
biBGcmVxdWVuY3k1CUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNglFbmNvdW50ZXI5
IE90aGVyIE1lZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gRnJl
cXVlbmN5NglFbmNvdW50ZXI5IE90aGVyIE1lZGljYXRpb24gTmFtZTcJRW5jb3VudGVyOSBPdGhl
ciBNZWRpY2F0aW9uIERvc2FnZTcJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5j
eTcJRW5jb3VudGVyOSBPdGhlciBNZWRpY2F0aW9uIE5hbWU4CUVuY291bnRlcjkgT3RoZXIgTWVk
aWNhdGlvbiBEb3NhZ2U4CUVuY291bnRlcjkgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVu
Y291bnRlcjkgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOYW1lCUVuY291bnRlcjkgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyOSBQcmlvciBBUlYg
TWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjkg
UHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglF
bmNvdW50ZXI5IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFk
aGVyZW5jZTMJRW5jb3VudGVyOSBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBG
b3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjkgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1l
biBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNQlFbmNvdW50ZXI5IEFSViBNZWRpY2F0aW9uL1Jl
Z2ltZW4gTmFtZQlFbmNvdW50ZXI5IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291
bnRlcjkgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXI5IENE
NCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjkgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFnZQlF
bmNvdW50ZXI5IEhlbW9nbG9iaW4gKEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXI5IFJhcGlkIFBs
YXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXI5IFR1YmVyY3Vsc2lzIFNwdXR1
bSBMYWIgUmVzdWx0CUVuY291bnRlcjkgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjkgT3RoZXIg
TGFiMSBSZXN1bHQJRW5jb3VudGVyOSBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVyOSBPdGhlciBM
YWIyIFJlc3VsdAlFbmNvdW50ZXI5IFBhdGllbnQgUmVmZXJyZWQgVG8JRW5jb3VudGVyOSBBdCBS
aXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXI5IERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXI5
IFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyOSBDb25kb21zIERpc3BlbnNlZAlFbmNvdW50
ZXI5IFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyOSBO
ZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyOSBDbGluaWNpYW4gSW5pdGlhbHMJRW5jb3Vu
dGVyMTAgVW5pcXVlIElkCUVuY291bnRlcjEwIERhdGUJRW5jb3VudGVyMTAgVHlwZQlFbmNvdW50
ZXIxMCBNb250aHMgU2luY2UgQVJUIFN0YXJ0CUVuY291bnRlcjEwIE1vbnRocyBTaW5jZSBDdXJy
ZW50IFJlZ2ltZW4JRW5jb3VudGVyMTAgV2VpZ2h0CUVuY291bnRlcjEwIEJsb29kIFByZXNzdXJl
CUVuY291bnRlcjEwIEhlaWdodAlFbmNvdW50ZXIxMCBCTUkJRW5jb3VudGVyMTAgUHJlZ25hbmN5
IFN0YXR1cwlFbmNvdW50ZXIxMCBQcmVnbmFuY3kgRXN0aW1hdGVkIER1ZSBEYXRlCUVuY291bnRl
cjEwIEZhbWlseSBQbGFubmluZyBTdGF0dXMJRW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1l
dGhvZDEJRW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDIJRW5jb3VudGVyMTAgRmFt
aWx5IFBsYW5uaW5nIE1ldGhvZDMJRW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDQJ
RW5jb3VudGVyMTAgRmFtaWx5IFBsYW5uaW5nIE1ldGhvZDUJRW5jb3VudGVyMTAgVHViZXJjdWxv
c2lzIFN0YXR1cwlFbmNvdW50ZXIxMCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFN0YXJ0IE1vbnRo
CUVuY291bnRlcjEwIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgWWVhcglFbmNvdW50ZXIx
MCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IE51bWJlcglFbmNvdW50ZXIxMCBQb3RlbnRpYWwgU2lk
ZSBFZmZlY3QxCUVuY291bnRlcjEwIFBvdGVudGlhbCBTaWRlIEVmZmVjdDIJRW5jb3VudGVyMTAg
UG90ZW50aWFsIFNpZGUgRWZmZWN0MwlFbmNvdW50ZXIxMCBQb3RlbnRpYWwgU2lkZSBFZmZlY3Q0
CUVuY291bnRlcjEwIFBvdGVudGlhbCBTaWRlIEVmZmVjdDUJRW5jb3VudGVyMTAgTmV3IE9wcG9y
dHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0xCUVuY291bnRlcjEwIE5ldyBPcHBvcnR1
bmlzdGljIEluZmVjdGlvbi9PdGhlciBQcm9ibGVtMglFbmNvdW50ZXIxMCBOZXcgT3Bwb3J0dW5p
c3RpYyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTMJRW5jb3VudGVyMTAgTmV3IE9wcG9ydHVuaXN0
aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW00CUVuY291bnRlcjEwIE5ldyBPcHBvcnR1bmlzdGlj
IEluZmVjdGlvbi9PdGhlciBQcm9ibGVtNQlFbmNvdW50ZXIxMCBXSE8gU3RhZ2UJRW5jb3VudGVy
MTAgQ290cmltb3hhem9sZSBEaXNwZW5zZWQJRW5jb3VudGVyMTAgQ290cmltb3hhem9sZSBBZGhl
cmVuY2UJRW5jb3VudGVyMTAgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNl
MQlFbmNvdW50ZXIxMCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UyCUVu
Y291bnRlcjEwIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTMJRW5jb3Vu
dGVyMTAgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlNAlFbmNvdW50ZXIx
MCBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjEwIElO
SCBEaXNwZW5zZWQJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMQlFbmNvdW50ZXIx
MCBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTEJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBG
cmVxdWVuY3kxCUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gTmFtZTIJRW5jb3VudGVyMTAg
T3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UyCUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gRnJl
cXVlbmN5MglFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIE5hbWUzCUVuY291bnRlcjEwIE90
aGVyIE1lZGljYXRpb24gRG9zYWdlMwlFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1
ZW5jeTMJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNAlFbmNvdW50ZXIxMCBPdGhl
ciBNZWRpY2F0aW9uIERvc2FnZTQJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVu
Y3k0CUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gTmFtZTUJRW5jb3VudGVyMTAgT3RoZXIg
TWVkaWNhdGlvbiBEb3NhZ2U1CUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5
NQlFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIE5hbWU2CUVuY291bnRlcjEwIE90aGVyIE1l
ZGljYXRpb24gRG9zYWdlNglFbmNvdW50ZXIxMCBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTYJ
RW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNwlFbmNvdW50ZXIxMCBPdGhlciBNZWRp
Y2F0aW9uIERvc2FnZTcJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k3CUVu
Y291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gTmFtZTgJRW5jb3VudGVyMTAgT3RoZXIgTWVkaWNh
dGlvbiBEb3NhZ2U4CUVuY291bnRlcjEwIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5OAlFbmNv
dW50ZXIxMCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIE5hbWUJRW5jb3VudGVyMTAgUHJp
b3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBBZGhlcmVuY2UJRW5jb3VudGVyMTAgUHJpb3IgQVJW
IE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMQlFbmNvdW50ZXIx
MCBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2Uy
CUVuY291bnRlcjEwIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29y
IEFkaGVyZW5jZTMJRW5jb3VudGVyMTAgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFz
b24gRm9yIFBvb3IgQWRoZXJlbmNlNAlFbmNvdW50ZXIxMCBQcmlvciBBUlYgTWVkaWNhdGlvbi9S
ZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U1CUVuY291bnRlcjEwIEFSViBNZWRpY2F0
aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIxMCBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIERvc2Fn
ZQlFbmNvdW50ZXIxMCBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIE51bWJlciBvZiBEYXlzCUVuY291
bnRlcjEwIENENCBMYWIgUmVzdWx0IENvdW50CUVuY291bnRlcjEwIENENCBMYWIgUmVzdWx0IFBl
cmNlbnRhZ2UJRW5jb3VudGVyMTAgSGVtb2dsb2JpbiAoSGdiKSBMYWIgUmVzdWx0CUVuY291bnRl
cjEwIFJhcGlkIFBsYXNtYSBSZWFnaW4gKFJQUikgTGFiIFJlc3VsdAlFbmNvdW50ZXIxMCBUdWJl
cmN1bHNpcyBTcHV0dW0gTGFiIFJlc3VsdAlFbmNvdW50ZXIxMCBPdGhlciBMYWIxIE5hbWUJRW5j
b3VudGVyMTAgT3RoZXIgTGFiMSBSZXN1bHQJRW5jb3VudGVyMTAgT3RoZXIgTGFiMiBOYW1lCUVu
Y291bnRlcjEwIE90aGVyIExhYjIgUmVzdWx0CUVuY291bnRlcjEwIFBhdGllbnQgUmVmZXJyZWQg
VG8JRW5jb3VudGVyMTAgQXQgUmlzayBQb3B1bGF0aW9uIENvZGUJRW5jb3VudGVyMTAgRGlzY2xv
c3VyZSBDb2RlCUVuY291bnRlcjEwIFBhcnRuZXIgVGVzdGVkIENvZGUJRW5jb3VudGVyMTAgQ29u
ZG9tcyBEaXNwZW5zZWQJRW5jb3VudGVyMTAgU2V4dWFsbHkgVHJhbnNtaXR0ZWQgSW5mZWN0aW9u
IFNjcmVlbmluZwlFbmNvdW50ZXIxMCBOZXh0IEFwcG9pbnRtZW50IERhdGUJRW5jb3VudGVyMTAg
Q2xpbmljaWFuIEluaXRpYWxzCUVuY291bnRlcjExIFVuaXF1ZSBJZAlFbmNvdW50ZXIxMSBEYXRl
CUVuY291bnRlcjExIFR5cGUJRW5jb3VudGVyMTEgTW9udGhzIFNpbmNlIEFSVCBTdGFydAlFbmNv
dW50ZXIxMSBNb250aHMgU2luY2UgQ3VycmVudCBSZWdpbWVuCUVuY291bnRlcjExIFdlaWdodAlF
bmNvdW50ZXIxMSBCbG9vZCBQcmVzc3VyZQlFbmNvdW50ZXIxMSBIZWlnaHQJRW5jb3VudGVyMTEg
Qk1JCUVuY291bnRlcjExIFByZWduYW5jeSBTdGF0dXMJRW5jb3VudGVyMTEgUHJlZ25hbmN5IEVz
dGltYXRlZCBEdWUgRGF0ZQlFbmNvdW50ZXIxMSBGYW1pbHkgUGxhbm5pbmcgU3RhdHVzCUVuY291
bnRlcjExIEZhbWlseSBQbGFubmluZyBNZXRob2QxCUVuY291bnRlcjExIEZhbWlseSBQbGFubmlu
ZyBNZXRob2QyCUVuY291bnRlcjExIEZhbWlseSBQbGFubmluZyBNZXRob2QzCUVuY291bnRlcjEx
IEZhbWlseSBQbGFubmluZyBNZXRob2Q0CUVuY291bnRlcjExIEZhbWlseSBQbGFubmluZyBNZXRo
b2Q1CUVuY291bnRlcjExIFR1YmVyY3Vsb3NpcyBTdGF0dXMJRW5jb3VudGVyMTEgVHViZXJjdWxv
c2lzIFRyZWF0bWVudCBTdGFydCBNb250aAlFbmNvdW50ZXIxMSBUdWJlcmN1bG9zaXMgVHJlYXRt
ZW50IFN0YXJ0IFllYXIJRW5jb3VudGVyMTEgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBOdW1iZXIJ
RW5jb3VudGVyMTEgUG90ZW50aWFsIFNpZGUgRWZmZWN0MQlFbmNvdW50ZXIxMSBQb3RlbnRpYWwg
U2lkZSBFZmZlY3QyCUVuY291bnRlcjExIFBvdGVudGlhbCBTaWRlIEVmZmVjdDMJRW5jb3VudGVy
MTEgUG90ZW50aWFsIFNpZGUgRWZmZWN0NAlFbmNvdW50ZXIxMSBQb3RlbnRpYWwgU2lkZSBFZmZl
Y3Q1CUVuY291bnRlcjExIE5ldyBPcHBvcnR1bmlzdGljIEluZmVjdGlvbi9PdGhlciBQcm9ibGVt
MQlFbmNvdW50ZXIxMSBOZXcgT3Bwb3J0dW5pc3RpYyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTIJ
RW5jb3VudGVyMTEgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0aW9uL090aGVyIFByb2JsZW0zCUVu
Y291bnRlcjExIE5ldyBPcHBvcnR1bmlzdGljIEluZmVjdGlvbi9PdGhlciBQcm9ibGVtNAlFbmNv
dW50ZXIxMSBOZXcgT3Bwb3J0dW5pc3RpYyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTUJRW5jb3Vu
dGVyMTEgV0hPIFN0YWdlCUVuY291bnRlcjExIENvdHJpbW94YXpvbGUgRGlzcGVuc2VkCUVuY291
bnRlcjExIENvdHJpbW94YXpvbGUgQWRoZXJlbmNlCUVuY291bnRlcjExIENvdHJpbW94YXpvbGUg
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMTEgQ290cmltb3hhem9sZSBSZWFz
b24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXIxMSBDb3RyaW1veGF6b2xlIFJlYXNvbiBG
b3IgUG9vciBBZGhlcmVuY2UzCUVuY291bnRlcjExIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTQJRW5jb3VudGVyMTEgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3Ig
QWRoZXJlbmNlNQlFbmNvdW50ZXIxMSBJTkggRGlzcGVuc2VkCUVuY291bnRlcjExIE90aGVyIE1l
ZGljYXRpb24gTmFtZTEJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2UxCUVuY291
bnRlcjExIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MQlFbmNvdW50ZXIxMSBPdGhlciBNZWRp
Y2F0aW9uIE5hbWUyCUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gRG9zYWdlMglFbmNvdW50
ZXIxMSBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTIJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNh
dGlvbiBOYW1lMwlFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTMJRW5jb3VudGVy
MTEgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3kzCUVuY291bnRlcjExIE90aGVyIE1lZGljYXRp
b24gTmFtZTQJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U0CUVuY291bnRlcjEx
IE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NAlFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9u
IE5hbWU1CUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gRG9zYWdlNQlFbmNvdW50ZXIxMSBP
dGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTUJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBO
YW1lNglFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9uIERvc2FnZTYJRW5jb3VudGVyMTEgT3Ro
ZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k2CUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gTmFt
ZTcJRW5jb3VudGVyMTEgT3RoZXIgTWVkaWNhdGlvbiBEb3NhZ2U3CUVuY291bnRlcjExIE90aGVy
IE1lZGljYXRpb24gRnJlcXVlbmN5NwlFbmNvdW50ZXIxMSBPdGhlciBNZWRpY2F0aW9uIE5hbWU4
CUVuY291bnRlcjExIE90aGVyIE1lZGljYXRpb24gRG9zYWdlOAlFbmNvdW50ZXIxMSBPdGhlciBN
ZWRpY2F0aW9uIEZyZXF1ZW5jeTgJRW5jb3VudGVyMTEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBOYW1lCUVuY291bnRlcjExIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gQWRoZXJl
bmNlCUVuY291bnRlcjExIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQ
b29yIEFkaGVyZW5jZTEJRW5jb3VudGVyMTEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBS
ZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMglFbmNvdW50ZXIxMSBQcmlvciBBUlYgTWVkaWNhdGlv
bi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UzCUVuY291bnRlcjExIFByaW9yIEFS
ViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTQJRW5jb3VudGVy
MTEgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNl
NQlFbmNvdW50ZXIxMSBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIE5hbWUJRW5jb3VudGVyMTEgQVJW
IE1lZGljYXRpb24vUmVnaW1lbiBEb3NhZ2UJRW5jb3VudGVyMTEgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBOdW1iZXIgb2YgRGF5cwlFbmNvdW50ZXIxMSBDRDQgTGFiIFJlc3VsdCBDb3VudAlFbmNv
dW50ZXIxMSBDRDQgTGFiIFJlc3VsdCBQZXJjZW50YWdlCUVuY291bnRlcjExIEhlbW9nbG9iaW4g
KEhnYikgTGFiIFJlc3VsdAlFbmNvdW50ZXIxMSBSYXBpZCBQbGFzbWEgUmVhZ2luIChSUFIpIExh
YiBSZXN1bHQJRW5jb3VudGVyMTEgVHViZXJjdWxzaXMgU3B1dHVtIExhYiBSZXN1bHQJRW5jb3Vu
dGVyMTEgT3RoZXIgTGFiMSBOYW1lCUVuY291bnRlcjExIE90aGVyIExhYjEgUmVzdWx0CUVuY291
bnRlcjExIE90aGVyIExhYjIgTmFtZQlFbmNvdW50ZXIxMSBPdGhlciBMYWIyIFJlc3VsdAlFbmNv
dW50ZXIxMSBQYXRpZW50IFJlZmVycmVkIFRvCUVuY291bnRlcjExIEF0IFJpc2sgUG9wdWxhdGlv
biBDb2RlCUVuY291bnRlcjExIERpc2Nsb3N1cmUgQ29kZQlFbmNvdW50ZXIxMSBQYXJ0bmVyIFRl
c3RlZCBDb2RlCUVuY291bnRlcjExIENvbmRvbXMgRGlzcGVuc2VkCUVuY291bnRlcjExIFNleHVh
bGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbiBTY3JlZW5pbmcJRW5jb3VudGVyMTEgTmV4dCBBcHBv
aW50bWVudCBEYXRlCUVuY291bnRlcjExIENsaW5pY2lhbiBJbml0aWFscwlFbmNvdW50ZXIxMiBV
bmlxdWUgSWQJRW5jb3VudGVyMTIgRGF0ZQlFbmNvdW50ZXIxMiBUeXBlCUVuY291bnRlcjEyIE1v
bnRocyBTaW5jZSBBUlQgU3RhcnQJRW5jb3VudGVyMTIgTW9udGhzIFNpbmNlIEN1cnJlbnQgUmVn
aW1lbglFbmNvdW50ZXIxMiBXZWlnaHQJRW5jb3VudGVyMTIgQmxvb2QgUHJlc3N1cmUJRW5jb3Vu
dGVyMTIgSGVpZ2h0CUVuY291bnRlcjEyIEJNSQlFbmNvdW50ZXIxMiBQcmVnbmFuY3kgU3RhdHVz
CUVuY291bnRlcjEyIFByZWduYW5jeSBFc3RpbWF0ZWQgRHVlIERhdGUJRW5jb3VudGVyMTIgRmFt
aWx5IFBsYW5uaW5nIFN0YXR1cwlFbmNvdW50ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMQlF
bmNvdW50ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kMglFbmNvdW50ZXIxMiBGYW1pbHkgUGxh
bm5pbmcgTWV0aG9kMwlFbmNvdW50ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNAlFbmNvdW50
ZXIxMiBGYW1pbHkgUGxhbm5pbmcgTWV0aG9kNQlFbmNvdW50ZXIxMiBUdWJlcmN1bG9zaXMgU3Rh
dHVzCUVuY291bnRlcjEyIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU3RhcnQgTW9udGgJRW5jb3Vu
dGVyMTIgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBTdGFydCBZZWFyCUVuY291bnRlcjEyIFR1YmVy
Y3Vsb3NpcyBUcmVhdG1lbnQgTnVtYmVyCUVuY291bnRlcjEyIFBvdGVudGlhbCBTaWRlIEVmZmVj
dDEJRW5jb3VudGVyMTIgUG90ZW50aWFsIFNpZGUgRWZmZWN0MglFbmNvdW50ZXIxMiBQb3RlbnRp
YWwgU2lkZSBFZmZlY3QzCUVuY291bnRlcjEyIFBvdGVudGlhbCBTaWRlIEVmZmVjdDQJRW5jb3Vu
dGVyMTIgUG90ZW50aWFsIFNpZGUgRWZmZWN0NQlFbmNvdW50ZXIxMiBOZXcgT3Bwb3J0dW5pc3Rp
YyBJbmZlY3Rpb24vT3RoZXIgUHJvYmxlbTEJRW5jb3VudGVyMTIgTmV3IE9wcG9ydHVuaXN0aWMg
SW5mZWN0aW9uL090aGVyIFByb2JsZW0yCUVuY291bnRlcjEyIE5ldyBPcHBvcnR1bmlzdGljIElu
ZmVjdGlvbi9PdGhlciBQcm9ibGVtMwlFbmNvdW50ZXIxMiBOZXcgT3Bwb3J0dW5pc3RpYyBJbmZl
Y3Rpb24vT3RoZXIgUHJvYmxlbTQJRW5jb3VudGVyMTIgTmV3IE9wcG9ydHVuaXN0aWMgSW5mZWN0
aW9uL090aGVyIFByb2JsZW01CUVuY291bnRlcjEyIFdITyBTdGFnZQlFbmNvdW50ZXIxMiBDb3Ry
aW1veGF6b2xlIERpc3BlbnNlZAlFbmNvdW50ZXIxMiBDb3RyaW1veGF6b2xlIEFkaGVyZW5jZQlF
bmNvdW50ZXIxMiBDb3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291
bnRlcjEyIENvdHJpbW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTIJRW5jb3VudGVy
MTIgQ290cmltb3hhem9sZSBSZWFzb24gRm9yIFBvb3IgQWRoZXJlbmNlMwlFbmNvdW50ZXIxMiBD
b3RyaW1veGF6b2xlIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjEyIENvdHJp
bW94YXpvbGUgUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTUJRW5jb3VudGVyMTIgSU5IIERpc3Bl
bnNlZAlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIE5hbWUxCUVuY291bnRlcjEyIE90aGVy
IE1lZGljYXRpb24gRG9zYWdlMQlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5j
eTEJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lMglFbmNvdW50ZXIxMiBPdGhlciBN
ZWRpY2F0aW9uIERvc2FnZTIJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3ky
CUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24gTmFtZTMJRW5jb3VudGVyMTIgT3RoZXIgTWVk
aWNhdGlvbiBEb3NhZ2UzCUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5MwlF
bmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU0CUVuY291bnRlcjEyIE90aGVyIE1lZGlj
YXRpb24gRG9zYWdlNAlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTQJRW5j
b3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lNQlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0
aW9uIERvc2FnZTUJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k1CUVuY291
bnRlcjEyIE90aGVyIE1lZGljYXRpb24gTmFtZTYJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlv
biBEb3NhZ2U2CUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24gRnJlcXVlbmN5NglFbmNvdW50
ZXIxMiBPdGhlciBNZWRpY2F0aW9uIE5hbWU3CUVuY291bnRlcjEyIE90aGVyIE1lZGljYXRpb24g
RG9zYWdlNwlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIEZyZXF1ZW5jeTcJRW5jb3VudGVy
MTIgT3RoZXIgTWVkaWNhdGlvbiBOYW1lOAlFbmNvdW50ZXIxMiBPdGhlciBNZWRpY2F0aW9uIERv
c2FnZTgJRW5jb3VudGVyMTIgT3RoZXIgTWVkaWNhdGlvbiBGcmVxdWVuY3k4CUVuY291bnRlcjEy
IFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTmFtZQlFbmNvdW50ZXIxMiBQcmlvciBBUlYg
TWVkaWNhdGlvbi9SZWdpbWVuIEFkaGVyZW5jZQlFbmNvdW50ZXIxMiBQcmlvciBBUlYgTWVkaWNh
dGlvbi9SZWdpbWVuIFJlYXNvbiBGb3IgUG9vciBBZGhlcmVuY2UxCUVuY291bnRlcjEyIFByaW9y
IEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gUmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTIJRW5jb3Vu
dGVyMTIgUHJpb3IgQVJWIE1lZGljYXRpb24vUmVnaW1lbiBSZWFzb24gRm9yIFBvb3IgQWRoZXJl
bmNlMwlFbmNvdW50ZXIxMiBQcmlvciBBUlYgTWVkaWNhdGlvbi9SZWdpbWVuIFJlYXNvbiBGb3Ig
UG9vciBBZGhlcmVuY2U0CUVuY291bnRlcjEyIFByaW9yIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4g
UmVhc29uIEZvciBQb29yIEFkaGVyZW5jZTUJRW5jb3VudGVyMTIgQVJWIE1lZGljYXRpb24vUmVn
aW1lbiBOYW1lCUVuY291bnRlcjEyIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gRG9zYWdlCUVuY291
bnRlcjEyIEFSViBNZWRpY2F0aW9uL1JlZ2ltZW4gTnVtYmVyIG9mIERheXMJRW5jb3VudGVyMTIg
Q0Q0IExhYiBSZXN1bHQgQ291bnQJRW5jb3VudGVyMTIgQ0Q0IExhYiBSZXN1bHQgUGVyY2VudGFn
ZQlFbmNvdW50ZXIxMiBIZW1vZ2xvYmluIChIZ2IpIExhYiBSZXN1bHQJRW5jb3VudGVyMTIgUmFw
aWQgUGxhc21hIFJlYWdpbiAoUlBSKSBMYWIgUmVzdWx0CUVuY291bnRlcjEyIFR1YmVyY3Vsc2lz
IFNwdXR1bSBMYWIgUmVzdWx0CUVuY291bnRlcjEyIE90aGVyIExhYjEgTmFtZQlFbmNvdW50ZXIx
MiBPdGhlciBMYWIxIFJlc3VsdAlFbmNvdW50ZXIxMiBPdGhlciBMYWIyIE5hbWUJRW5jb3VudGVy
MTIgT3RoZXIgTGFiMiBSZXN1bHQJRW5jb3VudGVyMTIgUGF0aWVudCBSZWZlcnJlZCBUbwlFbmNv
dW50ZXIxMiBBdCBSaXNrIFBvcHVsYXRpb24gQ29kZQlFbmNvdW50ZXIxMiBEaXNjbG9zdXJlIENv
ZGUJRW5jb3VudGVyMTIgUGFydG5lciBUZXN0ZWQgQ29kZQlFbmNvdW50ZXIxMiBDb25kb21zIERp
c3BlbnNlZAlFbmNvdW50ZXIxMiBTZXh1YWxseSBUcmFuc21pdHRlZCBJbmZlY3Rpb24gU2NyZWVu
aW5nCUVuY291bnRlcjEyIE5leHQgQXBwb2ludG1lbnQgRGF0ZQlFbmNvdW50ZXIxMiBDbGluaWNp
YW4gSW5pdGlhbHMK</inboundTemplate>
        <outboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPENsaW5pY2FsRG9jdW1lbnQg
eG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJo
dHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM9InVybjpobDct
b3JnOnYzIj4KICA8cmVhbG1Db2RlIGNvZGU9J1VTJy8+CiAgPHR5cGVJZCBleHRlbnNpb249IlBP
Q0RfSEQwMDAwNDAiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEuMyIvPgogIDx0ZW1wbGF0ZUlk
IHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuMjcuMTc3NiIgYXNzaWduaW5nQXV0aG9yaXR5TmFt
ZT0iQ0RBL1IyIi8+CiAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAu
MyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSEw3L0NEVCBIZWFkZXIiLz4KICA8dGVtcGxhdGVJ
ZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjEiIGFzc2lnbmluZ0F1dGhvcml0
eU5hbWU9IkhJVFNQL0MzMiIvPgogIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2
LjEuNS4zLjEuMS4xIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUvUENDIi8+CiAgPHRlbXBs
YXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTUwLjI0NzQuMTEuMi4xIi8+CiAgPGlkIHJvb3Q9IjEu
My42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xIiBleHRlbnNpb249Ik9FQ0tlbnlhQzEiLz4KICA8
Y29kZSBjb2RlPSIxIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3NC4xMS4zLjEuMSIg
ZGlzcGxheU5hbWU9Ik9FQyBLZW55YSBDMSIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBDREEg
VHlwZXMiLz4KICA8dGl0bGU+T0VDIEtlbnlhIEMxPC90aXRsZT4KICA8ZWZmZWN0aXZlVGltZSB2
YWx1ZT0iIi8+CiAgPGNvbmZpZGVudGlhbGl0eUNvZGUgY29kZT0iTiIvPgogIDxsYW5ndWFnZUNv
ZGUgY29kZT0iZW4tVVMiIC8+CiAgPHJlY29yZFRhcmdldD4KICAgIDxwYXRpZW50Um9sZT4KICAg
ICAgPGlkIHJvb3Q9IjEuMy42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xLjEiIGV4dGVuc2lvbj0i
Ii8+CiAgICAgIDxhZGRyPgogICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT48L3N0cmVldEFkZHJl
c3NMaW5lPgogICAgICAgIDxjaXR5PjwvY2l0eT4KICAgICAgICA8Y291bnR5PjwvY291bnR5Pgog
ICAgICAgIDxzdGF0ZT48L3N0YXRlPgogICAgICA8L2FkZHI+CiAgICAgIDx0ZWxlY29tIHZhbHVl
PSJ0ZWw6Ii8+CiAgICAgIDxwYXRpZW50PgogICAgICAgIDxuYW1lPgogICAgICAgICAgPGZhbWls
eT48L2ZhbWlseT4KICAgICAgICAgIDxnaXZlbj48L2dpdmVuPgogICAgICAgIDwvbmFtZT4KICAg
ICAgICA8YWRtaW5pc3RyYXRpdmVHZW5kZXJDb2RlIGNvZGU9IiIgY29kZVN5c3RlbT0iMi4xNi44
NDAuMS4xMTM4ODMuNS4xIi8+CiAgICAgICAgPGJpcnRoVGltZSB2YWx1ZT0iIi8+CiAgICAgICAg
PG1hcml0YWxTdGF0dXNDb2RlIGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbT0iMS4z
LjYuMS40LjEuMTUwLjI0NzQuMTEuMy4xLjIiIGNvZGVTeXN0ZW1OYW1lPSJPRUMgS2VueWEgTWFy
aXRhbCBTdGF0dXMiLz4KICAgICAgPC9wYXRpZW50PgogICAgICA8cHJvdmlkZXJPcmdhbml6YXRp
b24+CiAgICAgICAgPG5hbWU+PC9uYW1lPgogICAgICAgIDxhZGRyPgogICAgICAgICAgPGNvdW50
eT48L2NvdW50eT4KICAgICAgICAgIDxzdGF0ZT48L3N0YXRlPgogICAgICAgIDwvYWRkcj4KICAg
ICAgICA8dGVsZWNvbSBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgPC9wcm92aWRlck9yZ2FuaXph
dGlvbj4KICAgIDwvcGF0aWVudFJvbGU+ICAKICA8L3JlY29yZFRhcmdldD4KICA8YXV0aG9yPgog
ICAgPHRpbWUgdmFsdWU9IiIvPgogICAgPGFzc2lnbmVkQXV0aG9yPgogICAgICA8aWQgZXh0ZW5z
aW9uPSIiIHJvb3Q9IjEuMy42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xLjIiLz4KICAgICAgPGFk
ZHI+PC9hZGRyPgogICAgICA8dGVsZWNvbSBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgPGFzc2ln
bmVkUGVyc29uPgogICAgICAgIDxuYW1lPkF1dG8tZ2VuZXJhdGVkPC9uYW1lPgogICAgICA8L2Fz
c2lnbmVkUGVyc29uPgogICAgICA8YXNzaWduZWRBdXRob3JpbmdEZXZpY2U+CiAgICAgICAgPHNv
ZnR3YXJlTmFtZT48L3NvZnR3YXJlTmFtZT4KICAgICAgPC9hc3NpZ25lZEF1dGhvcmluZ0Rldmlj
ZT4KICAgICAgPHJlcHJlc2VudGVkT3JnYW5pemF0aW9uPgogICAgICAgIDxpZCBleHRlbnNpb249
IiIgcm9vdD0iMS4zLjYuMS40LjEuMTUwLjI0NzQuMTEuMi4xLjEuMyIvPgogICAgICAgIDxuYW1l
PjwvbmFtZT4KICAgICAgICA8YWRkcj48L2FkZHI+CiAgICAgICAgPHRlbGVjb20gbnVsbEZsYXZv
cj0iVU5LIi8+CiAgICAgIDwvcmVwcmVzZW50ZWRPcmdhbml6YXRpb24+CiAgICA8L2Fzc2lnbmVk
QXV0aG9yPgogIDwvYXV0aG9yPgogIDxjdXN0b2RpYW4+CiAgICA8YXNzaWduZWRDdXN0b2RpYW4+
CiAgICAgIDxyZXByZXNlbnRlZEN1c3RvZGlhbk9yZ2FuaXphdGlvbj4KICAgICAgICA8aWQgZXh0
ZW5zaW9uPSIiIHJvb3Q9IjEuMy42LjEuNC4xLjE1MC4yNDc0LjExLjIuMS4xLjMiLz4KICAgICAg
ICA8bmFtZT48L25hbWU+CiAgICAgICAgPGFkZHI+PC9hZGRyPgogICAgICAgIDx0ZWxlY29tIG51
bGxGbGF2b3I9IlVOSyIvPgogICAgICA8L3JlcHJlc2VudGVkQ3VzdG9kaWFuT3JnYW5pemF0aW9u
PgogICAgPC9hc3NpZ25lZEN1c3RvZGlhbj4KICA8L2N1c3RvZGlhbj4KICA8cGFydGljaXBhbnQg
dHlwZUNvZGU9IklORCI+CiAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4z
Ljg4LjExLjgzLjMiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQL0M4MyIvPgogICAgPHRl
bXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4yLjQiIGFzc2lnbmluZ0F1
dGhvcml0eU5hbWU9IklIRS9QQ0MiLz4KICAgIDx0aW1lPgogICAgICA8bG93IG51bGxGbGF2b3I9
IlVOSyIvPgogICAgPC90aW1lPgogICAgPGFzc29jaWF0ZWRFbnRpdHkgY2xhc3NDb2RlPSJQUlMi
PgogICAgICA8Y29kZSBjb2RlPSIiIGRpc3BsYXlOYW1lPSIiIGNvZGVTeXN0ZW09IjEuMy42LjEu
NC4xLjE1MC4yNDc0LjExLjMuMS4zIiBjb2RlU3lzdGVtTmFtZT0iT0VDIEtlbnlhIFJlbGF0aW9u
c2hpcCBSb2xlIi8+CiAgICAgIDxhZGRyPgogICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT48L3N0
cmVldEFkZHJlc3NMaW5lPgogICAgICA8L2FkZHI+CiAgICAgIDx0ZWxlY29tIHZhbHVlPSJ0ZWw6
Ii8+CiAgICAgIDxhc3NvY2lhdGVkUGVyc29uPgogICAgICAgIDxuYW1lPgogICAgICAgICAgPGZh
bWlseT48L2ZhbWlseT4KICAgICAgICAgIDxnaXZlbj48L2dpdmVuPgogICAgICAgIDwvbmFtZT4K
ICAgICAgPC9hc3NvY2lhdGVkUGVyc29uPgogICAgPC9hc3NvY2lhdGVkRW50aXR5PgogIDwvcGFy
dGljaXBhbnQ+CiAgPGNvbXBvbmVudD4KICAgIDxzdHJ1Y3R1cmVkQm9keT4KICAgICAgPCEtLUVu
Y291bnRlcnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAg
IDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTI3IiBhc3Np
Z25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMS41LjMuMyIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4x
MTM4ODMuMTAuMjAuMS4zIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAg
ICAgICA8IS0tRW5jb3VudGVycyBzZWN0aW9uIHRlbXBsYXRlLS0+CiAgICAgICAgICA8Y29kZSBj
b2RlPSI0NjI0MC04IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0
ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9Ikhpc3Rvcnkgb2YgZW5jb3VudGVycyIvPgogICAg
ICAgICAgPHRpdGxlPkVuY291bnRlcnM8L3RpdGxlPgogICAgICAgICAgPHRleHQ+CiAgICAgICAg
ICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIxMDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+
CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aD5FbmNvdW50ZXIgVHlw
ZTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5DbGluaWNpYW4gSW5pdGlhbHM8L3RoPgogICAg
ICAgICAgICAgICAgICA8dGg+TG9jYXRpb248L3RoPgogICAgICAgICAgICAgICAgICA8dGg+RGF0
ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8
L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAg
ICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAg
ICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAg
ICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+
CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICA8ZW50cnkgdHlwZUNvZGU9IkRSSVYiPgogICAg
ICAgICAgICA8ZW5jb3VudGVyIGNsYXNzQ29kZT0iRU5DIiBtb29kQ29kZT0iRVZOIj4KICAgICAg
ICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE2
IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICA8dGVt
cGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjIxIiBhc3NpZ25pbmdBdXRo
b3JpdHlOYW1lPSJDQ0QiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4x
LjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTQiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0Mi
Lz4KICAgICAgICAgICAgICA8IS0tIEVuY291bnRlciBhY3Rpdml0eSB0ZW1wbGF0ZSAtLT4KICAg
ICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgogICAgICAgICAgICAgIDxjb2Rl
IGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbT0iMS4zLjYuMS40LjEuMTUwLjI0NzQu
MTEuMy4xLjQiIGNvZGVTeXN0ZW1OYW1lPSJPRUMgS2VueWEgRW5jb3VudGVyIFR5cGVzIj4KICAg
ICAgICAgICAgICAgIDxvcmlnaW5hbFRleHQ+CiAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2Ug
dmFsdWU9IiIvPgogICAgICAgICAgICAgICAgPC9vcmlnaW5hbFRleHQ+CiAgICAgICAgICAgICAg
PC9jb2RlPgogICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2
YWx1ZT0iIi8+CiAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgIDxlZmZlY3RpdmVU
aW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICA8cGVyZm9ybWVyPgogICAgICAgICAgICAgICAg
PGFzc2lnbmVkRW50aXR5PgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9
IiIvPgogICAgICAgICAgICAgICAgICA8YWRkcj48L2FkZHI+CiAgICAgICAgICAgICAgICAgIDx0
ZWxlY29tIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICA8YXNzaWduZWRQZXJz
b24+CiAgICAgICAgICAgICAgICAgICAgPG5hbWU+PC9uYW1lPgogICAgICAgICAgICAgICAgICA8
L2Fzc2lnbmVkUGVyc29uPgogICAgICAgICAgICAgICAgPC9hc3NpZ25lZEVudGl0eT4KICAgICAg
ICAgICAgICA8L3BlcmZvcm1lcj4KICAgICAgICAgICAgICA8cGFydGljaXBhbnQgdHlwZUNvZGU9
IkxPQyI+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4
My4xMC4yMC4xLjQ1Ii8+CiAgICAgICAgICAgICAgICA8IS0tIExvY2F0aW9uIHBhcnRpY2lwYXRp
b24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgICA8cGFydGljaXBhbnRSb2xlIGNsYXNzQ29k
ZT0iU0RMT0MiPgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgog
ICAgICAgICAgICAgICAgICA8cGxheWluZ0VudGl0eSBjbGFzc0NvZGU9IlBMQyI+CiAgICAgICAg
ICAgICAgICAgICAgPG5hbWU+PC9uYW1lPgogICAgICAgICAgICAgICAgICA8L3BsYXlpbmdFbnRp
dHk+CiAgICAgICAgICAgICAgICA8L3BhcnRpY2lwYW50Um9sZT4KICAgICAgICAgICAgICA8L3Bh
cnRpY2lwYW50PgogICAgICAgICAgICA8L2VuY291bnRlcj4KICAgICAgICAgIDwvZW50cnk+CiAg
ICAgICAgPC9zZWN0aW9uPgogICAgICA8L2NvbXBvbmVudD4KICAgICAgPCEtLUFsbGVyZ2llcy9S
ZWFjdGlvbnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAg
IDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTAyIiBhc3Np
Z25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFt
ZT0iSUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4
ODMuMTAuMjAuMS4yIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAgICAg
ICA8IS0tQWxsZXJnaWVzL1JlYWN0aW9ucyBzZWN0aW9uIHRlbXBsYXRlLS0+CiAgICAgICAgICA8
Y29kZSBjb2RlPSI0ODc2NS0yIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNv
ZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkFsbGVyZ2llcywgYWR2ZXJzZSByZWFj
dGlvbnMsIGFsZXJ0cyIvPgogICAgICAgICAgPHRpdGxlPkFsbGVyZ2llcywgIEFkdmVyc2UgUmVh
Y3Rpb25zICZhbXA7IEFsZXJ0czwvdGl0bGU+CiAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAg
PHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPgogICAgICAgICAgICAgIDx0aGVhZD4KICAg
ICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRoPlR5cGU8L3RoPgogICAgICAg
ICAgICAgICAgICA8dGg+U3Vic3RhbmNlPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkRhdGUg
W01NL0REL1lZWVldPC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90
aGVhZD4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAg
ICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwv
dGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICA8
ZW50cnkgdHlwZUNvZGU9IkRSSVYiPgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBt
b29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4x
LjExMzg4My4zLjg4LjExLjgzLjYiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQIEM4MyIv
PgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIw
LjEuMjciIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgIDx0ZW1w
bGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC41LjEiIGFzc2lnbmluZ0F1
dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIx
LjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuNS4zIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJ
SEUgUENDIi8+CiAgICAgICAgICAgICAgPCEtLUFsbGVyZ3kgYWN0IHRlbXBsYXRlIC0tPgogICAg
ICAgICAgICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgPGNvZGUg
bnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUi
Lz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFs
dWU9IiIvPgogICAgICAgICAgICAgIDwvZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICA8ZW50
cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAg
ICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4K
ICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAu
MjAuMS4xOCIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4x
LjExMzg4My4xMC4yMC4xLjI4IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAg
ICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40
LjUiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAg
PHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjYiIGFzc2lnbmlu
Z0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgPGlkIGV4dGVuc2lv
bj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iIiBjb2RlU3lzdGVt
PSIiIGRpc3BsYXlOYW1lPSIiIGNvZGVTeXN0ZW1OYW1lPSIiLz4KICAgICAgICAgICAgICAgICAg
PHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAgICAgICAg
ICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29t
cGxldGVkIi8+CiAgICAgICAgICAgICAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAg
ICAgICAgIDxsb3cgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+
CiAgICAgICAgICAgICAgICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGRpc3BsYXlOYW1lPSIiIGNv
ZGU9IiIgY29kZVN5c3RlbU5hbWU9IiIgY29kZVN5c3RlbT0iIi8+CiAgICAgICAgICAgICAgICAg
IDxwYXJ0aWNpcGFudCB0eXBlQ29kZT0iQ1NNIj4KICAgICAgICAgICAgICAgICAgICA8cGFydGlj
aXBhbnRSb2xlIGNsYXNzQ29kZT0iTUFOVSI+CiAgICAgICAgICAgICAgICAgICAgICA8cGxheWlu
Z0VudGl0eSBjbGFzc0NvZGU9Ik1NQVQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Y29kZSBj
b2RlPSIiIGNvZGVTeXN0ZW09IiIgY29kZVN5c3RlbU5hbWU9IiIgZGlzcGxheU5hbWU9IiI+CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgPG9yaWdpbmFsVGV4dD4KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICAgICAgICAg
IDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2NvZGU+CiAgICAgICAg
ICAgICAgICAgICAgICAgIDxuYW1lPjwvbmFtZT4KICAgICAgICAgICAgICAgICAgICAgIDwvcGxh
eWluZ0VudGl0eT4KICAgICAgICAgICAgICAgICAgICA8L3BhcnRpY2lwYW50Um9sZT4KICAgICAg
ICAgICAgICAgICAgPC9wYXJ0aWNpcGFudD4KICAgICAgICAgICAgICAgICAgPGVudHJ5UmVsYXRp
b25zaGlwIHR5cGVDb2RlPSJSRUZSIj4KICAgICAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24g
Y2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICAgICAgPHRl
bXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zOSIvPgogICAgICAgICAg
ICAgICAgICAgICAgPCEtLSBBbGVydCBzdGF0dXMgb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAg
ICAgICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIzMzk5OS00IiBjb2RlU3lzdGVtPSIyLjE2
Ljg0MC4xLjExMzg4My42LjEiIGRpc3BsYXlOYW1lPSJTdGF0dXMiLz4KICAgICAgICAgICAgICAg
ICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICAg
ICAgPHZhbHVlIHhzaTp0eXBlPSJDRSIgY29kZT0iNTU1NjEwMDMiIGNvZGVTeXN0ZW1OYW1lPSJT
Tk9NRUQtQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1l
PSJBY3RpdmUiLz4KICAgICAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAg
ICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlv
bj4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICAgIDxlbnRy
eVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iUkVGUiIgaW52ZXJzaW9uSW5kPSJmYWxzZSI+CiAgICAg
ICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjQu
MSIvPgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgogICAgICAg
ICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGRpc3BsYXlOYW1lPSIiIGNvZGVTeXN0ZW09IjEuMy42
LjEuNC4xLjE1MC4yNDc0LjExLjMuMS40IiBjb2RlU3lzdGVtTmFtZT0iT0VDIEtlbnlhIEVuY291
bnRlciBUeXBlcyIvPgogICAgICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICAgICAgPC9lbnRy
eVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAg
ICAgIDwvc2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICAgIDwhLS1Qcm9ibGVtcy0tPgog
ICAgICA8Y29tcG9uZW50PgogICAgICAgIDxzZWN0aW9uPgogICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS44My4xMDMiIGFzc2lnbmluZ0F1dGhvcml0
eU5hbWU9IkhJVFNQL0M4MyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40
LjEuMTkzNzYuMS41LjMuMS4zLjYiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4K
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMTEi
IGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhMNyBDQ0QiLz4KICAgICAgICAgIDwhLS1Qcm9ibGVt
cyBzZWN0aW9uIHRlbXBsYXRlLS0+CiAgICAgICAgICA8Y29kZSBjb2RlPSIxMTQ1MC00IiBjb2Rl
U3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlz
cGxheU5hbWU9IlByb2JsZW0gbGlzdCIvPgogICAgICAgICAgPHRpdGxlPlByb2JsZW1zPC90aXRs
ZT4KICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0i
MTAwJSI+CiAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAg
ICAgICAgICAgICA8dGg+UHJvYmxlbTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5FZmZlY3Rp
dmUgRGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAgICAgICAgICA8dGg+UHJvYmxlbSBT
dGF0dXM8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3RoZWFkPgog
ICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAg
ICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAg
ICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90Ym9keT4K
ICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgIDxlbnRyeSB0
eXBlQ29kZT0iRFJJViI+CiAgICAgICAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2Rl
PSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgz
LjMuODguMTEuODMuNyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNyIg
YXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjUuMSIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEu
NC4xLjE5Mzc2LjEuNS4zLjEuNC41LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0Mi
Lz4KICAgICAgICAgICAgICA8IS0tIFByb2JsZW0gYWN0IHRlbXBsYXRlIC0tPgogICAgICAgICAg
ICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZs
YXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAJ
IDxsb3cgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICA8aGlnaCB2YWx1ZT0iIi8+
CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxzdGF0dXNDb2Rl
IGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBl
Q29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMi
IG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2
Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI4IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4K
ICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41
LjMuMS40LjUiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAg
ICAgICAgPCEtLVByb2JsZW0gb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAg
ICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNv
ZGU9IjY0NTcyMDAxIiBkaXNwbGF5TmFtZT0iQ29uZGl0aW9uIiBjb2RlU3lzdGVtPSIyLjE2Ljg0
MC4xLjExMzg4My42Ljk2IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVELUNUIi8+CiAgICAgICAgICAg
ICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgog
ICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNv
ZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAg
ICAgICAgICAgICAgICA8bG93IHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPC9lZmZlY3Rp
dmVUaW1lPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBkaXNwbGF5TmFt
ZT0iIiBjb2RlPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGNvZGVTeXN0ZW09IiIvPgogICAgICAgICAg
ICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlJFRlIiPgogICAgICAgICAgICAg
ICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAg
ICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4y
MC4xLjUwIi8+CiAgICAgICAgICAgICAgICAgICAgICA8IS0tIFByb2JsZW0gc3RhdHVzIG9ic2Vy
dmF0aW9uIHRlbXBsYXRlIC0tPgogICAgICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzM5
OTktNCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBkaXNwbGF5TmFtZT0iU3Rh
dHVzIi8+CiAgICAgICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQi
Lz4KICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZSB4c2k6dHlwZT0iQ0QiIGNvZGU9IiIgY29k
ZVN5c3RlbU5hbWU9IiIgY29kZVN5c3RlbT0iIiBkaXNwbGF5TmFtZT0iIi8+CiAgICAgICAgICAg
ICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9u
c2hpcD4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRy
eVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9
IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPGFjdCBjbGFzc0Nv
ZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAgICAgICAgICAgICAg
PGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0i
IiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3NC4xMS4zLjEu
NCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMiLz4KICAgICAgICAg
ICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAg
ICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgIDwv
Y29tcG9uZW50PgogICAgICA8IS0tTWVkaWNhdGlvbnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAg
ICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEz
ODgzLjMuODguMTEuODMuMTEyIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4K
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4x
OSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRl
SWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS44IiBhc3NpZ25pbmdBdXRob3JpdHlO
YW1lPSJITDcgQ0NEIi8+CiAgICAgICAgICA8IS0tTWVkaWNhdGlvbnMgc2VjdGlvbiB0ZW1wbGF0
ZS0tPgogICAgICAgICAgPGNvZGUgY29kZT0iMTAxNjAtMCIgY29kZVN5c3RlbT0iMi4xNi44NDAu
MS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJIaXN0b3J5
IG9mIG1lZGljYXRpb24gdXNlIi8+CiAgICAgICAgICA8dGl0bGU+TWVkaWNhdGlvbnM8L3RpdGxl
PgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIx
MDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0aD5NZWRpY2F0aW9uPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkVmZmVj
dGl2ZSBEYXRlIFtNTS9ERC9ZWVlZXTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5Eb3NlPC90
aD4KICAgICAgICAgICAgICAgICAgPHRoPkRheXM8L3RoPgogICAgICAgICAgICAgICAgICA8dGg+
QWRoZXJlbmNlIFN0YXR1cyAmYW1wOyBSZWFzb24ocyk8L3RoPgogICAgICAgICAgICAgICAgPC90
cj4KICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAg
ICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAg
IDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAg
PHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPC90
cj4KICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAg
PC90ZXh0PgogICAgICAgICAgPGVudHJ5IHR5cGVDb2RlPSJEUklWIj4KICAgICAgICAgICAgPHN1
YnN0YW5jZUFkbWluaXN0cmF0aW9uIGNsYXNzQ29kZT0iU0JBRE0iIG1vb2RDb2RlPSJFVk4iPgog
ICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEu
ODMuOCIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAgICAg
PHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNCIgYXNzaWduaW5n
QXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4z
LjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjciIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQ
Q0MiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4x
LjUuMy4xLjQuNy4xIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAg
ICAgICAgPCEtLU1lZGljYXRpb24gYWN0aXZpdHkgdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAg
PGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2Rl
PSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZSB4c2k6dHlwZT0iSVZM
X1RTIj4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgPGhp
Z2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAg
ICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAg
ICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgIDxjb25zdW1hYmxlIHR5cGVDb2RlPSJD
U00iPgogICAgICAgICAgICAgICAgPG1hbnVmYWN0dXJlZFByb2R1Y3Q+CiAgICAgICAgICAgICAg
ICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuOC4yIiBh
c3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRl
bXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS41MyIgYXNzaWduaW5nQXV0
aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEu
My42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC43LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklI
RSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgPCEtLSBQcm9kdWN0IHRlbXBsYXRlIC0tPgogICAg
ICAgICAgICAgICAgICA8bWFudWZhY3R1cmVkTWF0ZXJpYWwgY2xhc3NDb2RlPSJNTUFUIj4KICAg
ICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGNvZGVTeXN0ZW09IiIgZGlzcGxheU5hbWU9
IiIgY29kZVN5c3RlbU5hbWU9IiI+CiAgICAgICAgICAgICAgICAgICAgICA8b3JpZ2luYWxUZXh0
PgogICAgICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIiLz4KICAgICAgICAg
ICAgICAgICAgICAgIDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAgIDwvY29kZT4K
ICAgICAgICAgICAgICAgICAgPC9tYW51ZmFjdHVyZWRNYXRlcmlhbD4KICAgICAgICAgICAgICAg
IDwvbWFudWZhY3R1cmVkUHJvZHVjdD4KICAgICAgICAgICAgICA8L2NvbnN1bWFibGU+CiAgICAg
ICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJSRUZSIj4KICAgICAgICAgICAg
ICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAg
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNDci
Lz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzM5OTktNCIgZGlzcGxheU5hbWU9IlN0
YXR1cyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFtZT0i
TE9JTkMiLz4KICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0eXBlPSJDRSIgY29kZT0iNTU1
NjEwMDMiIGRpc3BsYXlOYW1lPSJBY3RpdmUiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgz
LjYuOTYiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiLz4KICAgICAgICAgICAgICAgIDwvb2Jz
ZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAg
ICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0idHJ1ZSI+
CiAgICAgICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAg
ICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4x
MS44My4xMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAg
ICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNDAiIGFz
c2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJ
ZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMiIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0ODc2Ny04IiBk
aXNwbGF5TmFtZT0iQ29tbWVudCIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBjb2RlU3lzdGVtPSIy
LjE2Ljg0MC4xLjExMzg4My42LjEiPgogICAgICAgICAgICAgICAgICAgIDxvcmlnaW5hbFRleHQ+
CiAgICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIiLz4KICAgICAgICAgICAg
ICAgICAgICA8L29yaWdpbmFsVGV4dD4KICAgICAgICAgICAgICAgICAgPC9jb2RlPgogICAgICAg
ICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIi
Lz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29k
ZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAg
IDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5
cGVDb2RlPSJSRUZSIiBpbnZlcnNpb25JbmQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxhY3Qg
Y2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxh
dGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuNC4xIi8+CiAgICAgICAgICAg
ICAgICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgICAgIDxjb2Rl
IGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbT0iMS4zLjYuMS40LjEuMTUwLjI0NzQu
MTEuMy4xLjQiIGNvZGVTeXN0ZW1OYW1lPSJPRUMgS2VueWEgRW5jb3VudGVyIFR5cGVzIi8+CiAg
ICAgICAgICAgICAgICA8L2FjdD4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgog
ICAgICAgICAgICA8L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uPgogICAgICAgICAgPC9lbnRyeT4K
ICAgICAgICA8L3NlY3Rpb24+CiAgICAgIDwvY29tcG9uZW50PgogICAgICA8IS0tVml0YWwgU2ln
bnMtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0ZW1w
bGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMTYiIGFzc2lnbmluZ0F1dGhv
cml0eU5hbWU9IkhMNyBDQ0QiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQw
LjEuMTEzODgzLjMuODguMTEuODMuMTE5IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9D
ODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4z
LjEuMS41LjMuMiIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAg
PHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4zLjI1IiBhc3NpZ25p
bmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICA8IS0tVml0YWwgU2lnbnMgc2Vj
dGlvbiB0ZW1wbGF0ZS0tPgogICAgICAgICAgPGNvZGUgY29kZT0iODcxNi0zIiBjb2RlU3lzdGVt
PSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5h
bWU9IlZpdGFsIHNpZ25zIi8+CiAgICAgICAgICA8dGl0bGU+Vml0YWwgU2lnbnM8L3RpdGxlPgog
ICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIxMDAl
Ij4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAg
ICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+RGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAg
ICAgICAgICA8dGg+PC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90
aGVhZD4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQg
SUQ9IlZpdGFsSHQiPkhlaWdodCAoY20pPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3Ro
PgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAg
ICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAg
ICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9IlZpdGFsV3QiPldlaWdodCAoa2cpPC9jb250ZW50
PgogICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAg
ICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAg
IDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9IlZpdGFs
Qm1pIj5CTUk8L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAg
ICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3Rib2R5
PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5
IHR5cGVDb2RlPSJEUklWIj4KICAgICAgICAgICAgPG9yZ2FuaXplciBjbGFzc0NvZGU9IkNMVVNU
RVIiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYu
ODQwLjEuMTEzODgzLjEwLjIwLjEuMzIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgog
ICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEu
MzUiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0
ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMy4xIiBhc3NpZ25pbmdBdXRo
b3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgPCEtLSBWaXRhbCBzaWducyBvcmdh
bml6ZXIgdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIi
Lz4KICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0NjY4MDAwNSIgY29kZVN5c3RlbT0iMi4xNi44
NDAuMS4xMTM4ODMuNi45NiIgZGlzcGxheU5hbWU9IlZpdGFsIHNpZ25zIiBjb2RlU3lzdGVtTmFt
ZT0iU05PTUVELUNUIi8+CiAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVk
Ii8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIvPgogICAgICAgICAgICAg
IDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMi
IG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2
Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE0IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRT
UCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4x
MTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAg
ICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4x
MyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8
dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTMuMiIgYXNzaWdu
aW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgkJCQkJCQkJCQogICAgICAgICAgICAgICAgICA8
IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlk
IGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iODMw
Mi0yIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJM
T0lOQyIgZGlzcGxheU5hbWU9IkJvZHkgSGVpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICA8dHJh
bnNsYXRpb24gY29kZT0iNTAzNzMwMDAiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYu
OTYiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGRpc3BsYXlOYW1lPSJCb2R5IGhlaWdodCBt
ZWFzdXJlIi8+CiAgICAgICAgICAgICAgICAgIDwvY29kZT4KICAgICAgICAgICAgICAgICAgPHRl
eHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI1ZpdGFsSHQiLz4KICAg
ICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2Rl
PSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIv
PgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlBRIiB2YWx1ZT0iIiB1bml0PSJj
bSIvPgogICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAg
ICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICAg
IDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAg
ICAgICAgIDwvY29tcG9uZW50PgogICAgICAgICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAg
ICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAg
ICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgz
LjE0IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAg
ICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWdu
aW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJv
b3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFt
ZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4x
LjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTMuMiIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBD
QyIvPgkJCQkJCQkJCQogICAgICAgICAgICAgICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0
ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4K
ICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzE0MS05IiBjb2RlU3lzdGVtPSIyLjE2Ljg0
MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkJvZHkg
V2VpZ2h0IE1lYXN1cmVkIj4KICAgICAgICAgICAgICAgICAgICA8dHJhbnNsYXRpb24gY29kZT0i
MjcxMTMwMDEiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGNvZGVTeXN0ZW1O
YW1lPSJTTk9NRUQtQ1QiIGRpc3BsYXlOYW1lPSJCb2R5IHdlaWdodCIvPgogICAgICAgICAgICAg
ICAgICA8L2NvZGU+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAg
IDxyZWZlcmVuY2UgdmFsdWU9IiNWaXRhbFd0Ii8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4K
ICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAg
ICAgICAgICAgIDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPHZh
bHVlIHhzaTp0eXBlPSJQUSIgdmFsdWU9IiIgdW5pdD0ia2ciLz4KICAgICAgICAgICAgICAgICAg
PHJlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvblJhbmdlIG51
bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICA8L3JlZmVyZW5jZVJhbmdlPgogICAg
ICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICA8L2NvbXBvbmVudD4KICAg
ICAgICAgICAgICA8Y29tcG9uZW50PgogICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNz
Q29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS44My4xNCIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIu
MTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMzEiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIv
PgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4x
LjUuMy4xLjQuMTMiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjEz
LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAg
PCEtLSBSZXN1bHQgb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgICAgIDxp
ZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjM5
MTU2LTUiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9
IkxPSU5DIiBkaXNwbGF5TmFtZT0iQm9keSBtYXNzIGluZGV4IChCTUkpIj4KICAgICAgICAgICAg
ICAgICAgICA8dHJhbnNsYXRpb24gY29kZT0iNjA2MjEwMDkiIGNvZGVTeXN0ZW09IjIuMTYuODQw
LjEuMTEzODgzLjYuOTYiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQtQ1QiIGRpc3BsYXlOYW1lPSJC
b2R5IG1hc3MgaW5kZXgiLz4KICAgICAgICAgICAgICAgICAgPC9jb2RlPgogICAgICAgICAgICAg
ICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjVml0YWxC
bWkiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVz
Q29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUg
dmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlJFQUwiIHZhbHVl
PSIiLz4KICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAg
ICAgIDxvYnNlcnZhdGlvblJhbmdlIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAg
ICA8L3JlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAg
ICAgICAgICA8L2NvbXBvbmVudD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlw
ZUNvZGU9IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPGFjdCBj
bGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0
ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAgICAgICAg
ICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUg
Y29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3NC4x
MS4zLjEuNCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMiLz4KICAg
ICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAg
ICAgICAgICAgIDwvb3JnYW5pemVyPgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICA8L3NlY3Rp
b24+CiAgICAgIDwvY29tcG9uZW50PgogICAgICA8IS0tRGlhZ25vc3RpYyBSZXN1bHRzLS0+CiAg
ICAgIDxjb21wb25lbnQ+CiAgICAgICAgPHNlY3Rpb24+CiAgICAgICAgICA8dGVtcGxhdGVJZCBy
b290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjEyMiIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSElUU1AvQzgzIi8+CiAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQu
MS4xOTM3Ni4xLjUuMy4xLjMuMjgiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4K
ICAgICAgICAgIDwhLS1EaWFnbm9zdGljIFJlc3VsdHMgc2VjdGlvbiB0ZW1wbGF0ZS0tPgogICAg
ICAgICAgPGNvZGUgY29kZT0iMzA5NTQtMiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMu
Ni4xIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJSZWxldmFudCBkaWFnbm9z
dGljIHRlc3RzL2xhYm9yYXRvcnkgZGF0YSIvPgogICAgICAgICAgPHRpdGxlPlJlc3VsdHM8L3Rp
dGxlPgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRo
PSIxMDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAg
ICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+RGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAg
ICAgICAgICAgICAgICA8dGg+PC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAg
ICAgPC90aGVhZD4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAg
ICAgICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNv
bnRlbnQgSUQ9IkxhYkNkNCI+Q0Q0IChjZWxscy91bCBhbmQgJSk8L2NvbnRlbnQ+CiAgICAgICAg
ICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAg
ICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRoIGFsaWdu
PSJsZWZ0Ij4KICAgICAgICAgICAgICAgICAgICA8Y29udGVudCBJRD0iTGFiSGdiIj5IZ2IgKGcv
ZGwpPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8
dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAg
ICAgICAgICAgICAgIDx0aCBhbGlnbj0ibGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRl
bnQgSUQ9IkxhYlJwciI+UlBSPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RoPgogICAg
ICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAg
ICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGggYWxpZ249ImxlZnQiPgogICAgICAgICAg
ICAgICAgICAgIDxjb250ZW50IElEPSJMYWJUYiI+VEIgU3B1dHVtPC9jb250ZW50PgogICAgICAg
ICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAg
ICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aCBhbGln
bj0ibGVmdCI+PC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICA8L3Rib2R5
PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5
IHR5cGVDb2RlPSJEUklWIj4KICAgICAgICAgICAgPG9yZ2FuaXplciBjbGFzc0NvZGU9IkNMVVNU
RVIiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYu
ODQwLjEuMTEzODgzLjEwLjIwLjEuMzIiLz4KICAgICAgICAgICAgICA8IS0tUmVzdWx0IG9yZ2Fu
aXplciB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIv
PgogICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjU2ODUwLTEiIGNvZGVTeXN0ZW1OYW1lPSJMT0lO
QyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBkaXNwbGF5TmFtZT0iSW50ZXJw
cmV0YXRpb24gYW5kIHJldmlldyBvZiBsYWJvcmF0b3J5IHJlc3VsdHMiLz4KICAgICAgICAgICAg
ICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZl
VGltZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgPGNvbXBvbmVudD4KICAgICAgICAgICAgICAg
IDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAg
ICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTUi
IGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQIEM4MyIvPgogICAgICAgICAgICAgICAgICA8
dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjMxIiBhc3NpZ25pbmdB
dXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0i
MS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjEzIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJ
SEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDwhLS0gUmVzdWx0IG9ic2VydmF0aW9uIHRlbXBs
YXRlIC0tPgogICAgICAgICAgICAgICAgICA8aWQgZXh0ZW5zaW9uPSIiIHJvb3Q9IiIvPgogICAg
ICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI4MTI3LTMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEu
MTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iQ0Q0IGNlbGxz
Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVu
Y2UgdmFsdWU9IiNMYWJDZDQiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAg
ICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAg
PGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5
cGU9IlBRIiB2YWx1ZT0iIiB1bml0PSJjZWxscy91bCIvPgogICAgICAgICAgICAgICAgICA8cmVm
ZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZs
YXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICAgIDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAg
ICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvY29tcG9uZW50PgogICAgICAg
ICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2Rl
PSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290
PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE1IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1l
PSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44
NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAg
ICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4z
LjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAg
ICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAg
ICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29k
ZT0iODEyOC0xIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGNvZGVTeXN0ZW1O
YW1lPSJMT0lOQyIgZGlzcGxheU5hbWU9IkNENCBjZWxscy8xMDAiLz4KICAgICAgICAgICAgICAg
ICAgPHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI0xhYkNkNCIv
PgogICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2Rl
IGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZSB2YWx1
ZT0iIi8+CiAgICAgICAgICAgICAgICAgIDx2YWx1ZSB4c2k6dHlwZT0iSU5UIiB2YWx1ZT0iIi8+
CiAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2VSYW5nZT4KICAgICAgICAgICAgICAgICAgICA8
b2JzZXJ2YXRpb25SYW5nZSBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICAgICAgPC9y
ZWZlcmVuY2VSYW5nZT4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAg
ICAgPC9jb21wb25lbnQ+CiAgICAgICAgICAgICA8Y29tcG9uZW50PgogICAgICAgICAgICAgICAg
PG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAg
ICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS44My4xNSIg
YXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AgQzgzIi8+CiAgICAgICAgICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMzEiIGFzc2lnbmluZ0F1
dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIx
LjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTMiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklI
RSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgPCEtLSBSZXN1bHQgb2JzZXJ2YXRpb24gdGVtcGxh
dGUgLS0+CiAgICAgICAgICAgICAgICAgIDxpZCBleHRlbnNpb249IiIgcm9vdD0iIi8+CiAgICAg
ICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjMwMzEzLTEiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEu
MTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFtZT0iSGVtb2dsb2Jp
biIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJl
bmNlIHZhbHVlPSIjTGFiSGdiIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAg
ICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICAg
IDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0
eXBlPSJQUSIgdmFsdWU9IiIgdW5pdD0iZy9kbCIvPgogICAgICAgICAgICAgICAgICA8cmVmZXJl
bmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZsYXZv
cj0iVU5LIi8+CiAgICAgICAgICAgICAgICAgIDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAg
ICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvY29tcG9uZW50PgogICAgICAgICAg
ICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJP
QlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIy
LjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE1IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJI
SVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAu
MS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAg
ICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEu
NC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAg
ICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAg
PGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0i
MjA1MDctMCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIiBjb2RlU3lzdGVtTmFt
ZT0iTE9JTkMiIGRpc3BsYXlOYW1lPSJSZWFnaW4gQWIgaW4gc2VydW0gYnkgUlBSIi8+CiAgICAg
ICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9
IiNMYWJScHIiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8
c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2
ZVRpbWUgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlNUIj48
L3ZhbHVlPgogICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAg
ICAgICAgPG9ic2VydmF0aW9uUmFuZ2UgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAg
ICAgIDwvcmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAg
ICAgICAgICAgIDwvY29tcG9uZW50PgogICAgICAgICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAg
ICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAg
ICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjEx
LjgzLjE1IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAg
ICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNz
aWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlk
IHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5
TmFtZT0iSUhFIFBDQyIvPgogICAgICAgICAgICAgICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlv
biB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIi
Lz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMTE0NzctNyIgY29kZVN5c3RlbT0iMi4x
Ni44NDAuMS4xMTM4ODMuNi4xIiBkaXNwbGF5TmFtZT0iTWljcm9zY29waWMgb2JzZXJ2YXRpb24g
aW4gc3B1dHVtIGJ5IGFjaWQgZmFzdCBzdGFpbiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4K
ICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjTGFiVGIiLz4KICAgICAgICAg
ICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21w
bGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWUgdmFsdWU9IiIvPgogICAg
ICAgICAgICAgICAgICA8dmFsdWUgeHNpOnR5cGU9IlNUIj48L3ZhbHVlPgogICAgICAgICAgICAg
ICAgICA8cmVmZXJlbmNlUmFuZ2U+CiAgICAgICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uUmFu
Z2UgbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgICAgIDwvcmVmZXJlbmNlUmFuZ2U+
CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvY29tcG9uZW50
PgogICAgICAgICAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24g
Y2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxh
dGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE1IiBhc3NpZ25pbmdBdXRo
b3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9v
dD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0i
Q0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5
Mzc2LjEuNS4zLjEuNC4xMyIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSUhFIFBDQyIvPgogICAg
ICAgICAgICAgICAgICA8IS0tIFJlc3VsdCBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAg
ICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAg
PGNvZGUgY29kZT0iIiBjb2RlU3lzdGVtPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGRpc3BsYXlOYW1l
PSIiLz4KICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVy
ZW5jZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAg
ICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICAgIDxlZmZl
Y3RpdmVUaW1lIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0eXBlPSJT
VCI+PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZVJhbmdlPgogICAgICAgICAg
ICAgICAgICAgIDxvYnNlcnZhdGlvblJhbmdlIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAg
ICAgICAgICA8L3JlZmVyZW5jZVJhbmdlPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4K
ICAgICAgICAgICAgICA8L2NvbXBvbmVudD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNo
aXAgdHlwZUNvZGU9IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAg
PGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAg
ICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAg
PGNvZGUgY29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAu
MjQ3NC4xMS4zLjEuNCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMi
Lz4KICAgICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNo
aXA+CiAgICAgICAgICAgIDwvb3JnYW5pemVyPgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICA8
L3NlY3Rpb24+CiAgICAgIDwvY29tcG9uZW50PgogICAgICA8IS0tRmFtaWx5IEhpc3RvcnkgLS0+
CiAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgPHNlY3Rpb24+CiAgICAgICAgICA8dGVtcGxhdGVJ
ZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjEyNSIgYXNzaWduaW5nQXV0aG9y
aXR5TmFtZT0iSElUU1AvQzgzIi8+CiAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0
MC4xLjExMzg4My4xMC4yMC4xLjQiIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAg
ICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS4zLjE0IiBh
c3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICA8IS0tIEZhbWlseSBo
aXN0b3J5IHNlY3Rpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICA8Y29kZSBjb2RlPSIxMDE1Ny02
IiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiIGRpc3BsYXlOYW1lPSJIaXN0b3J5
IG9mIGZhbWlseSBtZW1iZXIgZGlzZWFzZXMiLz4KICAgICAgICAgIDx0aXRsZT5GYW1pbHkgSGlz
dG9yeTwvdGl0bGU+CiAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgPHBhcmFncmFwaD48L3Bh
cmFncmFwaD4KICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPgogICAg
ICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAg
PHRoPjwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5BZ2U8L3RoPgogICAgICAgICAgICAgICAg
ICA8dGg+SW4gQ2FyZT88L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8
L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAg
ICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAg
ICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAg
PC90Ym9keT4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgIDwvdGV4dD4KICAgICAgICAg
IDxlbnRyeSB0eXBlQ29kZT0iRFJJViI+CiAgICAgICAgICAgIDxvcmdhbml6ZXIgbW9vZENvZGU9
IkVWTiIgY2xhc3NDb2RlPSJDTFVTVEVSIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290
PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjE4IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1l
PSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4x
LjExMzg4My4xMC4yMC4xLjIzIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAg
ICAgICAgICA8dGVtcGxhdGVJZCByb290PSIxLjMuNi4xLjQuMS4xOTM3Ni4xLjUuMy4xLjQuMTUi
IGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICA8IS0tIEZh
bWlseSBoaXN0b3J5IG9yZ2FuaXplciB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICA8c3RhdHVz
Q29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICA8c3ViamVjdD4KICAgICAgICAg
ICAgICAgIDxyZWxhdGVkU3ViamVjdCBjbGFzc0NvZGU9IlBSUyI+CiAgICAgICAgICAgICAgICAg
IDxjb2RlIGNvZGU9IiIgZGlzcGxheU5hbWU9IiIgY29kZVN5c3RlbU5hbWU9IkhMNyBGYW1pbHlN
ZW1iZXIiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuMTExIj4KICAgICAgICAgICAg
ICAgICAgICA8dHJhbnNsYXRpb24gY29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtTmFt
ZT0iT0VDIEtlbnlhIFJlbGF0aW9uc2hpcCBSb2xlIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4x
NTAuMjQ3NC4xMS4zLjEuMyIvPgogICAgICAgICAgICAgICAgICA8L2NvZGU+CiAgICAgICAgICAg
ICAgICAgIDxhZGRyLz4KICAgICAgICAgICAgICAgICAgPHRlbGVjb20gbnVsbEZsYXZvcj0iVU5L
Ii8+CiAgICAgICAgICAgICAgICAgIDxzdWJqZWN0PgogICAgICAgICAgICAgICAgICAgIDxuYW1l
Lz4KICAgICAgICAgICAgICAgICAgICA8YWRtaW5pc3RyYXRpdmVHZW5kZXJDb2RlIG51bGxGbGF2
b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICAgIDxiaXJ0aFRpbWUgbnVsbEZsYXZvcj0iVU5L
Ii8+CiAgICAgICAgICAgICAgICAgIDwvc3ViamVjdD4KICAgICAgICAgICAgICAgIDwvcmVsYXRl
ZFN1YmplY3Q+CiAgICAgICAgICAgICAgPC9zdWJqZWN0PgogICAgICAgICAgICAgIDxjb21wb25l
bnQ+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2Rl
PSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjEx
Mzg4My4xMC4yMC4xLjIyIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiLz4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjEz
IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4xMy4zIiBhc3NpZ25p
bmdBdXRob3JpdHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDwhLS1GYW1pbHkg
aGlzdG9yeSBvYnNlcnZhdGlvbiB0ZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgPGlkIGV4
dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMzY1ODY2
MDAyIiBkaXNwbGF5TmFtZT0iRmluZGluZyBvZiBISVYgc3RhdHVzIiBjb2RlU3lzdGVtTmFtZT0i
U05PTUVELUNUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ij4KICAgICAgICAg
ICAgICAgICAgICA8b3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5j
ZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgICAgPC9vcmlnaW5hbFRleHQ+CiAgICAgICAg
ICAgICAgICAgIDwvY29kZT4KICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAg
ICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAg
ICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAg
ICAgICAgIDxlZmZlY3RpdmVUaW1lIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAg
ICA8dmFsdWUgeHNpOnR5cGU9IkNEIiBjb2RlPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGNvZGVTeXN0
ZW09IiIgZGlzcGxheU5hbWU9IiIvPgogICAgICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNo
aXAgdHlwZUNvZGU9IlNVQkoiIGludmVyc2lvbkluZD0idHJ1ZSI+CiAgICAgICAgICAgICAgICAg
ICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAg
ICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjgzLjExIiBh
c3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAgICAgICAgICAgICAg
IDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNDAiIGFzc2lnbmlu
Z0F1dGhvcml0eU5hbWU9IkNDRCIvPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQg
cm9vdD0iMS4zLjYuMS40LjEuMTkzNzYuMS41LjMuMS40LjIiIGFzc2lnbmluZ0F1dGhvcml0eU5h
bWU9IklIRSBQQ0MiLz4KICAgICAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjQ4NzY3LTgi
IGRpc3BsYXlOYW1lPSJDb21tZW50IiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGVTeXN0ZW09
IjIuMTYuODQwLjEuMTEzODgzLjYuMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxvcmlnaW5h
bFRleHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iIi8+CiAg
ICAgICAgICAgICAgICAgICAgICAgIDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICAg
ICAgPC9jb2RlPgogICAgICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAgICAg
ICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICAgICAgPC90ZXh0
PgogICAgICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAg
ICAgICAgICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlv
bnNoaXA+CiAgICAgICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VC
SiIgaW52ZXJzaW9uSW5kPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24g
Y2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICAgICAgPHRl
bXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4zOCIvPgogICAgICAgICAg
ICAgICAgICAgICAgPCEtLSBBZ2Ugb2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAg
ICAgICAgICAgICA8Y29kZSBjb2RlPSIzOTc2NTkwMDgiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQt
Q1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiIGRpc3BsYXlOYW1lPSJBZ2Ui
Lz4KICAgICAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgog
ICAgICAgICAgICAgICAgICAgICAgPHZhbHVlIHhzaTp0eXBlPSJJTlQiIHZhbHVlPSIiLz4KICAg
ICAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgICAgICA8L2VudHJ5
UmVsYXRpb25zaGlwPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAg
ICA8L2NvbXBvbmVudD4KICAgICAgICAgICAgPC9vcmdhbml6ZXI+CiAgICAgICAgICA8L2VudHJ5
PgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICAgIDwhLS1QbGFuIG9m
IENhcmUtLT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0
ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuODMuMTI0IiBhc3NpZ25p
bmdBdXRob3JpdHlOYW1lPSJISVRTUC9DODMiLz4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9
IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuMy4zMSIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0i
SUhFIFBDQyIvPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMu
MTAuMjAuMi43IiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAgICAgICA8
dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjEwIiBhc3NpZ25pbmdB
dXRob3JpdHlOYW1lPSJITDcgQ0NEIi8+CiAgICAgICAgICA8IS0tUGxhbiBvZiBDYXJlIHNlY3Rp
b24gdGVtcGxhdGUtLT4KICAgICAgICAgIDxjb2RlIGNvZGU9IjE4Nzc2LTUiIGNvZGVTeXN0ZW09
IjIuMTYuODQwLjEuMTEzODgzLjYuMSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBkaXNwbGF5TmFt
ZT0iVHJlYXRtZW50IHBsYW4iLz4KICAgICAgICAgIDx0aXRsZT5QbGFuIG9mIENhcmU8L3RpdGxl
PgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIx
MDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAg
ICAgICAgICAgIDx0aD5QbGFubmVkIEFjdGl2aXR5PC90aD4KICAgICAgICAgICAgICAgICAgPHRo
PlBsYW5uZWQgRGF0ZSBbTU0vREQvWVlZWV08L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAg
ICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAg
IDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48
L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAg
ICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5IHR5cGVDb2Rl
PSJEUklWIj4KICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29k
ZT0iUlFPIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4
My4xMC4yMC4xLjI1Ii8+CiAgICAgICAgICAgICAgPCEtLSBQbGFuIG9mIENhcmUgYWN0aXZpdHkg
b2JzZXJ2YXRpb24gdGVtcGxhdGUgLS0+CiAgICAgICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiBy
b290PSIiLz4KICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGNvZGVTeXN0ZW1OYW1lPSIiIGNv
ZGVTeXN0ZW09IiIgZGlzcGxheU5hbWU9IiIvPgogICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNv
ZGU9Im5ldyIvPgogICAgICAgICAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAg
PGxvdyB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAg
ICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiIgaW52ZXJzaW9uSW5kPSJ0cnVl
Ij4KICAgICAgICAgICAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPgog
ICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4
LjExLjgzLjExIiBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUCBDODMiLz4KICAgICAgICAg
ICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS40MCIg
YXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0
ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC4yIiBhc3NpZ25pbmdBdXRob3Jp
dHlOYW1lPSJJSEUgUENDIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjQ4NzY3LTgi
IGRpc3BsYXlOYW1lPSJDb21tZW50IiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGVTeXN0ZW09
IjIuMTYuODQwLjEuMTEzODgzLjYuMSI+CiAgICAgICAgICAgICAgICAgICAgPG9yaWdpbmFsVGV4
dD4KICAgICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiIvPgogICAgICAgICAg
ICAgICAgICAgIDwvb3JpZ2luYWxUZXh0PgogICAgICAgICAgICAgICAgICA8L2NvZGU+CiAgICAg
ICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9
IiIvPgogICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXND
b2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICAg
ICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAg
dHlwZUNvZGU9IlJFRlIiIGludmVyc2lvbkluZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPGFj
dCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1w
bGF0ZUlkIHJvb3Q9IjEuMy42LjEuNC4xLjE5Mzc2LjEuNS4zLjEuNC40LjEiLz4KICAgICAgICAg
ICAgICAgICAgPGlkIGV4dGVuc2lvbj0iIiByb290PSIiLz4KICAgICAgICAgICAgICAgICAgPGNv
ZGUgY29kZT0iIiBkaXNwbGF5TmFtZT0iIiBjb2RlU3lzdGVtPSIxLjMuNi4xLjQuMS4xNTAuMjQ3
NC4xMS4zLjEuNCIgY29kZVN5c3RlbU5hbWU9Ik9FQyBLZW55YSBFbmNvdW50ZXIgVHlwZXMiLz4K
ICAgICAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+
CiAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgIDwv
c2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICA8L3N0cnVjdHVyZWRCb2R5PgogIDwvY29t
cG9uZW50Pgo8L0NsaW5pY2FsRG9jdW1lbnQ+</outboundTemplate>
        <inboundProtocol>DELIMITED</inboundProtocol>
        <outboundProtocol>HL7V3</outboundProtocol>
        <inboundProperties>
          <property name="batchGroupingColumn"></property>
          <property name="batchMessageDelimiter"></property>
          <property name="batchMessageDelimiterIncluded">false</property>
          <property name="batchScript"></property>
          <property name="batchSkipRecords">0</property>
          <property name="batchSplitByRecord">true</property>
          <property name="columnDelimiter">\t</property>
          <property name="columnNames"></property>
          <property name="columnWidths"></property>
          <property name="escapeWithDoubleQuote">false</property>
          <property name="ignoreCR">true</property>
          <property name="numberedRows">false</property>
          <property name="quoteChar"></property>
          <property name="quoteEscapeChar">\</property>
          <property name="recordDelimiter">\n</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>