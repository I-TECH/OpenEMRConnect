//            if (recordSource.isMustBeLinked()) {
//                RecordSource oneSideRecordSource = getOneSideRecordSource(recordMap, recordSource);
//                linkedRecordList.addAll(link(oneSideRecordSource, recordMap.get(oneSideRecordSource),
//                        recordSource, recordMap.get(recordSource)));
//            }

//    private RecordSource getOneSideRecordSource(Map<RecordSource, List<Record>> recordMap,
//            RecordSource manySideRecordSource) {
//        RecordSource oneSideRecordSource = null;
//        String oneSideSTableName = manySideRecordSource.getOneSideTableName();
//        for (RecordSource recordSource : recordMap.keySet()) {
//            if (recordSource.getTableName().equals(oneSideSTableName)) {
//                oneSideRecordSource = recordSource;
//                break;
//            }
//        }
//        return oneSideRecordSource;
//    }
//
//    private List<LinkedRecord> link(RecordSource oneSideRecordSource, List<Record> oneSideRecordList,
//            RecordSource manySideRecordSource, List<Record> manySideRecordList) {
//        List<LinkedRecord> linkedRecordList = new ArrayList<LinkedRecord>();
//        Map<String, LinkedRecord> linkedRecordMap = new LinkedHashMap<String, LinkedRecord>();
//        for (Record record : manySideRecordList) {
//            List<String> primaryKeyValueList = new ArrayList<String>(record.getOrdinaryCellMap().values());
//            String primaryKeyValue = primaryKeyValueList.get(0);
//            for (Column column : record.getOrdinaryCellMap().keySet()) {
//                if (column.getName().equalsIgnoreCase("ARTID")) {
//                    primaryKeyValue = record.getOrdinaryCellMap().get(column);
//                    break;
//                }
//            }
//            LinkedRecord linkedRecord;
//            if (linkedRecordMap.containsKey(primaryKeyValue)) {
//                linkedRecord = linkedRecordMap.get(primaryKeyValue);
//            } else {
//                linkedRecord = getIt(oneSideRecordList, primaryKeyValue, oneSideRecordSource);
//                linkedRecordMap.put(primaryKeyValue, linkedRecord);
//                linkedRecordList.add(linkedRecord);
//            }
//            if (linkedRecord == null) {
//                System.out.println("");
//            }
//            if (linkedRecord.getLinkedRecordList() == null) {
//                linkedRecord.setLinkedRecordList(new ArrayList<LinkedRecord>());
//            }
//            LinkedRecord lr = new LinkedRecord(record);
//            lr.setRecordSource(manySideRecordSource);
//            linkedRecord.getLinkedRecordList().add(lr);
//        }
//        return linkedRecordList;
//    }
//
//    private LinkedRecord getIt(List<Record> recordList, String primaryKeyValue, RecordSource recordSource) {
//        LinkedRecord linkedRecord = null;
//        Column primaryKeyColumn = null;
//        for (Record record : recordList) {
//            List<Column> primaryKeyColumnList = new ArrayList<Column>(record.getPrimaryKeyCellMap().keySet());
//            primaryKeyColumn = primaryKeyColumnList.get(0);
//            List<String> primaryKeyValueList = new ArrayList<String>(record.getPrimaryKeyCellMap().values());
//            String pkv = primaryKeyValueList.get(0);
//            if (pkv.equalsIgnoreCase(primaryKeyValue)) {
//                linkedRecord = new LinkedRecord(record);
//                break;
//            }
//        }
//        if (linkedRecord == null) {
//            linkedRecord = mineLinkedRecord(primaryKeyColumn, primaryKeyValue, recordSource);
//        }
//        return linkedRecord;
//    }
//
//    private LinkedRecord mineLinkedRecord(Column primColumn, String primaryKeyValue, RecordSource recordSource) {
//        try {
//            return new LinkedRecord(recordMiner.createRecord(primColumn, primaryKeyValue, recordSource));
//        } catch (SQLException ex) {
//            Logger.getLogger(RecordLinker.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return null;
//    }

public Record createRecord(Column primaryKeyColumn, String primaryKeyValue, RecordSource recordSource) throws SQLException {
        Statement statement = connection.createStatement();
        ResultSet resultSet = null;
        String query = "SELECT " + getColumnNamesAsString(recordSource) + " "
                + "FROM " + recordSource.getTableName() + " ";
        query += "WHERE " + primaryKeyColumn.getName() + " = '" + primaryKeyValue + "' ";
//        int index = 0;
//        for (Column column : transaction.getPrimaryKey().keySet()) {
//            String primaryKeyValue = transaction.getPrimaryKey().get(column);
//            primaryKeyValue = (column.isQuote() ? "'" + primaryKeyValue + "'" : primaryKeyValue);
//            if (index == 0) {
//                query += "WHERE " + column.getName() + " = " + primaryKeyValue + " ";
//            } else {
//                query += "AND " + column.getName() + " = " + primaryKeyValue + " ";
//            }
//            index++;
//        }
        Record record = new Record();
//        record.setPrimaryKeyCellMap(transaction.getPrimaryKey());
        try {
            resultSet = statement.executeQuery(query);
            Map<Column, String> columnMap;
            if (resultSet.next()) {
                columnMap = new LinkedHashMap<Column, String>();
                for (Column column : recordSource.getColumnList()) {
                    columnMap.put(column, resultSet.getString(column.getName()));
                }
                record.setOrdinaryCellMap(columnMap);
            } else {
                return null;
            }
        } finally {
            if (resultSet != null) {
                resultSet.close();
            }
            if (statement != null) {
                statement.close();
            }
        }
        return record;
    }